/*
 * generated by Xtext 2.33.0
 */
parser grammar InternalGitHubActionsParser;

options {
	tokenVocab=InternalGitHubActionsLexer;
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@header {
package d.fe.up.pt.cicd.gha.dsl.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import d.fe.up.pt.cicd.gha.dsl.services.GitHubActionsGrammarAccess;

}
@members {
	private GitHubActionsGrammarAccess grammarAccess;
	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
	
	{
		tokenNameToValue.put("ExclamationMark", "'!'");
		tokenNameToValue.put("QuotationMark", "'\"'");
		tokenNameToValue.put("Apostrophe", "'\''");
		tokenNameToValue.put("LeftParenthesis", "'('");
		tokenNameToValue.put("RightParenthesis", "')'");
		tokenNameToValue.put("Comma", "','");
		tokenNameToValue.put("FullStop", "'.'");
		tokenNameToValue.put("Colon", "':'");
		tokenNameToValue.put("LessThanSign", "'<'");
		tokenNameToValue.put("GreaterThanSign", "'>'");
		tokenNameToValue.put("LeftSquareBracket", "'['");
		tokenNameToValue.put("RightSquareBracket", "']'");
		tokenNameToValue.put("ExclamationMarkEqualsSign", "'!='");
		tokenNameToValue.put("AmpersandAmpersand", "'&&'");
		tokenNameToValue.put("LessThanSignEqualsSign", "'<='");
		tokenNameToValue.put("EqualsSignEqualsSign", "'=='");
		tokenNameToValue.put("GreaterThanSignEqualsSign", "'>='");
		tokenNameToValue.put("VerticalLineVerticalLine", "'||'");
		tokenNameToValue.put("RightCurlyBracketRightCurlyBracket", "'}}'");
		tokenNameToValue.put("DollarSignLeftCurlyBracketLeftCurlyBracket", "'\\u0024{{'");
		tokenNameToValue.put("Env", "'env'");
		tokenNameToValue.put("Job", "'job'");
		tokenNameToValue.put("Fork", "'fork'");
		tokenNameToValue.put("Jobs", "'jobs'");
		tokenNameToValue.put("Join", "'join'");
		tokenNameToValue.put("Name", "'name'");
		tokenNameToValue.put("None", "'none'");
		tokenNameToValue.put("Read", "'read'");
		tokenNameToValue.put("Vars", "'vars'");
		tokenNameToValue.put("Label", "'label'");
		tokenNameToValue.put("Needs", "'needs'");
		tokenNameToValue.put("Pages", "'pages'");
		tokenNameToValue.put("Steps", "'steps'");
		tokenNameToValue.put("Watch", "'watch'");
		tokenNameToValue.put("Write", "'write'");
		tokenNameToValue.put("Always", "'always'");
		tokenNameToValue.put("Checks", "'checks'");
		tokenNameToValue.put("Choice", "'choice'");
		tokenNameToValue.put("Closed", "'closed'");
		tokenNameToValue.put("Create", "'create'");
		tokenNameToValue.put("Delete", "'delete'");
		tokenNameToValue.put("Edited", "'edited'");
		tokenNameToValue.put("Format", "'format'");
		tokenNameToValue.put("Github", "'github'");
		tokenNameToValue.put("Gollum", "'gollum'");
		tokenNameToValue.put("Inputs", "'inputs'");
		tokenNameToValue.put("Issues", "'issues'");
		tokenNameToValue.put("Locked", "'locked'");
		tokenNameToValue.put("Matrix", "'matrix'");
		tokenNameToValue.put("Number", "'number'");
		tokenNameToValue.put("Opened", "'opened'");
		tokenNameToValue.put("Public", "'public'");
		tokenNameToValue.put("Runner", "'runner'");
		tokenNameToValue.put("Status", "'status'");
		tokenNameToValue.put("String", "'string'");
		tokenNameToValue.put("ToJSON", "'toJSON'");
		tokenNameToValue.put("Actions", "'actions'");
		tokenNameToValue.put("Boolean", "'boolean'");
		tokenNameToValue.put("Created", "'created'");
		tokenNameToValue.put("Deleted", "'deleted'");
		tokenNameToValue.put("Failure", "'failure'");
		tokenNameToValue.put("Labeled", "'labeled'");
		tokenNameToValue.put("Project", "'project'");
		tokenNameToValue.put("Release", "'release'");
		tokenNameToValue.put("Secrets", "'secrets'");
		tokenNameToValue.put("Success", "'success'");
		tokenNameToValue.put("Assigned", "'assigned'");
		tokenNameToValue.put("Contains", "'contains'");
		tokenNameToValue.put("Contents", "'contents'");
		tokenNameToValue.put("EndsWith", "'endsWith'");
		tokenNameToValue.put("FromJSON", "'fromJSON'");
		tokenNameToValue.put("IdToken", "'id-token'");
		tokenNameToValue.put("Packages", "'packages'");
		tokenNameToValue.put("Reopened", "'reopened'");
		tokenNameToValue.put("RunName", "'run-name'");
		tokenNameToValue.put("Statuses", "'statuses'");
		tokenNameToValue.put("Strategy", "'strategy'");
		tokenNameToValue.put("Unlocked", "'unlocked'");
		tokenNameToValue.put("Cancelled", "'cancelled'");
		tokenNameToValue.put("Check_run", "'check_run'");
		tokenNameToValue.put("HashFiles", "'hashFiles'");
		tokenNameToValue.put("Milestone", "'milestone'");
		tokenNameToValue.put("Unlabeled", "'unlabeled'");
		tokenNameToValue.put("Deployment", "'deployment'");
		tokenNameToValue.put("Discussion", "'discussion'");
		tokenNameToValue.put("Page_build", "'page_build'");
		tokenNameToValue.put("StartsWith", "'startsWith'");
		tokenNameToValue.put("Unassigned", "'unassigned'");
		tokenNameToValue.put("Check_suite", "'check_suite'");
		tokenNameToValue.put("Deployments", "'deployments'");
		tokenNameToValue.put("Discussions", "'discussions'");
		tokenNameToValue.put("Environment", "'environment'");
		tokenNameToValue.put("Merge_group", "'merge_group'");
		tokenNameToValue.put("Synchronize", "'synchronize'");
		tokenNameToValue.put("Project_card", "'project_card'");
		tokenNameToValue.put("Pull_requests", "'pull_requests'");
		tokenNameToValue.put("Project_column", "'project_column'");
		tokenNameToValue.put("Security_events", "'security_events'");
		tokenNameToValue.put("Ready_for_review", "'ready_for_review'");
		tokenNameToValue.put("Registry_package", "'registry_package'");
		tokenNameToValue.put("Review_requested", "'review_requested'");
		tokenNameToValue.put("Deployment_status", "'deployment_status'");
		tokenNameToValue.put("Auto_merge_enabled", "'auto_merge_enabled'");
		tokenNameToValue.put("Converted_to_draft", "'converted_to_draft'");
		tokenNameToValue.put("Auto_merge_disabled", "'auto_merge_disabled'");
		tokenNameToValue.put("Pull_request_review", "'pull_request_review'");
		tokenNameToValue.put("Repository_dispatch", "'repository_dispatch'");
		tokenNameToValue.put("Repository_projects", "'repository_projects'");
		tokenNameToValue.put("Branch_protection_rule", "'branch_protection_rule'");
		tokenNameToValue.put("Review_request_removed", "'review_request_removed'");
		tokenNameToValue.put("Pull_request_review_comment", "'pull_request_review_comment'");
	}

	public void setGrammarAccess(GitHubActionsGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		String result = tokenNameToValue.get(tokenName);
		if (result == null)
			result = tokenName;
		return result;
	}
}

// Entry rule entryRuleWorkflow
entryRuleWorkflow
:
{ before(grammarAccess.getWorkflowRule()); }
	 ruleWorkflow
{ after(grammarAccess.getWorkflowRule()); } 
	 EOF 
;

// Rule Workflow
ruleWorkflow 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWorkflowAccess().getGroup()); }
		(rule__Workflow__Group__0)
		{ after(grammarAccess.getWorkflowAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getConcatParserRuleCall()); }
		ruleConcat
		{ after(grammarAccess.getExpressionAccess().getConcatParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConcat
entryRuleConcat
:
{ before(grammarAccess.getConcatRule()); }
	 ruleConcat
{ after(grammarAccess.getConcatRule()); } 
	 EOF 
;

// Rule Concat
ruleConcat 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConcatAccess().getGroup()); }
		(rule__Concat__Group__0)
		{ after(grammarAccess.getConcatAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConcatExpression
entryRuleConcatExpression
:
{ before(grammarAccess.getConcatExpressionRule()); }
	 ruleConcatExpression
{ after(grammarAccess.getConcatExpressionRule()); } 
	 EOF 
;

// Rule ConcatExpression
ruleConcatExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConcatExpressionAccess().getAlternatives()); }
		(rule__ConcatExpression__Alternatives)
		{ after(grammarAccess.getConcatExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBracketedExpression
entryRuleBracketedExpression
:
{ before(grammarAccess.getBracketedExpressionRule()); }
	 ruleBracketedExpression
{ after(grammarAccess.getBracketedExpressionRule()); } 
	 EOF 
;

// Rule BracketedExpression
ruleBracketedExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBracketedExpressionAccess().getGroup()); }
		(rule__BracketedExpression__Group__0)
		{ after(grammarAccess.getBracketedExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInsideBracketsExpression
entryRuleInsideBracketsExpression
:
{ before(grammarAccess.getInsideBracketsExpressionRule()); }
	 ruleInsideBracketsExpression
{ after(grammarAccess.getInsideBracketsExpressionRule()); } 
	 EOF 
;

// Rule InsideBracketsExpression
ruleInsideBracketsExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInsideBracketsExpressionAccess().getOrParserRuleCall()); }
		ruleOr
		{ after(grammarAccess.getInsideBracketsExpressionAccess().getOrParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnbracketedLiteral
entryRuleUnbracketedLiteral
:
{ before(grammarAccess.getUnbracketedLiteralRule()); }
	 ruleUnbracketedLiteral
{ after(grammarAccess.getUnbracketedLiteralRule()); } 
	 EOF 
;

// Rule UnbracketedLiteral
ruleUnbracketedLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnbracketedLiteralAccess().getAlternatives()); }
		(rule__UnbracketedLiteral__Alternatives)
		{ after(grammarAccess.getUnbracketedLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringLiteral
entryRuleStringLiteral
:
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringLiteralAccess().getValueAssignment()); }
		(rule__StringLiteral__ValueAssignment)
		{ after(grammarAccess.getStringLiteralAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntegerLiteral
entryRuleIntegerLiteral
:
{ before(grammarAccess.getIntegerLiteralRule()); }
	 ruleIntegerLiteral
{ after(grammarAccess.getIntegerLiteralRule()); } 
	 EOF 
;

// Rule IntegerLiteral
ruleIntegerLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntegerLiteralAccess().getValueAssignment()); }
		(rule__IntegerLiteral__ValueAssignment)
		{ after(grammarAccess.getIntegerLiteralAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDoubleLiteral
entryRuleDoubleLiteral
:
{ before(grammarAccess.getDoubleLiteralRule()); }
	 ruleDoubleLiteral
{ after(grammarAccess.getDoubleLiteralRule()); } 
	 EOF 
;

// Rule DoubleLiteral
ruleDoubleLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDoubleLiteralAccess().getValueAssignment()); }
		(rule__DoubleLiteral__ValueAssignment)
		{ after(grammarAccess.getDoubleLiteralAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral
:
{ before(grammarAccess.getBooleanLiteralRule()); }
	 ruleBooleanLiteral
{ after(grammarAccess.getBooleanLiteralRule()); } 
	 EOF 
;

// Rule BooleanLiteral
ruleBooleanLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanLiteralAccess().getValueAssignment()); }
		(rule__BooleanLiteral__ValueAssignment)
		{ after(grammarAccess.getBooleanLiteralAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOr
entryRuleOr
:
{ before(grammarAccess.getOrRule()); }
	 ruleOr
{ after(grammarAccess.getOrRule()); } 
	 EOF 
;

// Rule Or
ruleOr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrAccess().getGroup()); }
		(rule__Or__Group__0)
		{ after(grammarAccess.getOrAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnd
entryRuleAnd
:
{ before(grammarAccess.getAndRule()); }
	 ruleAnd
{ after(grammarAccess.getAndRule()); } 
	 EOF 
;

// Rule And
ruleAnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndAccess().getGroup()); }
		(rule__And__Group__0)
		{ after(grammarAccess.getAndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEquality
entryRuleEquality
:
{ before(grammarAccess.getEqualityRule()); }
	 ruleEquality
{ after(grammarAccess.getEqualityRule()); } 
	 EOF 
;

// Rule Equality
ruleEquality 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualityAccess().getGroup()); }
		(rule__Equality__Group__0)
		{ after(grammarAccess.getEqualityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparison
entryRuleComparison
:
{ before(grammarAccess.getComparisonRule()); }
	 ruleComparison
{ after(grammarAccess.getComparisonRule()); } 
	 EOF 
;

// Rule Comparison
ruleComparison 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparisonAccess().getGroup()); }
		(rule__Comparison__Group__0)
		{ after(grammarAccess.getComparisonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryOp
entryRuleUnaryOp
:
{ before(grammarAccess.getUnaryOpRule()); }
	 ruleUnaryOp
{ after(grammarAccess.getUnaryOpRule()); } 
	 EOF 
;

// Rule UnaryOp
ruleUnaryOp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryOpAccess().getAlternatives()); }
		(rule__UnaryOp__Alternatives)
		{ after(grammarAccess.getUnaryOpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNot
entryRuleNot
:
{ before(grammarAccess.getNotRule()); }
	 ruleNot
{ after(grammarAccess.getNotRule()); } 
	 EOF 
;

// Rule Not
ruleNot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNotAccess().getGroup()); }
		(rule__Not__Group__0)
		{ after(grammarAccess.getNotAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBlank
entryRuleBlank
:
{ before(grammarAccess.getBlankRule()); }
	 ruleBlank
{ after(grammarAccess.getBlankRule()); } 
	 EOF 
;

// Rule Blank
ruleBlank 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlankAccess().getVariableDereferenceParserRuleCall()); }
		ruleVariableDereference
		{ after(grammarAccess.getBlankAccess().getVariableDereferenceParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableDereference
entryRuleVariableDereference
:
{ before(grammarAccess.getVariableDereferenceRule()); }
	 ruleVariableDereference
{ after(grammarAccess.getVariableDereferenceRule()); } 
	 EOF 
;

// Rule VariableDereference
ruleVariableDereference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableDereferenceAccess().getGroup()); }
		(rule__VariableDereference__Group__0)
		{ after(grammarAccess.getVariableDereferenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimary
entryRulePrimary
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
		(rule__Primary__Alternatives)
		{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAtomic
entryRuleAtomic
:
{ before(grammarAccess.getAtomicRule()); }
	 ruleAtomic
{ after(grammarAccess.getAtomicRule()); } 
	 EOF 
;

// Rule Atomic
ruleAtomic 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAtomicAccess().getAlternatives()); }
		(rule__Atomic__Alternatives)
		{ after(grammarAccess.getAtomicAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCallExpression
entryRuleCallExpression
:
{ before(grammarAccess.getCallExpressionRule()); }
	 ruleCallExpression
{ after(grammarAccess.getCallExpressionRule()); } 
	 EOF 
;

// Rule CallExpression
ruleCallExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCallExpressionAccess().getAlternatives()); }
		(rule__CallExpression__Alternatives)
		{ after(grammarAccess.getCallExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContains
entryRuleContains
:
{ before(grammarAccess.getContainsRule()); }
	 ruleContains
{ after(grammarAccess.getContainsRule()); } 
	 EOF 
;

// Rule Contains
ruleContains 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContainsAccess().getGroup()); }
		(rule__Contains__Group__0)
		{ after(grammarAccess.getContainsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStartsWith
entryRuleStartsWith
:
{ before(grammarAccess.getStartsWithRule()); }
	 ruleStartsWith
{ after(grammarAccess.getStartsWithRule()); } 
	 EOF 
;

// Rule StartsWith
ruleStartsWith 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStartsWithAccess().getGroup()); }
		(rule__StartsWith__Group__0)
		{ after(grammarAccess.getStartsWithAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEndsWith
entryRuleEndsWith
:
{ before(grammarAccess.getEndsWithRule()); }
	 ruleEndsWith
{ after(grammarAccess.getEndsWithRule()); } 
	 EOF 
;

// Rule EndsWith
ruleEndsWith 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEndsWithAccess().getGroup()); }
		(rule__EndsWith__Group__0)
		{ after(grammarAccess.getEndsWithAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFormat
entryRuleFormat
:
{ before(grammarAccess.getFormatRule()); }
	 ruleFormat
{ after(grammarAccess.getFormatRule()); } 
	 EOF 
;

// Rule Format
ruleFormat 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFormatAccess().getGroup()); }
		(rule__Format__Group__0)
		{ after(grammarAccess.getFormatAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJoin
entryRuleJoin
:
{ before(grammarAccess.getJoinRule()); }
	 ruleJoin
{ after(grammarAccess.getJoinRule()); } 
	 EOF 
;

// Rule Join
ruleJoin 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJoinAccess().getGroup()); }
		(rule__Join__Group__0)
		{ after(grammarAccess.getJoinAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleToJSON
entryRuleToJSON
:
{ before(grammarAccess.getToJSONRule()); }
	 ruleToJSON
{ after(grammarAccess.getToJSONRule()); } 
	 EOF 
;

// Rule ToJSON
ruleToJSON 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getToJSONAccess().getGroup()); }
		(rule__ToJSON__Group__0)
		{ after(grammarAccess.getToJSONAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFromJSON
entryRuleFromJSON
:
{ before(grammarAccess.getFromJSONRule()); }
	 ruleFromJSON
{ after(grammarAccess.getFromJSONRule()); } 
	 EOF 
;

// Rule FromJSON
ruleFromJSON 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFromJSONAccess().getGroup()); }
		(rule__FromJSON__Group__0)
		{ after(grammarAccess.getFromJSONAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHashFiles
entryRuleHashFiles
:
{ before(grammarAccess.getHashFilesRule()); }
	 ruleHashFiles
{ after(grammarAccess.getHashFilesRule()); } 
	 EOF 
;

// Rule HashFiles
ruleHashFiles 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHashFilesAccess().getGroup()); }
		(rule__HashFiles__Group__0)
		{ after(grammarAccess.getHashFilesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSuccess
entryRuleSuccess
:
{ before(grammarAccess.getSuccessRule()); }
	 ruleSuccess
{ after(grammarAccess.getSuccessRule()); } 
	 EOF 
;

// Rule Success
ruleSuccess 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSuccessAccess().getGroup()); }
		(rule__Success__Group__0)
		{ after(grammarAccess.getSuccessAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAlways
entryRuleAlways
:
{ before(grammarAccess.getAlwaysRule()); }
	 ruleAlways
{ after(grammarAccess.getAlwaysRule()); } 
	 EOF 
;

// Rule Always
ruleAlways 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAlwaysAccess().getGroup()); }
		(rule__Always__Group__0)
		{ after(grammarAccess.getAlwaysAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCancelled
entryRuleCancelled
:
{ before(grammarAccess.getCancelledRule()); }
	 ruleCancelled
{ after(grammarAccess.getCancelledRule()); } 
	 EOF 
;

// Rule Cancelled
ruleCancelled 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCancelledAccess().getGroup()); }
		(rule__Cancelled__Group__0)
		{ after(grammarAccess.getCancelledAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFailure
entryRuleFailure
:
{ before(grammarAccess.getFailureRule()); }
	 ruleFailure
{ after(grammarAccess.getFailureRule()); } 
	 EOF 
;

// Rule Failure
ruleFailure 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFailureAccess().getGroup()); }
		(rule__Failure__Group__0)
		{ after(grammarAccess.getFailureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleYAMLString
entryRuleYAMLString
:
{ before(grammarAccess.getYAMLStringRule()); }
	 ruleYAMLString
{ after(grammarAccess.getYAMLStringRule()); } 
	 EOF 
;

// Rule YAMLString
ruleYAMLString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getYAMLStringAccess().getAlternatives()); }
		(rule__YAMLString__Alternatives)
		{ after(grammarAccess.getYAMLStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule COMPARISON_OP
ruleCOMPARISON_OP
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCOMPARISON_OPAccess().getAlternatives()); }
		(rule__COMPARISON_OP__Alternatives)
		{ after(grammarAccess.getCOMPARISON_OPAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule EQUALITY_OP
ruleEQUALITY_OP
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEQUALITY_OPAccess().getAlternatives()); }
		(rule__EQUALITY_OP__Alternatives)
		{ after(grammarAccess.getEQUALITY_OPAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule CONTEXT
ruleCONTEXT
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCONTEXTAccess().getAlternatives()); }
		(rule__CONTEXT__Alternatives)
		{ after(grammarAccess.getCONTEXTAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcatExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConcatExpressionAccess().getBracketedExpressionParserRuleCall_0()); }
		ruleBracketedExpression
		{ after(grammarAccess.getConcatExpressionAccess().getBracketedExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getConcatExpressionAccess().getUnbracketedLiteralParserRuleCall_1()); }
		ruleUnbracketedLiteral
		{ after(grammarAccess.getConcatExpressionAccess().getUnbracketedLiteralParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnbracketedLiteral__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnbracketedLiteralAccess().getStringLiteralParserRuleCall_0()); }
		ruleStringLiteral
		{ after(grammarAccess.getUnbracketedLiteralAccess().getStringLiteralParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnbracketedLiteralAccess().getIntegerLiteralParserRuleCall_1()); }
		ruleIntegerLiteral
		{ after(grammarAccess.getUnbracketedLiteralAccess().getIntegerLiteralParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnbracketedLiteralAccess().getDoubleLiteralParserRuleCall_2()); }
		ruleDoubleLiteral
		{ after(grammarAccess.getUnbracketedLiteralAccess().getDoubleLiteralParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getUnbracketedLiteralAccess().getBooleanLiteralParserRuleCall_3()); }
		ruleBooleanLiteral
		{ after(grammarAccess.getUnbracketedLiteralAccess().getBooleanLiteralParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryOpAccess().getNotParserRuleCall_0()); }
		ruleNot
		{ after(grammarAccess.getUnaryOpAccess().getNotParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOpAccess().getBlankParserRuleCall_1()); }
		ruleBlank
		{ after(grammarAccess.getUnaryOpAccess().getBlankParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDereferenceAccess().getGroup_1_1_0()); }
		(rule__VariableDereference__Group_1_1_0__0)
		{ after(grammarAccess.getVariableDereferenceAccess().getGroup_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableDereferenceAccess().getAlternatives_1_1_1()); }
		(rule__VariableDereference__Alternatives_1_1_1)
		{ after(grammarAccess.getVariableDereferenceAccess().getAlternatives_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__Alternatives_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDereferenceAccess().getGroup_1_1_1_0()); }
		(rule__VariableDereference__Group_1_1_1_0__0)
		{ after(grammarAccess.getVariableDereferenceAccess().getGroup_1_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableDereferenceAccess().getGroup_1_1_1_1()); }
		(rule__VariableDereference__Group_1_1_1_1__0)
		{ after(grammarAccess.getVariableDereferenceAccess().getGroup_1_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_0()); }
		(rule__Primary__Group_0__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getCallExpressionParserRuleCall_1()); }
		ruleCallExpression
		{ after(grammarAccess.getPrimaryAccess().getCallExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getAtomicParserRuleCall_2()); }
		ruleAtomic
		{ after(grammarAccess.getPrimaryAccess().getAtomicParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_0()); }
		(rule__Atomic__Group_0__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_1()); }
		(rule__Atomic__Group_1__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_2()); }
		(rule__Atomic__Group_2__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_3()); }
		(rule__Atomic__Group_3__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_4()); }
		(rule__Atomic__Group_4__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_5()); }
		(rule__Atomic__Group_5__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCallExpressionAccess().getContainsParserRuleCall_0()); }
		ruleContains
		{ after(grammarAccess.getCallExpressionAccess().getContainsParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCallExpressionAccess().getStartsWithParserRuleCall_1()); }
		ruleStartsWith
		{ after(grammarAccess.getCallExpressionAccess().getStartsWithParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getCallExpressionAccess().getEndsWithParserRuleCall_2()); }
		ruleEndsWith
		{ after(grammarAccess.getCallExpressionAccess().getEndsWithParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getCallExpressionAccess().getFormatParserRuleCall_3()); }
		ruleFormat
		{ after(grammarAccess.getCallExpressionAccess().getFormatParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getCallExpressionAccess().getJoinParserRuleCall_4()); }
		ruleJoin
		{ after(grammarAccess.getCallExpressionAccess().getJoinParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getCallExpressionAccess().getToJSONParserRuleCall_5()); }
		ruleToJSON
		{ after(grammarAccess.getCallExpressionAccess().getToJSONParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getCallExpressionAccess().getFromJSONParserRuleCall_6()); }
		ruleFromJSON
		{ after(grammarAccess.getCallExpressionAccess().getFromJSONParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getCallExpressionAccess().getHashFilesParserRuleCall_7()); }
		ruleHashFiles
		{ after(grammarAccess.getCallExpressionAccess().getHashFilesParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getCallExpressionAccess().getSuccessParserRuleCall_8()); }
		ruleSuccess
		{ after(grammarAccess.getCallExpressionAccess().getSuccessParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getCallExpressionAccess().getAlwaysParserRuleCall_9()); }
		ruleAlways
		{ after(grammarAccess.getCallExpressionAccess().getAlwaysParserRuleCall_9()); }
	)
	|
	(
		{ before(grammarAccess.getCallExpressionAccess().getFailureParserRuleCall_10()); }
		ruleFailure
		{ after(grammarAccess.getCallExpressionAccess().getFailureParserRuleCall_10()); }
	)
	|
	(
		{ before(grammarAccess.getCallExpressionAccess().getCancelledParserRuleCall_11()); }
		ruleCancelled
		{ after(grammarAccess.getCallExpressionAccess().getCancelledParserRuleCall_11()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__YAMLString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getYAMLStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getYAMLStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getYAMLStringAccess().getUNQUOTED_STRINGTerminalRuleCall_1()); }
		RULE_UNQUOTED_STRING
		{ after(grammarAccess.getYAMLStringAccess().getUNQUOTED_STRINGTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__COMPARISON_OP__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCOMPARISON_OPAccess().getGTEnumLiteralDeclaration_0()); }
		(GreaterThanSign)
		{ after(grammarAccess.getCOMPARISON_OPAccess().getGTEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getCOMPARISON_OPAccess().getGTEEnumLiteralDeclaration_1()); }
		(GreaterThanSignEqualsSign)
		{ after(grammarAccess.getCOMPARISON_OPAccess().getGTEEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getCOMPARISON_OPAccess().getLTEnumLiteralDeclaration_2()); }
		(LessThanSign)
		{ after(grammarAccess.getCOMPARISON_OPAccess().getLTEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getCOMPARISON_OPAccess().getLTEEnumLiteralDeclaration_3()); }
		(LessThanSignEqualsSign)
		{ after(grammarAccess.getCOMPARISON_OPAccess().getLTEEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EQUALITY_OP__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEQUALITY_OPAccess().getEQUALSEnumLiteralDeclaration_0()); }
		(EqualsSignEqualsSign)
		{ after(grammarAccess.getEQUALITY_OPAccess().getEQUALSEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getEQUALITY_OPAccess().getNOT_EQUALSEnumLiteralDeclaration_1()); }
		(ExclamationMarkEqualsSign)
		{ after(grammarAccess.getEQUALITY_OPAccess().getNOT_EQUALSEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CONTEXT__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCONTEXTAccess().getGITHUBEnumLiteralDeclaration_0()); }
		(Github)
		{ after(grammarAccess.getCONTEXTAccess().getGITHUBEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getCONTEXTAccess().getENVEnumLiteralDeclaration_1()); }
		(Env)
		{ after(grammarAccess.getCONTEXTAccess().getENVEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getCONTEXTAccess().getVARSEnumLiteralDeclaration_2()); }
		(Vars)
		{ after(grammarAccess.getCONTEXTAccess().getVARSEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getCONTEXTAccess().getJOBEnumLiteralDeclaration_3()); }
		(Job)
		{ after(grammarAccess.getCONTEXTAccess().getJOBEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getCONTEXTAccess().getJOBSEnumLiteralDeclaration_4()); }
		(Jobs)
		{ after(grammarAccess.getCONTEXTAccess().getJOBSEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getCONTEXTAccess().getSTEPSEnumLiteralDeclaration_5()); }
		(Steps)
		{ after(grammarAccess.getCONTEXTAccess().getSTEPSEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getCONTEXTAccess().getRUNNEREnumLiteralDeclaration_6()); }
		(Runner)
		{ after(grammarAccess.getCONTEXTAccess().getRUNNEREnumLiteralDeclaration_6()); }
	)
	|
	(
		{ before(grammarAccess.getCONTEXTAccess().getSECRETSEnumLiteralDeclaration_7()); }
		(Secrets)
		{ after(grammarAccess.getCONTEXTAccess().getSECRETSEnumLiteralDeclaration_7()); }
	)
	|
	(
		{ before(grammarAccess.getCONTEXTAccess().getSTRATEGYEnumLiteralDeclaration_8()); }
		(Strategy)
		{ after(grammarAccess.getCONTEXTAccess().getSTRATEGYEnumLiteralDeclaration_8()); }
	)
	|
	(
		{ before(grammarAccess.getCONTEXTAccess().getMATRIXEnumLiteralDeclaration_9()); }
		(Matrix)
		{ after(grammarAccess.getCONTEXTAccess().getMATRIXEnumLiteralDeclaration_9()); }
	)
	|
	(
		{ before(grammarAccess.getCONTEXTAccess().getNEEDSEnumLiteralDeclaration_10()); }
		(Needs)
		{ after(grammarAccess.getCONTEXTAccess().getNEEDSEnumLiteralDeclaration_10()); }
	)
	|
	(
		{ before(grammarAccess.getCONTEXTAccess().getINPUTSEnumLiteralDeclaration_11()); }
		(Inputs)
		{ after(grammarAccess.getCONTEXTAccess().getINPUTSEnumLiteralDeclaration_11()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__Group__0__Impl
	rule__Workflow__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowAccess().getGroup_0()); }
	(rule__Workflow__Group_0__0)*
	{ after(grammarAccess.getWorkflowAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowAccess().getUnorderedGroup_1()); }
	(rule__Workflow__UnorderedGroup_1)
	{ after(grammarAccess.getWorkflowAccess().getUnorderedGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Workflow__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__Group_0__0__Impl
	rule__Workflow__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowAccess().getWSTerminalRuleCall_0_0()); }
	(RULE_WS)?
	{ after(grammarAccess.getWorkflowAccess().getWSTerminalRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowAccess().getNEWLINETerminalRuleCall_0_1()); }
	RULE_NEWLINE
	{ after(grammarAccess.getWorkflowAccess().getNEWLINETerminalRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Workflow__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__Group_1_0__0__Impl
	rule__Workflow__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowAccess().getNameKeyword_1_0_0()); }
	Name
	{ after(grammarAccess.getWorkflowAccess().getNameKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__Group_1_0__1__Impl
	rule__Workflow__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowAccess().getColonKeyword_1_0_1()); }
	Colon
	{ after(grammarAccess.getWorkflowAccess().getColonKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__Group_1_0__2__Impl
	rule__Workflow__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowAccess().getWSTerminalRuleCall_1_0_2()); }
	(RULE_WS)?
	{ after(grammarAccess.getWorkflowAccess().getWSTerminalRuleCall_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_1_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__Group_1_0__3__Impl
	rule__Workflow__Group_1_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_1_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowAccess().getNameAssignment_1_0_3()); }
	(rule__Workflow__NameAssignment_1_0_3)
	{ after(grammarAccess.getWorkflowAccess().getNameAssignment_1_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_1_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__Group_1_0__4__Impl
	rule__Workflow__Group_1_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_1_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowAccess().getNEWLINETerminalRuleCall_1_0_4()); }
	RULE_NEWLINE
	{ after(grammarAccess.getWorkflowAccess().getNEWLINETerminalRuleCall_1_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_1_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__Group_1_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_1_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowAccess().getGroup_1_0_5()); }
	(rule__Workflow__Group_1_0_5__0)*
	{ after(grammarAccess.getWorkflowAccess().getGroup_1_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Workflow__Group_1_0_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__Group_1_0_5__0__Impl
	rule__Workflow__Group_1_0_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_1_0_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowAccess().getWSTerminalRuleCall_1_0_5_0()); }
	(RULE_WS)?
	{ after(grammarAccess.getWorkflowAccess().getWSTerminalRuleCall_1_0_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_1_0_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__Group_1_0_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_1_0_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowAccess().getNEWLINETerminalRuleCall_1_0_5_1()); }
	RULE_NEWLINE
	{ after(grammarAccess.getWorkflowAccess().getNEWLINETerminalRuleCall_1_0_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Workflow__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__Group_1_1__0__Impl
	rule__Workflow__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowAccess().getRunNameKeyword_1_1_0()); }
	RunName
	{ after(grammarAccess.getWorkflowAccess().getRunNameKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__Group_1_1__1__Impl
	rule__Workflow__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowAccess().getColonKeyword_1_1_1()); }
	Colon
	{ after(grammarAccess.getWorkflowAccess().getColonKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__Group_1_1__2__Impl
	rule__Workflow__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowAccess().getWSTerminalRuleCall_1_1_2()); }
	(RULE_WS)?
	{ after(grammarAccess.getWorkflowAccess().getWSTerminalRuleCall_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_1_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__Group_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__Group_1_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowAccess().getRunNameAssignment_1_1_3()); }
	(rule__Workflow__RunNameAssignment_1_1_3)
	{ after(grammarAccess.getWorkflowAccess().getRunNameAssignment_1_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Concat__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concat__Group__0__Impl
	rule__Concat__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcatAccess().getExpressionsAssignment_0()); }
	(rule__Concat__ExpressionsAssignment_0)
	{ after(grammarAccess.getConcatAccess().getExpressionsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concat__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcatAccess().getGroup_1()); }
	(rule__Concat__Group_1__0)*
	{ after(grammarAccess.getConcatAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Concat__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concat__Group_1__0__Impl
	rule__Concat__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcatAccess().getWSTerminalRuleCall_1_0()); }
	RULE_WS
	{ after(grammarAccess.getConcatAccess().getWSTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concat__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcatAccess().getExpressionsAssignment_1_1()); }
	(rule__Concat__ExpressionsAssignment_1_1)
	{ after(grammarAccess.getConcatAccess().getExpressionsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BracketedExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BracketedExpression__Group__0__Impl
	rule__BracketedExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BracketedExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBracketedExpressionAccess().getDollarSignLeftCurlyBracketLeftCurlyBracketKeyword_0()); }
	DollarSignLeftCurlyBracketLeftCurlyBracket
	{ after(grammarAccess.getBracketedExpressionAccess().getDollarSignLeftCurlyBracketLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BracketedExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BracketedExpression__Group__1__Impl
	rule__BracketedExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BracketedExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBracketedExpressionAccess().getWSTerminalRuleCall_1()); }
	(RULE_WS)?
	{ after(grammarAccess.getBracketedExpressionAccess().getWSTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BracketedExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BracketedExpression__Group__2__Impl
	rule__BracketedExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BracketedExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBracketedExpressionAccess().getInsideBracketsExpressionParserRuleCall_2()); }
	ruleInsideBracketsExpression
	{ after(grammarAccess.getBracketedExpressionAccess().getInsideBracketsExpressionParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BracketedExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BracketedExpression__Group__3__Impl
	rule__BracketedExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BracketedExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBracketedExpressionAccess().getWSTerminalRuleCall_3()); }
	(RULE_WS)?
	{ after(grammarAccess.getBracketedExpressionAccess().getWSTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BracketedExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BracketedExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BracketedExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBracketedExpressionAccess().getRightCurlyBracketRightCurlyBracketKeyword_4()); }
	RightCurlyBracketRightCurlyBracket
	{ after(grammarAccess.getBracketedExpressionAccess().getRightCurlyBracketRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group__0__Impl
	rule__Or__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getAndParserRuleCall_0()); }
	ruleAnd
	{ after(grammarAccess.getOrAccess().getAndParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getGroup_1()); }
	(rule__Or__Group_1__0)*
	{ after(grammarAccess.getOrAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__0__Impl
	rule__Or__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getOrLhsAction_1_0()); }
	()
	{ after(grammarAccess.getOrAccess().getOrLhsAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__1__Impl
	rule__Or__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getWSTerminalRuleCall_1_1()); }
	(RULE_WS)?
	{ after(grammarAccess.getOrAccess().getWSTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__2__Impl
	rule__Or__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getVerticalLineVerticalLineKeyword_1_2()); }
	VerticalLineVerticalLine
	{ after(grammarAccess.getOrAccess().getVerticalLineVerticalLineKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__3__Impl
	rule__Or__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getWSTerminalRuleCall_1_3()); }
	(RULE_WS)?
	{ after(grammarAccess.getOrAccess().getWSTerminalRuleCall_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getRhsAssignment_1_4()); }
	(rule__Or__RhsAssignment_1_4)
	{ after(grammarAccess.getOrAccess().getRhsAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__0__Impl
	rule__And__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getEqualityParserRuleCall_0()); }
	ruleEquality
	{ after(grammarAccess.getAndAccess().getEqualityParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getGroup_1()); }
	(rule__And__Group_1__0)*
	{ after(grammarAccess.getAndAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__0__Impl
	rule__And__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getAndLhsAction_1_0()); }
	()
	{ after(grammarAccess.getAndAccess().getAndLhsAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__1__Impl
	rule__And__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getWSTerminalRuleCall_1_1()); }
	(RULE_WS)?
	{ after(grammarAccess.getAndAccess().getWSTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__2__Impl
	rule__And__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getAmpersandAmpersandKeyword_1_2()); }
	AmpersandAmpersand
	{ after(grammarAccess.getAndAccess().getAmpersandAmpersandKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__3__Impl
	rule__And__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getWSTerminalRuleCall_1_3()); }
	(RULE_WS)?
	{ after(grammarAccess.getAndAccess().getWSTerminalRuleCall_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getRhsAssignment_1_4()); }
	(rule__And__RhsAssignment_1_4)
	{ after(grammarAccess.getAndAccess().getRhsAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equality__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group__0__Impl
	rule__Equality__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getComparisonParserRuleCall_0()); }
	ruleComparison
	{ after(grammarAccess.getEqualityAccess().getComparisonParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getGroup_1()); }
	(rule__Equality__Group_1__0)*
	{ after(grammarAccess.getEqualityAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equality__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1__0__Impl
	rule__Equality__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getEqualityLhsAction_1_0()); }
	()
	{ after(grammarAccess.getEqualityAccess().getEqualityLhsAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1__1__Impl
	rule__Equality__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getWSTerminalRuleCall_1_1()); }
	(RULE_WS)?
	{ after(grammarAccess.getEqualityAccess().getWSTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1__2__Impl
	rule__Equality__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getOpAssignment_1_2()); }
	(rule__Equality__OpAssignment_1_2)
	{ after(grammarAccess.getEqualityAccess().getOpAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1__3__Impl
	rule__Equality__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getWSTerminalRuleCall_1_3()); }
	(RULE_WS)?
	{ after(grammarAccess.getEqualityAccess().getWSTerminalRuleCall_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getRhsAssignment_1_4()); }
	(rule__Equality__RhsAssignment_1_4)
	{ after(grammarAccess.getEqualityAccess().getRhsAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group__0__Impl
	rule__Comparison__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getUnaryOpParserRuleCall_0()); }
	ruleUnaryOp
	{ after(grammarAccess.getComparisonAccess().getUnaryOpParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getGroup_1()); }
	(rule__Comparison__Group_1__0)*
	{ after(grammarAccess.getComparisonAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__0__Impl
	rule__Comparison__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getComparisonLhsAction_1_0()); }
	()
	{ after(grammarAccess.getComparisonAccess().getComparisonLhsAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__1__Impl
	rule__Comparison__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getWSTerminalRuleCall_1_1()); }
	(RULE_WS)?
	{ after(grammarAccess.getComparisonAccess().getWSTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__2__Impl
	rule__Comparison__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getOpAssignment_1_2()); }
	(rule__Comparison__OpAssignment_1_2)
	{ after(grammarAccess.getComparisonAccess().getOpAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__3__Impl
	rule__Comparison__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getWSTerminalRuleCall_1_3()); }
	(RULE_WS)?
	{ after(grammarAccess.getComparisonAccess().getWSTerminalRuleCall_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getRhsAssignment_1_4()); }
	(rule__Comparison__RhsAssignment_1_4)
	{ after(grammarAccess.getComparisonAccess().getRhsAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Not__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Not__Group__0__Impl
	rule__Not__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Not__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotAccess().getExclamationMarkKeyword_0()); }
	ExclamationMark
	{ after(grammarAccess.getNotAccess().getExclamationMarkKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Not__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Not__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Not__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotAccess().getChildExprAssignment_1()); }
	(rule__Not__ChildExprAssignment_1)
	{ after(grammarAccess.getNotAccess().getChildExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDereference__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDereference__Group__0__Impl
	rule__VariableDereference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDereferenceAccess().getPrimaryParserRuleCall_0()); }
	rulePrimary
	{ after(grammarAccess.getVariableDereferenceAccess().getPrimaryParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDereference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDereferenceAccess().getGroup_1()); }
	(rule__VariableDereference__Group_1__0)*
	{ after(grammarAccess.getVariableDereferenceAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDereference__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDereference__Group_1__0__Impl
	rule__VariableDereference__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDereferenceAccess().getVariableDereferenceVariableAction_1_0()); }
	()
	{ after(grammarAccess.getVariableDereferenceAccess().getVariableDereferenceVariableAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDereference__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDereferenceAccess().getAlternatives_1_1()); }
	(rule__VariableDereference__Alternatives_1_1)
	{ after(grammarAccess.getVariableDereferenceAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDereference__Group_1_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDereference__Group_1_1_0__0__Impl
	rule__VariableDereference__Group_1_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__Group_1_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDereferenceAccess().getFullStopKeyword_1_1_0_0()); }
	FullStop
	{ after(grammarAccess.getVariableDereferenceAccess().getFullStopKeyword_1_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__Group_1_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDereference__Group_1_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__Group_1_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDereferenceAccess().getPropertyAssignment_1_1_0_1()); }
	(rule__VariableDereference__PropertyAssignment_1_1_0_1)
	{ after(grammarAccess.getVariableDereferenceAccess().getPropertyAssignment_1_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDereference__Group_1_1_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDereference__Group_1_1_1_0__0__Impl
	rule__VariableDereference__Group_1_1_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__Group_1_1_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDereferenceAccess().getLeftSquareBracketKeyword_1_1_1_0_0()); }
	LeftSquareBracket
	{ after(grammarAccess.getVariableDereferenceAccess().getLeftSquareBracketKeyword_1_1_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__Group_1_1_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDereference__Group_1_1_1_0__1__Impl
	rule__VariableDereference__Group_1_1_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__Group_1_1_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDereferenceAccess().getWSTerminalRuleCall_1_1_1_0_1()); }
	(RULE_WS)?
	{ after(grammarAccess.getVariableDereferenceAccess().getWSTerminalRuleCall_1_1_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__Group_1_1_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDereference__Group_1_1_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__Group_1_1_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDereferenceAccess().getGroup_1_1_1_0_2()); }
	(rule__VariableDereference__Group_1_1_1_0_2__0)
	{ after(grammarAccess.getVariableDereferenceAccess().getGroup_1_1_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDereference__Group_1_1_1_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDereference__Group_1_1_1_0_2__0__Impl
	rule__VariableDereference__Group_1_1_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__Group_1_1_1_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDereferenceAccess().getQuotationMarkKeyword_1_1_1_0_2_0()); }
	QuotationMark
	{ after(grammarAccess.getVariableDereferenceAccess().getQuotationMarkKeyword_1_1_1_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__Group_1_1_1_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDereference__Group_1_1_1_0_2__1__Impl
	rule__VariableDereference__Group_1_1_1_0_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__Group_1_1_1_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDereferenceAccess().getPropertyAssignment_1_1_1_0_2_1()); }
	(rule__VariableDereference__PropertyAssignment_1_1_1_0_2_1)
	{ after(grammarAccess.getVariableDereferenceAccess().getPropertyAssignment_1_1_1_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__Group_1_1_1_0_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDereference__Group_1_1_1_0_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__Group_1_1_1_0_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDereferenceAccess().getQuotationMarkKeyword_1_1_1_0_2_2()); }
	QuotationMark
	{ after(grammarAccess.getVariableDereferenceAccess().getQuotationMarkKeyword_1_1_1_0_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDereference__Group_1_1_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDereference__Group_1_1_1_1__0__Impl
	rule__VariableDereference__Group_1_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__Group_1_1_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDereferenceAccess().getGroup_1_1_1_1_0()); }
	(rule__VariableDereference__Group_1_1_1_1_0__0)
	{ after(grammarAccess.getVariableDereferenceAccess().getGroup_1_1_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__Group_1_1_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDereference__Group_1_1_1_1__1__Impl
	rule__VariableDereference__Group_1_1_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__Group_1_1_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDereferenceAccess().getWSTerminalRuleCall_1_1_1_1_1()); }
	(RULE_WS)?
	{ after(grammarAccess.getVariableDereferenceAccess().getWSTerminalRuleCall_1_1_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__Group_1_1_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDereference__Group_1_1_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__Group_1_1_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDereferenceAccess().getRightSquareBracketKeyword_1_1_1_1_2()); }
	RightSquareBracket
	{ after(grammarAccess.getVariableDereferenceAccess().getRightSquareBracketKeyword_1_1_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDereference__Group_1_1_1_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDereference__Group_1_1_1_1_0__0__Impl
	rule__VariableDereference__Group_1_1_1_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__Group_1_1_1_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDereferenceAccess().getApostropheKeyword_1_1_1_1_0_0()); }
	Apostrophe
	{ after(grammarAccess.getVariableDereferenceAccess().getApostropheKeyword_1_1_1_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__Group_1_1_1_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDereference__Group_1_1_1_1_0__1__Impl
	rule__VariableDereference__Group_1_1_1_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__Group_1_1_1_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDereferenceAccess().getPropertyAssignment_1_1_1_1_0_1()); }
	(rule__VariableDereference__PropertyAssignment_1_1_1_1_0_1)
	{ after(grammarAccess.getVariableDereferenceAccess().getPropertyAssignment_1_1_1_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__Group_1_1_1_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDereference__Group_1_1_1_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__Group_1_1_1_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDereferenceAccess().getQuotationMarkKeyword_1_1_1_1_0_2()); }
	QuotationMark
	{ after(grammarAccess.getVariableDereferenceAccess().getQuotationMarkKeyword_1_1_1_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__0__Impl
	rule__Primary__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_0()); }
	LeftParenthesis
	{ after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__1__Impl
	rule__Primary__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getWSTerminalRuleCall_0_1()); }
	(RULE_WS)?
	{ after(grammarAccess.getPrimaryAccess().getWSTerminalRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__2__Impl
	rule__Primary__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getInsideBracketsExpressionParserRuleCall_0_2()); }
	ruleInsideBracketsExpression
	{ after(grammarAccess.getPrimaryAccess().getInsideBracketsExpressionParserRuleCall_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__3__Impl
	rule__Primary__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getWSTerminalRuleCall_0_3()); }
	(RULE_WS)?
	{ after(grammarAccess.getPrimaryAccess().getWSTerminalRuleCall_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_4()); }
	RightParenthesis
	{ after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_0__0__Impl
	rule__Atomic__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getGitHubContextAction_0_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getGitHubContextAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getContextAssignment_0_1()); }
	(rule__Atomic__ContextAssignment_0_1)
	{ after(grammarAccess.getAtomicAccess().getContextAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_1__0__Impl
	rule__Atomic__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getVariableAction_1_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getVariableAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getNameAssignment_1_1()); }
	(rule__Atomic__NameAssignment_1_1)
	{ after(grammarAccess.getAtomicAccess().getNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_2__0__Impl
	rule__Atomic__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getIntegerLiteralAction_2_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getIntegerLiteralAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_2_1()); }
	(rule__Atomic__ValueAssignment_2_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_3__0__Impl
	rule__Atomic__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getDoubleLiteralAction_3_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getDoubleLiteralAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_3_1()); }
	(rule__Atomic__ValueAssignment_3_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_4__0__Impl
	rule__Atomic__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getBooleanLiteralAction_4_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getBooleanLiteralAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_4_1()); }
	(rule__Atomic__ValueAssignment_4_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_5__0__Impl
	rule__Atomic__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getStringLiteralAction_5_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getStringLiteralAction_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_5_1()); }
	(rule__Atomic__ValueAssignment_5_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Contains__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contains__Group__0__Impl
	rule__Contains__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainsAccess().getContainsKeyword_0()); }
	Contains
	{ after(grammarAccess.getContainsAccess().getContainsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contains__Group__1__Impl
	rule__Contains__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainsAccess().getLeftParenthesisKeyword_1()); }
	LeftParenthesis
	{ after(grammarAccess.getContainsAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contains__Group__2__Impl
	rule__Contains__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainsAccess().getWSTerminalRuleCall_2()); }
	(RULE_WS)?
	{ after(grammarAccess.getContainsAccess().getWSTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contains__Group__3__Impl
	rule__Contains__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainsAccess().getSearchAssignment_3()); }
	(rule__Contains__SearchAssignment_3)
	{ after(grammarAccess.getContainsAccess().getSearchAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contains__Group__4__Impl
	rule__Contains__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainsAccess().getWSTerminalRuleCall_4()); }
	(RULE_WS)?
	{ after(grammarAccess.getContainsAccess().getWSTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contains__Group__5__Impl
	rule__Contains__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainsAccess().getCommaKeyword_5()); }
	Comma
	{ after(grammarAccess.getContainsAccess().getCommaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contains__Group__6__Impl
	rule__Contains__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainsAccess().getWSTerminalRuleCall_6()); }
	(RULE_WS)?
	{ after(grammarAccess.getContainsAccess().getWSTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contains__Group__7__Impl
	rule__Contains__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainsAccess().getItemAssignment_7()); }
	(rule__Contains__ItemAssignment_7)
	{ after(grammarAccess.getContainsAccess().getItemAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contains__Group__8__Impl
	rule__Contains__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainsAccess().getWSTerminalRuleCall_8()); }
	(RULE_WS)?
	{ after(grammarAccess.getContainsAccess().getWSTerminalRuleCall_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contains__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainsAccess().getRightParenthesisKeyword_9()); }
	RightParenthesis
	{ after(grammarAccess.getContainsAccess().getRightParenthesisKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StartsWith__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartsWith__Group__0__Impl
	rule__StartsWith__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StartsWith__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartsWithAccess().getStartsWithKeyword_0()); }
	StartsWith
	{ after(grammarAccess.getStartsWithAccess().getStartsWithKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartsWith__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartsWith__Group__1__Impl
	rule__StartsWith__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StartsWith__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartsWithAccess().getLeftParenthesisKeyword_1()); }
	LeftParenthesis
	{ after(grammarAccess.getStartsWithAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartsWith__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartsWith__Group__2__Impl
	rule__StartsWith__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StartsWith__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartsWithAccess().getWSTerminalRuleCall_2()); }
	(RULE_WS)?
	{ after(grammarAccess.getStartsWithAccess().getWSTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartsWith__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartsWith__Group__3__Impl
	rule__StartsWith__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StartsWith__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartsWithAccess().getSearchStringAssignment_3()); }
	(rule__StartsWith__SearchStringAssignment_3)
	{ after(grammarAccess.getStartsWithAccess().getSearchStringAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartsWith__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartsWith__Group__4__Impl
	rule__StartsWith__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StartsWith__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartsWithAccess().getWSTerminalRuleCall_4()); }
	(RULE_WS)?
	{ after(grammarAccess.getStartsWithAccess().getWSTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartsWith__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartsWith__Group__5__Impl
	rule__StartsWith__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__StartsWith__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartsWithAccess().getCommaKeyword_5()); }
	Comma
	{ after(grammarAccess.getStartsWithAccess().getCommaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartsWith__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartsWith__Group__6__Impl
	rule__StartsWith__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__StartsWith__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartsWithAccess().getWSTerminalRuleCall_6()); }
	(RULE_WS)?
	{ after(grammarAccess.getStartsWithAccess().getWSTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartsWith__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartsWith__Group__7__Impl
	rule__StartsWith__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__StartsWith__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartsWithAccess().getSearchValueAssignment_7()); }
	(rule__StartsWith__SearchValueAssignment_7)
	{ after(grammarAccess.getStartsWithAccess().getSearchValueAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartsWith__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartsWith__Group__8__Impl
	rule__StartsWith__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__StartsWith__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartsWithAccess().getWSTerminalRuleCall_8()); }
	(RULE_WS)?
	{ after(grammarAccess.getStartsWithAccess().getWSTerminalRuleCall_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartsWith__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartsWith__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StartsWith__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartsWithAccess().getRightParenthesisKeyword_9()); }
	RightParenthesis
	{ after(grammarAccess.getStartsWithAccess().getRightParenthesisKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EndsWith__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndsWith__Group__0__Impl
	rule__EndsWith__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EndsWith__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndsWithAccess().getEndsWithKeyword_0()); }
	EndsWith
	{ after(grammarAccess.getEndsWithAccess().getEndsWithKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndsWith__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndsWith__Group__1__Impl
	rule__EndsWith__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EndsWith__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndsWithAccess().getLeftParenthesisKeyword_1()); }
	LeftParenthesis
	{ after(grammarAccess.getEndsWithAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndsWith__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndsWith__Group__2__Impl
	rule__EndsWith__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EndsWith__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndsWithAccess().getWSTerminalRuleCall_2()); }
	(RULE_WS)?
	{ after(grammarAccess.getEndsWithAccess().getWSTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndsWith__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndsWith__Group__3__Impl
	rule__EndsWith__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EndsWith__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndsWithAccess().getSearchStringAssignment_3()); }
	(rule__EndsWith__SearchStringAssignment_3)
	{ after(grammarAccess.getEndsWithAccess().getSearchStringAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndsWith__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndsWith__Group__4__Impl
	rule__EndsWith__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EndsWith__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndsWithAccess().getWSTerminalRuleCall_4()); }
	(RULE_WS)?
	{ after(grammarAccess.getEndsWithAccess().getWSTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndsWith__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndsWith__Group__5__Impl
	rule__EndsWith__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__EndsWith__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndsWithAccess().getCommaKeyword_5()); }
	Comma
	{ after(grammarAccess.getEndsWithAccess().getCommaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndsWith__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndsWith__Group__6__Impl
	rule__EndsWith__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__EndsWith__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndsWithAccess().getWSTerminalRuleCall_6()); }
	(RULE_WS)?
	{ after(grammarAccess.getEndsWithAccess().getWSTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndsWith__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndsWith__Group__7__Impl
	rule__EndsWith__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__EndsWith__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndsWithAccess().getSearchValueAssignment_7()); }
	(rule__EndsWith__SearchValueAssignment_7)
	{ after(grammarAccess.getEndsWithAccess().getSearchValueAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndsWith__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndsWith__Group__8__Impl
	rule__EndsWith__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__EndsWith__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndsWithAccess().getWSTerminalRuleCall_8()); }
	(RULE_WS)?
	{ after(grammarAccess.getEndsWithAccess().getWSTerminalRuleCall_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndsWith__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndsWith__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EndsWith__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndsWithAccess().getRightParenthesisKeyword_9()); }
	RightParenthesis
	{ after(grammarAccess.getEndsWithAccess().getRightParenthesisKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Format__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Format__Group__0__Impl
	rule__Format__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Format__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormatAccess().getFormatKeyword_0()); }
	Format
	{ after(grammarAccess.getFormatAccess().getFormatKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Format__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Format__Group__1__Impl
	rule__Format__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Format__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormatAccess().getLeftParenthesisKeyword_1()); }
	LeftParenthesis
	{ after(grammarAccess.getFormatAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Format__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Format__Group__2__Impl
	rule__Format__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Format__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormatAccess().getWSTerminalRuleCall_2()); }
	(RULE_WS)?
	{ after(grammarAccess.getFormatAccess().getWSTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Format__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Format__Group__3__Impl
	rule__Format__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Format__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormatAccess().getStringAssignment_3()); }
	(rule__Format__StringAssignment_3)
	{ after(grammarAccess.getFormatAccess().getStringAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Format__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Format__Group__4__Impl
	rule__Format__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Format__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormatAccess().getGroup_4()); }
	(rule__Format__Group_4__0)*
	{ after(grammarAccess.getFormatAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Format__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Format__Group__5__Impl
	rule__Format__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Format__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormatAccess().getWSTerminalRuleCall_5()); }
	(RULE_WS)?
	{ after(grammarAccess.getFormatAccess().getWSTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Format__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Format__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Format__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormatAccess().getRightParenthesisKeyword_6()); }
	RightParenthesis
	{ after(grammarAccess.getFormatAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Format__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Format__Group_4__0__Impl
	rule__Format__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Format__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormatAccess().getWSTerminalRuleCall_4_0()); }
	(RULE_WS)?
	{ after(grammarAccess.getFormatAccess().getWSTerminalRuleCall_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Format__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Format__Group_4__1__Impl
	rule__Format__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Format__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormatAccess().getCommaKeyword_4_1()); }
	Comma
	{ after(grammarAccess.getFormatAccess().getCommaKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Format__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Format__Group_4__2__Impl
	rule__Format__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Format__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormatAccess().getWSTerminalRuleCall_4_2()); }
	(RULE_WS)?
	{ after(grammarAccess.getFormatAccess().getWSTerminalRuleCall_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Format__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Format__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Format__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormatAccess().getReplaceValuesAssignment_4_3()); }
	(rule__Format__ReplaceValuesAssignment_4_3)
	{ after(grammarAccess.getFormatAccess().getReplaceValuesAssignment_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Join__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Join__Group__0__Impl
	rule__Join__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinAccess().getJoinKeyword_0()); }
	Join
	{ after(grammarAccess.getJoinAccess().getJoinKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Join__Group__1__Impl
	rule__Join__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinAccess().getLeftParenthesisKeyword_1()); }
	LeftParenthesis
	{ after(grammarAccess.getJoinAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Join__Group__2__Impl
	rule__Join__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinAccess().getWSTerminalRuleCall_2()); }
	(RULE_WS)?
	{ after(grammarAccess.getJoinAccess().getWSTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Join__Group__3__Impl
	rule__Join__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinAccess().getArrayAssignment_3()); }
	(rule__Join__ArrayAssignment_3)
	{ after(grammarAccess.getJoinAccess().getArrayAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Join__Group__4__Impl
	rule__Join__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinAccess().getGroup_4()); }
	(rule__Join__Group_4__0)?
	{ after(grammarAccess.getJoinAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Join__Group__5__Impl
	rule__Join__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinAccess().getWSTerminalRuleCall_5()); }
	(RULE_WS)?
	{ after(grammarAccess.getJoinAccess().getWSTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Join__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinAccess().getRightParenthesisKeyword_6()); }
	RightParenthesis
	{ after(grammarAccess.getJoinAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Join__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Join__Group_4__0__Impl
	rule__Join__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinAccess().getWSTerminalRuleCall_4_0()); }
	(RULE_WS)?
	{ after(grammarAccess.getJoinAccess().getWSTerminalRuleCall_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Join__Group_4__1__Impl
	rule__Join__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinAccess().getCommaKeyword_4_1()); }
	Comma
	{ after(grammarAccess.getJoinAccess().getCommaKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Join__Group_4__2__Impl
	rule__Join__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinAccess().getWSTerminalRuleCall_4_2()); }
	(RULE_WS)?
	{ after(grammarAccess.getJoinAccess().getWSTerminalRuleCall_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Join__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinAccess().getSepAssignment_4_3()); }
	(rule__Join__SepAssignment_4_3)
	{ after(grammarAccess.getJoinAccess().getSepAssignment_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ToJSON__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ToJSON__Group__0__Impl
	rule__ToJSON__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ToJSON__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getToJSONAccess().getToJSONKeyword_0()); }
	ToJSON
	{ after(grammarAccess.getToJSONAccess().getToJSONKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ToJSON__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ToJSON__Group__1__Impl
	rule__ToJSON__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ToJSON__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getToJSONAccess().getLeftParenthesisKeyword_1()); }
	LeftParenthesis
	{ after(grammarAccess.getToJSONAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ToJSON__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ToJSON__Group__2__Impl
	rule__ToJSON__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ToJSON__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getToJSONAccess().getWSTerminalRuleCall_2()); }
	(RULE_WS)?
	{ after(grammarAccess.getToJSONAccess().getWSTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ToJSON__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ToJSON__Group__3__Impl
	rule__ToJSON__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ToJSON__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getToJSONAccess().getValueAssignment_3()); }
	(rule__ToJSON__ValueAssignment_3)
	{ after(grammarAccess.getToJSONAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ToJSON__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ToJSON__Group__4__Impl
	rule__ToJSON__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ToJSON__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getToJSONAccess().getWSTerminalRuleCall_4()); }
	(RULE_WS)?
	{ after(grammarAccess.getToJSONAccess().getWSTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ToJSON__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ToJSON__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ToJSON__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getToJSONAccess().getRightParenthesisKeyword_5()); }
	RightParenthesis
	{ after(grammarAccess.getToJSONAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FromJSON__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FromJSON__Group__0__Impl
	rule__FromJSON__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FromJSON__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFromJSONAccess().getFromJSONKeyword_0()); }
	FromJSON
	{ after(grammarAccess.getFromJSONAccess().getFromJSONKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FromJSON__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FromJSON__Group__1__Impl
	rule__FromJSON__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FromJSON__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFromJSONAccess().getLeftParenthesisKeyword_1()); }
	LeftParenthesis
	{ after(grammarAccess.getFromJSONAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FromJSON__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FromJSON__Group__2__Impl
	rule__FromJSON__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FromJSON__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFromJSONAccess().getWSTerminalRuleCall_2()); }
	(RULE_WS)?
	{ after(grammarAccess.getFromJSONAccess().getWSTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FromJSON__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FromJSON__Group__3__Impl
	rule__FromJSON__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FromJSON__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFromJSONAccess().getValueAssignment_3()); }
	(rule__FromJSON__ValueAssignment_3)
	{ after(grammarAccess.getFromJSONAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FromJSON__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FromJSON__Group__4__Impl
	rule__FromJSON__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FromJSON__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFromJSONAccess().getWSTerminalRuleCall_4()); }
	(RULE_WS)?
	{ after(grammarAccess.getFromJSONAccess().getWSTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FromJSON__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FromJSON__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FromJSON__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFromJSONAccess().getRightParenthesisKeyword_5()); }
	RightParenthesis
	{ after(grammarAccess.getFromJSONAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HashFiles__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HashFiles__Group__0__Impl
	rule__HashFiles__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HashFiles__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHashFilesAccess().getHashFilesKeyword_0()); }
	HashFiles
	{ after(grammarAccess.getHashFilesAccess().getHashFilesKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HashFiles__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HashFiles__Group__1__Impl
	rule__HashFiles__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HashFiles__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHashFilesAccess().getLeftParenthesisKeyword_1()); }
	LeftParenthesis
	{ after(grammarAccess.getHashFilesAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HashFiles__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HashFiles__Group__2__Impl
	rule__HashFiles__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__HashFiles__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHashFilesAccess().getWSTerminalRuleCall_2()); }
	(RULE_WS)?
	{ after(grammarAccess.getHashFilesAccess().getWSTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HashFiles__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HashFiles__Group__3__Impl
	rule__HashFiles__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__HashFiles__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHashFilesAccess().getPathAssignment_3()); }
	(rule__HashFiles__PathAssignment_3)
	{ after(grammarAccess.getHashFilesAccess().getPathAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HashFiles__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HashFiles__Group__4__Impl
	rule__HashFiles__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__HashFiles__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHashFilesAccess().getWSTerminalRuleCall_4()); }
	(RULE_WS)?
	{ after(grammarAccess.getHashFilesAccess().getWSTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HashFiles__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HashFiles__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HashFiles__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHashFilesAccess().getRightParenthesisKeyword_5()); }
	RightParenthesis
	{ after(grammarAccess.getHashFilesAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Success__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Success__Group__0__Impl
	rule__Success__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Success__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuccessAccess().getSuccessAction_0()); }
	()
	{ after(grammarAccess.getSuccessAccess().getSuccessAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Success__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Success__Group__1__Impl
	rule__Success__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Success__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuccessAccess().getSuccessKeyword_1()); }
	Success
	{ after(grammarAccess.getSuccessAccess().getSuccessKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Success__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Success__Group__2__Impl
	rule__Success__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Success__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuccessAccess().getLeftParenthesisKeyword_2()); }
	LeftParenthesis
	{ after(grammarAccess.getSuccessAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Success__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Success__Group__3__Impl
	rule__Success__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Success__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuccessAccess().getWSTerminalRuleCall_3()); }
	(RULE_WS)?
	{ after(grammarAccess.getSuccessAccess().getWSTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Success__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Success__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Success__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuccessAccess().getRightParenthesisKeyword_4()); }
	RightParenthesis
	{ after(grammarAccess.getSuccessAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Always__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Always__Group__0__Impl
	rule__Always__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Always__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlwaysAccess().getAlwaysAction_0()); }
	()
	{ after(grammarAccess.getAlwaysAccess().getAlwaysAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Always__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Always__Group__1__Impl
	rule__Always__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Always__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlwaysAccess().getAlwaysKeyword_1()); }
	Always
	{ after(grammarAccess.getAlwaysAccess().getAlwaysKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Always__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Always__Group__2__Impl
	rule__Always__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Always__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlwaysAccess().getLeftParenthesisKeyword_2()); }
	LeftParenthesis
	{ after(grammarAccess.getAlwaysAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Always__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Always__Group__3__Impl
	rule__Always__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Always__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlwaysAccess().getWSTerminalRuleCall_3()); }
	(RULE_WS)?
	{ after(grammarAccess.getAlwaysAccess().getWSTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Always__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Always__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Always__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlwaysAccess().getRightParenthesisKeyword_4()); }
	RightParenthesis
	{ after(grammarAccess.getAlwaysAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Cancelled__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cancelled__Group__0__Impl
	rule__Cancelled__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cancelled__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCancelledAccess().getCancelledAction_0()); }
	()
	{ after(grammarAccess.getCancelledAccess().getCancelledAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cancelled__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cancelled__Group__1__Impl
	rule__Cancelled__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Cancelled__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCancelledAccess().getCancelledKeyword_1()); }
	Cancelled
	{ after(grammarAccess.getCancelledAccess().getCancelledKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cancelled__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cancelled__Group__2__Impl
	rule__Cancelled__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Cancelled__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCancelledAccess().getLeftParenthesisKeyword_2()); }
	LeftParenthesis
	{ after(grammarAccess.getCancelledAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cancelled__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cancelled__Group__3__Impl
	rule__Cancelled__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Cancelled__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCancelledAccess().getWSTerminalRuleCall_3()); }
	(RULE_WS)?
	{ after(grammarAccess.getCancelledAccess().getWSTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cancelled__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cancelled__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cancelled__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCancelledAccess().getRightParenthesisKeyword_4()); }
	RightParenthesis
	{ after(grammarAccess.getCancelledAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Failure__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Failure__Group__0__Impl
	rule__Failure__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Failure__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFailureAccess().getFailureAction_0()); }
	()
	{ after(grammarAccess.getFailureAccess().getFailureAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Failure__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Failure__Group__1__Impl
	rule__Failure__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Failure__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFailureAccess().getFailureKeyword_1()); }
	Failure
	{ after(grammarAccess.getFailureAccess().getFailureKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Failure__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Failure__Group__2__Impl
	rule__Failure__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Failure__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFailureAccess().getLeftParenthesisKeyword_2()); }
	LeftParenthesis
	{ after(grammarAccess.getFailureAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Failure__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Failure__Group__3__Impl
	rule__Failure__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Failure__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFailureAccess().getWSTerminalRuleCall_3()); }
	(RULE_WS)?
	{ after(grammarAccess.getFailureAccess().getWSTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Failure__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Failure__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Failure__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFailureAccess().getRightParenthesisKeyword_4()); }
	RightParenthesis
	{ after(grammarAccess.getFailureAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Workflow__UnorderedGroup_1
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getWorkflowAccess().getUnorderedGroup_1());
	}
:
	rule__Workflow__UnorderedGroup_1__0
	?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getWorkflowAccess().getUnorderedGroup_1());
	restoreStackSize(stackSize);
}

rule__Workflow__UnorderedGroup_1__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getWorkflowAccess().getUnorderedGroup_1(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getWorkflowAccess().getUnorderedGroup_1(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getWorkflowAccess().getGroup_1_0()); }
					(rule__Workflow__Group_1_0__0)
					{ after(grammarAccess.getWorkflowAccess().getGroup_1_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getWorkflowAccess().getUnorderedGroup_1(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getWorkflowAccess().getUnorderedGroup_1(), 1);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getWorkflowAccess().getGroup_1_1()); }
					(rule__Workflow__Group_1_1__0)
					{ after(grammarAccess.getWorkflowAccess().getGroup_1_1()); }
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getWorkflowAccess().getUnorderedGroup_1());
	restoreStackSize(stackSize);
}

rule__Workflow__UnorderedGroup_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__UnorderedGroup_1__Impl
	rule__Workflow__UnorderedGroup_1__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__UnorderedGroup_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workflow__UnorderedGroup_1__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__Workflow__NameAssignment_1_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWorkflowAccess().getNameExpressionParserRuleCall_1_0_3_0()); }
		ruleExpression
		{ after(grammarAccess.getWorkflowAccess().getNameExpressionParserRuleCall_1_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__RunNameAssignment_1_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWorkflowAccess().getRunNameExpressionParserRuleCall_1_1_3_0()); }
		ruleExpression
		{ after(grammarAccess.getWorkflowAccess().getRunNameExpressionParserRuleCall_1_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__ExpressionsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConcatAccess().getExpressionsConcatExpressionParserRuleCall_0_0()); }
		ruleConcatExpression
		{ after(grammarAccess.getConcatAccess().getExpressionsConcatExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__ExpressionsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConcatAccess().getExpressionsConcatExpressionParserRuleCall_1_1_0()); }
		ruleConcatExpression
		{ after(grammarAccess.getConcatAccess().getExpressionsConcatExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringLiteralAccess().getValueYAMLStringParserRuleCall_0()); }
		ruleYAMLString
		{ after(grammarAccess.getStringLiteralAccess().getValueYAMLStringParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntegerLiteralAccess().getValueINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getIntegerLiteralAccess().getValueINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleLiteral__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDoubleLiteralAccess().getValueDOUBLETerminalRuleCall_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getDoubleLiteralAccess().getValueDOUBLETerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanLiteralAccess().getValueBOOLEANTerminalRuleCall_0()); }
		RULE_BOOLEAN
		{ after(grammarAccess.getBooleanLiteralAccess().getValueBOOLEANTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__RhsAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrAccess().getRhsAndParserRuleCall_1_4_0()); }
		ruleAnd
		{ after(grammarAccess.getOrAccess().getRhsAndParserRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__RhsAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndAccess().getRhsEqualityParserRuleCall_1_4_0()); }
		ruleEquality
		{ after(grammarAccess.getAndAccess().getRhsEqualityParserRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__OpAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityAccess().getOpEQUALITY_OPEnumRuleCall_1_2_0()); }
		ruleEQUALITY_OP
		{ after(grammarAccess.getEqualityAccess().getOpEQUALITY_OPEnumRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__RhsAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityAccess().getRhsComparisonParserRuleCall_1_4_0()); }
		ruleComparison
		{ after(grammarAccess.getEqualityAccess().getRhsComparisonParserRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__OpAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getOpCOMPARISON_OPEnumRuleCall_1_2_0()); }
		ruleCOMPARISON_OP
		{ after(grammarAccess.getComparisonAccess().getOpCOMPARISON_OPEnumRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__RhsAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getRhsUnaryOpParserRuleCall_1_4_0()); }
		ruleUnaryOp
		{ after(grammarAccess.getComparisonAccess().getRhsUnaryOpParserRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Not__ChildExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNotAccess().getChildExprVariableDereferenceParserRuleCall_1_0()); }
		ruleVariableDereference
		{ after(grammarAccess.getNotAccess().getChildExprVariableDereferenceParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__PropertyAssignment_1_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDereferenceAccess().getPropertyIDTerminalRuleCall_1_1_0_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableDereferenceAccess().getPropertyIDTerminalRuleCall_1_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__PropertyAssignment_1_1_1_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDereferenceAccess().getPropertyIDTerminalRuleCall_1_1_1_0_2_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableDereferenceAccess().getPropertyIDTerminalRuleCall_1_1_1_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__PropertyAssignment_1_1_1_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDereferenceAccess().getPropertyIDTerminalRuleCall_1_1_1_1_0_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableDereferenceAccess().getPropertyIDTerminalRuleCall_1_1_1_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ContextAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getContextCONTEXTEnumRuleCall_0_1_0()); }
		ruleCONTEXT
		{ after(grammarAccess.getAtomicAccess().getContextCONTEXTEnumRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__NameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getNameIDTerminalRuleCall_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getAtomicAccess().getNameIDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getAtomicAccess().getValueINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueDOUBLETerminalRuleCall_3_1_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getAtomicAccess().getValueDOUBLETerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueBOOLEANTerminalRuleCall_4_1_0()); }
		RULE_BOOLEAN
		{ after(grammarAccess.getAtomicAccess().getValueBOOLEANTerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueSTRINGTerminalRuleCall_5_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getAtomicAccess().getValueSTRINGTerminalRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__SearchAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContainsAccess().getSearchInsideBracketsExpressionParserRuleCall_3_0()); }
		ruleInsideBracketsExpression
		{ after(grammarAccess.getContainsAccess().getSearchInsideBracketsExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__ItemAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContainsAccess().getItemInsideBracketsExpressionParserRuleCall_7_0()); }
		ruleInsideBracketsExpression
		{ after(grammarAccess.getContainsAccess().getItemInsideBracketsExpressionParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartsWith__SearchStringAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartsWithAccess().getSearchStringInsideBracketsExpressionParserRuleCall_3_0()); }
		ruleInsideBracketsExpression
		{ after(grammarAccess.getStartsWithAccess().getSearchStringInsideBracketsExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartsWith__SearchValueAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartsWithAccess().getSearchValueInsideBracketsExpressionParserRuleCall_7_0()); }
		ruleInsideBracketsExpression
		{ after(grammarAccess.getStartsWithAccess().getSearchValueInsideBracketsExpressionParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndsWith__SearchStringAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEndsWithAccess().getSearchStringInsideBracketsExpressionParserRuleCall_3_0()); }
		ruleInsideBracketsExpression
		{ after(grammarAccess.getEndsWithAccess().getSearchStringInsideBracketsExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndsWith__SearchValueAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEndsWithAccess().getSearchValueInsideBracketsExpressionParserRuleCall_7_0()); }
		ruleInsideBracketsExpression
		{ after(grammarAccess.getEndsWithAccess().getSearchValueInsideBracketsExpressionParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Format__StringAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormatAccess().getStringInsideBracketsExpressionParserRuleCall_3_0()); }
		ruleInsideBracketsExpression
		{ after(grammarAccess.getFormatAccess().getStringInsideBracketsExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Format__ReplaceValuesAssignment_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormatAccess().getReplaceValuesInsideBracketsExpressionParserRuleCall_4_3_0()); }
		ruleInsideBracketsExpression
		{ after(grammarAccess.getFormatAccess().getReplaceValuesInsideBracketsExpressionParserRuleCall_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__ArrayAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinAccess().getArrayInsideBracketsExpressionParserRuleCall_3_0()); }
		ruleInsideBracketsExpression
		{ after(grammarAccess.getJoinAccess().getArrayInsideBracketsExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__SepAssignment_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinAccess().getSepInsideBracketsExpressionParserRuleCall_4_3_0()); }
		ruleInsideBracketsExpression
		{ after(grammarAccess.getJoinAccess().getSepInsideBracketsExpressionParserRuleCall_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ToJSON__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getToJSONAccess().getValueInsideBracketsExpressionParserRuleCall_3_0()); }
		ruleInsideBracketsExpression
		{ after(grammarAccess.getToJSONAccess().getValueInsideBracketsExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FromJSON__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFromJSONAccess().getValueInsideBracketsExpressionParserRuleCall_3_0()); }
		ruleInsideBracketsExpression
		{ after(grammarAccess.getFromJSONAccess().getValueInsideBracketsExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HashFiles__PathAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHashFilesAccess().getPathInsideBracketsExpressionParserRuleCall_3_0()); }
		ruleInsideBracketsExpression
		{ after(grammarAccess.getHashFilesAccess().getPathInsideBracketsExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}
