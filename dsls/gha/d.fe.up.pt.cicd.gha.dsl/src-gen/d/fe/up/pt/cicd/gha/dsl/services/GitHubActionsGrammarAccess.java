/*
 * generated by Xtext 2.33.0
 */
package d.fe.up.pt.cicd.gha.dsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.UnorderedGroup;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class GitHubActionsGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class WorkflowElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.Workflow");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final RuleCall cNEWLINETerminalRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cNameKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Keyword cColonKeyword_1_0_1 = (Keyword)cGroup_1_0.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_1_0_2 = (RuleCall)cGroup_1_0.eContents().get(2);
		private final Assignment cNameAssignment_1_0_3 = (Assignment)cGroup_1_0.eContents().get(3);
		private final RuleCall cNameExpressionParserRuleCall_1_0_3_0 = (RuleCall)cNameAssignment_1_0_3.eContents().get(0);
		private final RuleCall cNEWLINETerminalRuleCall_1_0_4 = (RuleCall)cGroup_1_0.eContents().get(4);
		private final Group cGroup_1_0_5 = (Group)cGroup_1_0.eContents().get(5);
		private final RuleCall cWSTerminalRuleCall_1_0_5_0 = (RuleCall)cGroup_1_0_5.eContents().get(0);
		private final RuleCall cNEWLINETerminalRuleCall_1_0_5_1 = (RuleCall)cGroup_1_0_5.eContents().get(1);
		private final Group cGroup_1_1 = (Group)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cRunNameKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Keyword cColonKeyword_1_1_1 = (Keyword)cGroup_1_1.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_1_1_2 = (RuleCall)cGroup_1_1.eContents().get(2);
		private final Assignment cRunNameAssignment_1_1_3 = (Assignment)cGroup_1_1.eContents().get(3);
		private final RuleCall cRunNameExpressionParserRuleCall_1_1_3_0 = (RuleCall)cRunNameAssignment_1_1_3.eContents().get(0);
		
		//Workflow returns GHA::Workflow:
		//    (WS? NEWLINE)*
		//    (
		//        ('name' ':' WS? name=Expression NEWLINE (WS? NEWLINE)*)? &
		//        ('run-name' ':' WS? runName=Expression)? /* &
		//        ('on' ':' WS? (
		//            (triggers+=SimpleTrigger NEWLINE) |
		//            ('[' WS? triggers+=SimpleTrigger ( WS? ',' WS? triggers+=SimpleTrigger)* WS? ']' NEWLINE) |
		//            (
		//                NEWLINE
		//                BEGIN
		//                ('-' triggers+=SimpleTrigger NEWLINE)+
		//                END
		//            ) |
		//            triggers+=OptionedTrigger+
		//        )) &
		//        ('permissions' ':' NEWLINE BEGIN permissions+=Permission+ END)? &
		//        ('env' ':' NEWLINE BEGIN environmentVariables+=VariableAssignment+ END)? &
		//        ('defaults' ':' NEWLINE BEGIN defaults=Defaults END)? &
		//        ('concurrency' ':' NEWLINE BEGIN concurrencyGroup=ConcurrencyGroup END)? &
		//        ('jobs' ':' NEWLINE BEGIN jobs+=Job+ END)
		//        *
		//        */
		//    )
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(WS? NEWLINE)*
		//(
		//    ('name' ':' WS? name=Expression NEWLINE (WS? NEWLINE)*)? &
		//    ('run-name' ':' WS? runName=Expression)? /* &
		//    ('on' ':' WS? (
		//        (triggers+=SimpleTrigger NEWLINE) |
		//        ('[' WS? triggers+=SimpleTrigger ( WS? ',' WS? triggers+=SimpleTrigger)* WS? ']' NEWLINE) |
		//        (
		//            NEWLINE
		//            BEGIN
		//            ('-' triggers+=SimpleTrigger NEWLINE)+
		//            END
		//        ) |
		//        triggers+=OptionedTrigger+
		//    )) &
		//    ('permissions' ':' NEWLINE BEGIN permissions+=Permission+ END)? &
		//    ('env' ':' NEWLINE BEGIN environmentVariables+=VariableAssignment+ END)? &
		//    ('defaults' ':' NEWLINE BEGIN defaults=Defaults END)? &
		//    ('concurrency' ':' NEWLINE BEGIN concurrencyGroup=ConcurrencyGroup END)? &
		//    ('jobs' ':' NEWLINE BEGIN jobs+=Job+ END)
		//    *
		//    */
		//)
		public Group getGroup() { return cGroup; }
		
		//(WS? NEWLINE)*
		public Group getGroup_0() { return cGroup_0; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_0_0() { return cWSTerminalRuleCall_0_0; }
		
		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_0_1() { return cNEWLINETerminalRuleCall_0_1; }
		
		//(
		//    ('name' ':' WS? name=Expression NEWLINE (WS? NEWLINE)*)? &
		//    ('run-name' ':' WS? runName=Expression)? /* &
		//    ('on' ':' WS? (
		//        (triggers+=SimpleTrigger NEWLINE) |
		//        ('[' WS? triggers+=SimpleTrigger ( WS? ',' WS? triggers+=SimpleTrigger)* WS? ']' NEWLINE) |
		//        (
		//            NEWLINE
		//            BEGIN
		//            ('-' triggers+=SimpleTrigger NEWLINE)+
		//            END
		//        ) |
		//        triggers+=OptionedTrigger+
		//    )) &
		//    ('permissions' ':' NEWLINE BEGIN permissions+=Permission+ END)? &
		//    ('env' ':' NEWLINE BEGIN environmentVariables+=VariableAssignment+ END)? &
		//    ('defaults' ':' NEWLINE BEGIN defaults=Defaults END)? &
		//    ('concurrency' ':' NEWLINE BEGIN concurrencyGroup=ConcurrencyGroup END)? &
		//    ('jobs' ':' NEWLINE BEGIN jobs+=Job+ END)
		//    *
		//    */
		//)
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//('name' ':' WS? name=Expression NEWLINE (WS? NEWLINE)*)?
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'name'
		public Keyword getNameKeyword_1_0_0() { return cNameKeyword_1_0_0; }
		
		//':'
		public Keyword getColonKeyword_1_0_1() { return cColonKeyword_1_0_1; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_1_0_2() { return cWSTerminalRuleCall_1_0_2; }
		
		//name=Expression
		public Assignment getNameAssignment_1_0_3() { return cNameAssignment_1_0_3; }
		
		//Expression
		public RuleCall getNameExpressionParserRuleCall_1_0_3_0() { return cNameExpressionParserRuleCall_1_0_3_0; }
		
		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_1_0_4() { return cNEWLINETerminalRuleCall_1_0_4; }
		
		//(WS? NEWLINE)*
		public Group getGroup_1_0_5() { return cGroup_1_0_5; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_1_0_5_0() { return cWSTerminalRuleCall_1_0_5_0; }
		
		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_1_0_5_1() { return cNEWLINETerminalRuleCall_1_0_5_1; }
		
		//('run-name' ':' WS? runName=Expression)?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'run-name'
		public Keyword getRunNameKeyword_1_1_0() { return cRunNameKeyword_1_1_0; }
		
		//':'
		public Keyword getColonKeyword_1_1_1() { return cColonKeyword_1_1_1; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_1_1_2() { return cWSTerminalRuleCall_1_1_2; }
		
		//runName=Expression
		public Assignment getRunNameAssignment_1_1_3() { return cRunNameAssignment_1_1_3; }
		
		//Expression
		public RuleCall getRunNameExpressionParserRuleCall_1_1_3_0() { return cRunNameExpressionParserRuleCall_1_1_3_0; }
	}
	public class ExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.Expression");
		private final RuleCall cConcatParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///*
		//Job returns GHA::Job:
		//    ScriptJob | ReuseWorkflowJob
		//;
		//ScriptJob returns GHA::ScriptJob:
		//    name=YAMLID ':'
		//        NEWLINE+
		//        BEGIN
		//        ('name' ':' jobName=Expression NEWLINE+)? &
		//        ('permissions' ':' NEWLINE+ BEGIN permissions+=Permission+ END NEWLINE*)? &
		//        ('needs' ':'
		//            (dependsOn+=[GHA::Job] NEWLINE+) |
		//            ('[' dependsOn+=[GHA::Job] (',' dependsOn+=[GHA::Job])* ']' NEWLINE+) |
		//            (
		//                NEWLINE+
		//                BEGIN
		//                ('-' dependsOn+=[GHA::Job] NEWLINE+)+
		//                END
		//                NEWLINE*
		//        ))? &
		//        ifCondition=IfStatement? &
		//        ('runs-on' ':' agent=Agent) &
		//        ('environment' ':' stagingEnvironment=StagingEnvironment)? &
		//        ('concurrency' ':' NEWLINE+ BEGIN concurrencyGroup=ConcurrencyGroup END NEWLINE*)? &
		//        ('env' ':' NEWLINE+ BEGIN environmentVariables+=VariableAssignment+ END NEWLINE*)? &
		//        ('defaults' ':' NEWLINE+ BEGIN defaults=Defaults END NEWLINE*)? &
		//        ('steps' ':' NEWLINE+ BEGIN steps+=Step+ END NEWLINE*) &
		//        ('strategy' ':' NEWLINE+ BEGIN strategy=Strategy END NEWLINE*)? &
		//        ('container' ':' container=Container)? &
		//        ('services' ':' NEWLINE+ BEGIN services+=Service+ END NEWLINE*)? &
		//        ('continue-on-error' ':' continueOnError=Expression NEWLINE+)? &
		//        ('timeout-minutes' ':' timeoutMinutes=Expression NEWLINE+)?
		//        END
		//        NEWLINE*
		//;
		//ReuseWorkflowJob returns GHA::ReuseWorkflowJob:
		//    name=YAMLID ':'
		//        NEWLINE+
		//        BEGIN
		//        ('name' ':' jobName=Expression  NEWLINE+)? &
		//        ('permissions' ':' NEWLINE+ BEGIN permissions+=Permission+ END NEWLINE*)? &
		//        ('needs' ':'
		//            (dependsOn+=[GHA::Job] NEWLINE+) |
		//            ('[' dependsOn+=[GHA::Job] (',' dependsOn+=[GHA::Job])* ']' NEWLINE+) |
		//            (
		//                NEWLINE+
		//                BEGIN
		//                ('-' dependsOn+=[GHA::Job] NEWLINE+)+
		//                END
		//                NEWLINE*
		//            )
		//        )? &
		//        ifCondition=IfStatement? &
		//        ('runs-on' ':' agent=Agent) &
		//        ('environment' ':' stagingEnvironment=StagingEnvironment)? &
		//        ('concurrency' ':' NEWLINE+ BEGIN concurrencyGroup=ConcurrencyGroup END NEWLINE*)? &
		//        ('env' ':' NEWLINE+ BEGIN environmentVariables+=VariableAssignment+ END NEWLINE*)? &
		//        ('defaults' ':' NEWLINE+ BEGIN defaults=Defaults END NEWLINE*)? &
		//        ('strategy' ':' NEWLINE+ BEGIN strategy=Strategy END NEWLINE*)? &
		//        ('container' ':' container=Container)? &
		//        ('services' ':' NEWLINE+ BEGIN services+=Service+ END NEWLINE*)? &
		//        ('uses' ':' workflowPath=Expression NEWLINE+)? &
		//        ('with' ':' NEWLINE+ BEGIN args+=VariableAssignment+ END NEWLINE*)? &
		//        ('secrets' ':' ((inheritSecrets?='inherit' NEWLINE+) | (NEWLINE+ BEGIN secrets+=VariableAssignment+ END NEWLINE*)))? &
		//        ('continue-on-error' ':' continueOnError=Expression NEWLINE+)? &
		//        ('timeout-minutes' ':' timeoutMinutes=Expression NEWLINE+)?
		//        END
		//        NEWLINE*
		//;
		//Agent returns GHA::Agent:
		//    (
		//        (labels+=Expression NEWLINE+) |
		//        ('[' labels+=Expression (',' labels+=Expression)* ']' NEWLINE+) |
		//        (
		//            NEWLINE+
		//            BEGIN
		//            ('-' labels+=Expression NEWLINE+)+
		//            END
		//            NEWLINE*
		//        )
		//    ) |
		//    (
		//        NEWLINE+
		//        BEGIN
		//        (
		//            (
		//                'labels' ':'
		//                    (labels+=Expression NEWLINE+) |
		//                    ('[' labels+=Expression (',' labels+=Expression)* ']' NEWLINE+) |
		//                    (
		//                        NEWLINE+
		//                        BEGIN
		//                        ('-' labels+=Expression NEWLINE+)+
		//                        END
		//                        NEWLINE*
		//                    )
		//            )
		//            (
		//                'group' ':' group=Expression NEWLINE+
		//            )?
		//        )|
		//        (
		//            (
		//                'group' ':' group=Expression NEWLINE+
		//            )
		//            (
		//                'labels' ':'
		//                    (labels+=Expression NEWLINE+) |
		//                    ('[' labels+=Expression (',' labels+=Expression)* ']' NEWLINE+) |
		//                    (
		//                        NEWLINE+
		//                        BEGIN
		//                        ('-' labels+=Expression NEWLINE+)+
		//                        END
		//                        NEWLINE*
		//                    )
		//            )?
		//        )
		//        END
		//        NEWLINE*
		//    )
		//;
		//Step returns GHA::Step:
		//    '-' BEGIN (Command | Package) END
		//;
		//Command returns GHA::Command:
		//    ('id' ':' id=STRING NEWLINE+)? &
		//    ifCondition=IfStatement? &
		//    ('name' ':' name=Expression NEWLINE+)? &
		//    ('shell' ':' shell=Expression NEWLINE+)? &
		//    ('working-directory' ':' workingDirectory=Expression NEWLINE+)? &
		//    ('env' ':' NEWLINE+ BEGIN environmentVariables+=VariableAssignment+ END NEWLINE*)? &
		//    ('continue-on-error' ':' continueOnError=Expression NEWLINE+)? &
		//    ('timeout-minutes' ':' timeoutMinutes=Expression NEWLINE+)?
		//    ('run' ':' command=Expression NEWLINE+)
		//;
		//Package returns GHA::Package:
		//    ('id' ':' id=STRING NEWLINE+)? &
		//    ifCondition=IfStatement? &
		//    ('name' ':' name=Expression NEWLINE+)? &
		//    ('shell' ':' shell=Expression NEWLINE+)? &
		//    ('working-directory' ':' workingDirectory=Expression NEWLINE+)? &
		//    ('env' ':' NEWLINE+ BEGIN environmentVariables+=VariableAssignment+ END NEWLINE)? &
		//    ('continue-on-error' ':' continueOnError=Expression NEWLINE+)? &
		//    ('timeout-minutes' ':' timeoutMinutes=Expression NEWLINE+)?
		//    ('uses' ':' uses=Expression NEWLINE+) &
		//    ('with' ':'
		//        NEWLINE+
		//        BEGIN
		//        (
		//            ('entrypoint' ':' entrypoint=Expression NEWLINE+) &
		//            ('args' ':' containerArgs=Expression NEWLINE+)?
		//        ) |
		//        (
		//            args+=VariableAssignment+
		//        )
		//        END
		//        NEWLINE*
		//    )?
		//;
		//IfStatement returns GHA::Expression:
		//    'if' ':' Expression NEWLINE+
		//;
		//ConcurrencyGroup returns GHA::ConcurrencyGroup:
		//    ('group' ':' name=Expression NEWLINE+) &
		//    ('cancel-in-progress' ':' cancelInProgress=Expression NEWLINE+)?
		//;
		//SimpleTrigger returns GHA::Trigger:
		//    (
		//        SimpleWorkflowDispatchTrigger |
		//        SimpleWorkflowCallTrigger |
		//        SimplePushTriggerTrigger |
		//        SimplePullRequestTrigger |
		//        SimpleStandardEventTrigger
		//    )
		//    NEWLINE+
		//;
		//SimplePullRequestTrigger returns GHA::PullRequestTrigger:
		//    {GHA::PullRequestTrigger} 'pull_request' | {GHA::PullRequestTrigger} 'pull_request_target'
		//;
		//SimplePushTriggerTrigger returns GHA::PushTrigger:
		//    {GHA::PushTrigger} 'push'
		//;
		//SimpleWorkflowCallTrigger returns GHA::WorkflowCallTrigger:
		//    {GHA::WorkflowCallTrigger} 'workflow_call'
		//;
		//SimpleWorkflowDispatchTrigger returns GHA::WorkflowDispatchTrigger:
		//    {GHA::WorkflowDispatchTrigger} 'workflow_dispatch'
		//;
		//SimpleStandardEventTrigger returns GHA::StandardEventTrigger:
		//    event=EVENT
		//;
		//OptionedTrigger returns GHA::Trigger:
		//    NEWLINE+
		//    BEGIN
		//    (
		//        OptionedPullRequestTrigger |
		//        OptionedPushTrigger |
		//        OptionedScheduleTrigger |
		//        OptionedStandardEventTrigger |
		//        OptionedWorkflowCallTrigger |
		//        OptionedWorkflowRunTrigger |
		//        OptionedWorkflowDispatchTrigger
		//    )
		//    END
		//    NEWLINE*
		//;
		//OptionedStandardEventTrigger returns GHA::StandardEventTrigger:
		//    event=EVENT ':'
		//        NEWLINE+
		//        BEGIN
		//        'types' ':'
		//            (eventTypes+=WEBHOOK_ACTIVITY_TYPE NEWLINE+) |
		//            ('[' eventTypes+=WEBHOOK_ACTIVITY_TYPE (',' eventTypes+=WEBHOOK_ACTIVITY_TYPE)* ']' NEWLINE+) |
		//            (
		//                NEWLINE+
		//                BEGIN
		//                ('-' eventTypes+=WEBHOOK_ACTIVITY_TYPE NEWLINE+)+
		//                END
		//                NEWLINE*
		//            )
		//        END
		//        NEWLINE*
		//;
		//OptionedWorkflowRunTrigger returns GHA::WorkflowRunTrigger:
		//    'workflow_run' ':'
		//        NEWLINE+
		//        BEGIN
		//        ('branches' | ignoreSpecifiedBranches?='branches-ignore')  ':'
		//            (branches+=Expression NEWLINE+) |
		//            ('[' branches+=Expression (',' branches+=Expression)* ']' NEWLINE+) |
		//            (
		//                NEWLINE+
		//                BEGIN
		//                ('-' branches+=Expression NEWLINE+)+
		//                END
		//                NEWLINE*
		//            )
		//        END
		//        NEWLINE*
		//;
		//OptionedPullRequestTrigger returns GHA::PullRequestTrigger:
		//    {GHA::PullRequestTrigger} ('pull_request' | 'pull_request_target') ':'
		//    (
		//        NEWLINE+
		//        BEGIN
		//        (
		//            (
		//                'types' ':'
		//                    (eventTypes+=WEBHOOK_ACTIVITY_TYPE NEWLINE+) |
		//                    ('[' eventTypes+=WEBHOOK_ACTIVITY_TYPE (',' eventTypes+=WEBHOOK_ACTIVITY_TYPE)* ']' NEWLINE+) |
		//                    (
		//                        NEWLINE+
		//                        BEGIN
		//                        ('-' eventTypes+=WEBHOOK_ACTIVITY_TYPE NEWLINE+)+
		//                        END
		//                        NEWLINE*
		//                    )
		//            )
		//            (
		//                ('branches' | ignoreSpecifiedBranches?='branches-ignore')  ':'
		//                    (branches+=Expression NEWLINE+) |
		//                    ('[' branches+=Expression (',' branches+=Expression)* ']' NEWLINE+) |
		//                    (
		//                        NEWLINE+
		//                        BEGIN
		//                        ('-' branches+=Expression NEWLINE+)+
		//                        END
		//                        NEWLINE*
		//                    )
		//            )? &
		//            (
		//                ('paths' | ignoreSpecifiedPaths?='paths-ignore')  ':'
		//                    (paths+=Expression NEWLINE+) |
		//                    ('[' paths+=Expression (',' paths+=Expression)* ']' NEWLINE+) |
		//                    (
		//                        NEWLINE+
		//                        BEGIN
		//                        ('-' paths+=Expression NEWLINE+)+
		//                        END
		//                        NEWLINE*
		//                    )
		//            )?
		//        ) |
		//        (
		//            (
		//                ('branches' | ignoreSpecifiedBranches?='branches-ignore')  ':'
		//                    (branches+=Expression NEWLINE+) |
		//                    ('[' branches+=Expression (',' branches+=Expression)* ']' NEWLINE+) |
		//                    (
		//                        NEWLINE+
		//                        BEGIN
		//                        ('-' branches+=Expression NEWLINE+)+
		//                        END
		//                        NEWLINE*
		//                    )
		//            )
		//            (
		//                'types' ':'
		//                    (eventTypes+=WEBHOOK_ACTIVITY_TYPE NEWLINE+) |
		//                    ('[' eventTypes+=WEBHOOK_ACTIVITY_TYPE (',' eventTypes+=WEBHOOK_ACTIVITY_TYPE)* ']' NEWLINE+) |
		//                    (
		//                        NEWLINE+
		//                        BEGIN
		//                        ('-' eventTypes+=WEBHOOK_ACTIVITY_TYPE NEWLINE+)+
		//                        END
		//                        NEWLINE*
		//                    )
		//            )? &
		//            (
		//                ('paths' | ignoreSpecifiedPaths?='paths-ignore')  ':'
		//                    (paths+=Expression NEWLINE+) |
		//                    ('[' paths+=Expression (',' paths+=Expression)* ']' NEWLINE+) |
		//                    (
		//                        NEWLINE+
		//                        BEGIN
		//                        ('-' paths+=Expression NEWLINE+)+
		//                        END
		//                        NEWLINE*
		//                    )
		//            )?
		//        ) |
		//        (
		//            (
		//                ('paths' | ignoreSpecifiedPaths?='paths-ignore')  ':'
		//                    (paths+=Expression NEWLINE+) |
		//                    ('[' paths+=Expression (',' paths+=Expression)* ']' NEWLINE+) |
		//                    (
		//                        NEWLINE+
		//                        BEGIN
		//                        ('-' paths+=Expression NEWLINE+)+
		//                        END
		//                        NEWLINE*
		//                    )
		//            )
		//            (
		//                'types' ':'
		//                    (eventTypes+=WEBHOOK_ACTIVITY_TYPE NEWLINE+) |
		//                    ('[' eventTypes+=WEBHOOK_ACTIVITY_TYPE (',' eventTypes+=WEBHOOK_ACTIVITY_TYPE)* ']' NEWLINE+) |
		//                    (
		//                        NEWLINE+
		//                        BEGIN
		//                        ('-' eventTypes+=WEBHOOK_ACTIVITY_TYPE NEWLINE+)+
		//                        END
		//                        NEWLINE*
		//                    )
		//            )? &
		//            (
		//                ('branches' | ignoreSpecifiedBranches?='branches-ignore')  ':'
		//                    (branches+=Expression NEWLINE+) |
		//                    ('[' branches+=Expression (',' branches+=Expression)* ']' NEWLINE+) |
		//                    (
		//                        NEWLINE+
		//                        BEGIN
		//                        ('-' branches+=Expression NEWLINE+)+
		//                        END
		//                        NEWLINE*
		//                    )
		//            )?
		//        )
		//        END
		//        NEWLINE*
		//    )
		//;
		//OptionedPushTrigger returns GHA::PushTrigger:
		//    {GHA::PushTrigger} 'push' ':'
		//    (
		//        NEWLINE+
		//        BEGIN
		//        (
		//            (
		//                ('branches' | ignoreSpecifiedBranches?='branches-ignore')  ':'
		//                    (branches+=Expression NEWLINE+) |
		//                    ('[' branches+=Expression (',' branches+=Expression)* ']' NEWLINE+) |
		//                    (
		//                        NEWLINE+
		//                        BEGIN
		//                        ('-' branches+=Expression NEWLINE+)+
		//                        END
		//                        NEWLINE*
		//                    )
		//            )
		//            (
		//                ('paths' | ignoreSpecifiedPaths?='paths-ignore')  ':'
		//                    (paths+=Expression NEWLINE+) |
		//                    ('[' paths+=Expression (',' paths+=Expression)* ']' NEWLINE+) |
		//                    (
		//                        NEWLINE+
		//                        BEGIN
		//                        ('-' paths+=Expression NEWLINE+)+
		//                        END
		//                        NEWLINE*
		//                    )
		//            )? &
		//            (
		//                ('tags' | ignoreSpecifiedTags?='tags-ignore')  ':'
		//                    (tags+=Expression NEWLINE+) |
		//                    ('[' tags+=Expression (',' tags+=Expression)* ']' NEWLINE+) |
		//                    (
		//                        NEWLINE+
		//                        BEGIN
		//                        ('-' tags+=Expression NEWLINE+)+
		//                        END
		//                        NEWLINE*
		//                    )
		//            )?
		//        ) |
		//        (
		//            (
		//                ('paths' | ignoreSpecifiedPaths?='paths-ignore')  ':'
		//                    (paths+=Expression NEWLINE+) |
		//                    ('[' paths+=Expression (',' paths+=Expression)* ']' NEWLINE+) |
		//                    (
		//                        NEWLINE+
		//                        BEGIN
		//                        ('-' paths+=Expression NEWLINE+)+
		//                        END
		//                        NEWLINE*
		//                    )
		//            )
		//            (
		//                ('branches' | ignoreSpecifiedBranches?='branches-ignore')  ':'
		//                    (branches+=Expression NEWLINE+) |
		//                    ('[' branches+=Expression (',' branches+=Expression)* ']' NEWLINE+) |
		//                    (
		//                        NEWLINE+
		//                        BEGIN
		//                        ('-' branches+=Expression NEWLINE+)+
		//                        END
		//                        NEWLINE*
		//                    )
		//            )? &
		//            (
		//                ('tags' | ignoreSpecifiedTags?='tags-ignore')  ':'
		//                    (tags+=Expression NEWLINE+) |
		//                    ('[' tags+=Expression (',' tags+=Expression)* ']' NEWLINE+) |
		//                    (
		//                        NEWLINE+
		//                        BEGIN
		//                        ('-' tags+=Expression NEWLINE+)+
		//                        END
		//                        NEWLINE*
		//                    )
		//            )?
		//        ) |
		//        (
		//            (
		//                ('tags' | ignoreSpecifiedTags?='tags-ignore')  ':'
		//                    (tags+=Expression NEWLINE+) |
		//                    ('[' tags+=Expression (',' tags+=Expression)* ']' NEWLINE+) |
		//                    (
		//                        NEWLINE+
		//                        BEGIN
		//                        ('-' tags+=Expression NEWLINE+)+
		//                        END
		//                        NEWLINE*
		//                    )
		//            )
		//            (
		//                ('branches' | ignoreSpecifiedBranches?='branches-ignore')  ':'
		//                    (branches+=Expression NEWLINE+) |
		//                    ('[' branches+=Expression (',' branches+=Expression)* ']' NEWLINE+) |
		//                    (
		//                        NEWLINE+
		//                        BEGIN
		//                        ('-' branches+=Expression NEWLINE+)+
		//                        END
		//                        NEWLINE*
		//                    )
		//            )? &
		//            (
		//                ('paths' | ignoreSpecifiedPaths?='paths-ignore')  ':'
		//                    (paths+=Expression NEWLINE+) |
		//                    ('[' paths+=Expression (',' paths+=Expression)* ']' NEWLINE+) |
		//                    (
		//                        NEWLINE+
		//                        BEGIN
		//                        ('-' paths+=Expression NEWLINE+)+
		//                        END
		//                        NEWLINE*
		//                    )
		//            )?
		//        )
		//        END
		//        NEWLINE*
		//    )
		//;
		//OptionedScheduleTrigger returns GHA::ScheduleTrigger:
		//    'schedule' ':'
		//    (
		//        NEWLINE+
		//        BEGIN
		//        (
		//            '-' 'cron' ':' crons+=Expression NEWLINE+
		//        )+
		//        END
		//        NEWLINE*
		//    )
		//;
		//OptionedWorkflowCallTrigger returns GHA::WorkflowCallTrigger:
		//    {GHA::WorkflowCallTrigger} 'workflow_call' ':'
		//    (
		//        NEWLINE+
		//        BEGIN
		//        (
		//            (
		//                'inputs' ':' NEWLINE+ BEGIN inputs+=Input+ END NEWLINE*
		//            )
		//            (
		//                'outputs' ':' NEWLINE+ BEGIN outputs+=Output+ END NEWLINE*
		//            )? &
		//            (
		//                'secrets' ':' NEWLINE+ BEGIN secrets+=Secret+ END NEWLINE*
		//            )?
		//        ) |
		//        (
		//            (
		//                'outputs' ':' NEWLINE+ BEGIN outputs+=Output+ END NEWLINE*
		//            )
		//            (
		//                'inputs' ':' NEWLINE+ BEGIN inputs+=Input+ END NEWLINE*
		//            )? &
		//            (
		//                'secrets' ':' NEWLINE+ BEGIN secrets+=Secret+ END NEWLINE*
		//            )?
		//        ) |
		//        (
		//            (
		//                'secrets' ':' NEWLINE+ BEGIN secrets+=Secret+ END NEWLINE*
		//            )
		//            (
		//                'inputs' ':' NEWLINE+ BEGIN inputs+=Input+ END NEWLINE*
		//            )? &
		//            (
		//                'outputs' ':' NEWLINE+ BEGIN outputs+=Output+ END NEWLINE*
		//            )?
		//        )
		//        END
		//        NEWLINE*
		//    )
		//;
		//OptionedWorkflowDispatchTrigger returns GHA::WorkflowDispatchTrigger:
		//    {GHA::WorkflowDispatchTrigger} 'workflow_dispatch' ':'
		//        NEWLINE+
		//        BEGIN
		//        ('inputs' ':' NEWLINE+ BEGIN inputs+=Input+ END NEWLINE*)
		//        END
		//        NEWLINE*
		//;
		//Input returns GHA::Input:
		//    id=YAMLID ':'
		//        NEWLINE+
		//        BEGIN
		//        ('description' ':' description=Expression NEWLINE+)? &
		//        ('default' ':' default=Expression NEWLINE+)? &
		//        ('required' ':' isRequired=Expression NEWLINE+)? &
		//        ('type' ':' type=TYPE NEWLINE+) &
		//        (
		//            'options' ':'
		//                (options+=STRING NEWLINE+) |
		//                ('[' options+=STRING (',' options+=STRING)* ']' NEWLINE+) |
		//                (
		//                    NEWLINE+
		//                    BEGIN
		//                    ('-' options+=STRING NEWLINE+)+
		//                    END
		//                    NEWLINE*
		//                )
		//        )
		//        END
		//        NEWLINE*
		//;
		//Output returns GHA::Output:
		//    id=YAMLID ':'
		//        NEWLINE+
		//        BEGIN
		//        ('description' ':' description=Expression NEWLINE+)? &
		//        ('value' ':' value=Expression NEWLINE+)
		//        END
		//        NEWLINE*
		//;
		//Secret returns GHA::Secret:
		//    id=YAMLID ':'
		//        NEWLINE+
		//        BEGIN
		//        (
		//            ('description' ':' description=Expression NEWLINE+) &
		//            ('required' ':' isRequired=Expression NEWLINE+)?
		//        ) |
		//        (
		//            ('required' ':' isRequired=Expression NEWLINE+) &
		//            ('description' ':' description=Expression NEWLINE+)?
		//        )
		//        END
		//        NEWLINE*
		//;
		//Permission returns GHA::Permission:
		//    key=PERMISSION_SCOPE ':' value=PERMISSION_VALUE NEWLINE+
		//;
		//Defaults returns GHA::Defaults:
		//    'run' ':'
		//        NEWLINE+
		//        BEGIN
		//        (
		//            ('shell' ':' shell=Expression NEWLINE+) &
		//            ('working-directory' ':' workingDirectory=Expression NEWLINE+)?
		//        )
		//        END
		//        NEWLINE*
		//;
		//StagingEnvironment returns GHA::StagingEnvironment:
		//    (name=Expression NEWLINE+) |
		//    (
		//        NEWLINE+
		//        BEGIN
		//        ('name' ':' name=Expression NEWLINE+)
		//        ('url' ':' url=Expression NEWLINE+)?
		//        END
		//        NEWLINE*
		//    )
		//;
		//Strategy returns GHA::Matrix:
		//    (
		//        'matrix' ':'
		//            NEWLINE+
		//            BEGIN
		//            ('includes' ':' NEWLINE+ BEGIN includes+=MatrixCombination END NEWLINE*)? &
		//            ('exludes' ':' NEWLINE+ BEGIN excludes+=MatrixCombination END NEWLINE*)? &
		//            (BEGIN axes+=MatrixAxis+ END NEWLINE*)
		//            END
		//            NEWLINE*
		//    ) &
		//    ('fail-fast' ':' failFast=Expression NEWLINE+)? &
		//    ('max-paralell' ':' maxParallel=Expression NEWLINE+)?
		//;
		//MatrixAxis returns GHA::MatrixAxis:
		//    name=YAMLID ':'
		//    (
		//        (cells+=Expression NEWLINE+) |
		//        ('[' cells+=Expression (',' cells+=Expression)* ']' NEWLINE+) |
		//        (
		//            NEWLINE+
		//            BEGIN
		//            ('-' cells+=Expression NEWLINE+)+
		//            END
		//            NEWLINE*
		//        )
		//    )
		//;
		//MatrixCombination returns GHA::MatrixCombination:
		//    '-' BEGIN entries+=VariableAssignment END
		//;
		//Container returns GHA::Container:
		//    (
		//        image=Expression NEWLINE+
		//    ) |
		//    (
		//        NEWLINE+
		//        BEGIN
		//        ('image' ':' image=Expression NEWLINE+) &
		//        ('env' ':' BEGIN environmentVariables+=VariableAssignment+ END NEWLINE*)? &
		//        ('ports' ':'
		//            (ports+=Expression NEWLINE+) |
		//            ('[' ports+=Expression (',' ports+=Expression)* ']' NEWLINE+) |
		//            (
		//                NEWLINE+
		//                BEGIN
		//                ('-' ports+=Expression NEWLINE+)+
		//                END
		//                NEWLINE*
		//            )
		//        )? &
		//        ('volumes' ':'
		//            (volumes+=Expression NEWLINE+) |
		//            ('[' volumes+=Expression (',' volumes+=Expression)* ']' NEWLINE+) |
		//            (
		//                NEWLINE*
		//                BEGIN
		//                ('-' volumes+=Expression NEWLINE*)+
		//                END
		//                NEWLINE*
		//            )
		//        )? &
		//        ('options' ':' options=Expression NEWLINE+)? &
		//        (
		//            'credentials' ':'
		//                NEWLINE+
		//                BEGIN
		//                ('username' ':' username=Expression NEWLINE+) &
		//                ('password' ':' password=Expression NEWLINE+)
		//                END
		//                NEWLINE*
		//        )?
		//        END
		//        NEWLINE*
		//    )
		//;
		//Service returns GHA::Service:
		//    key=YAMLID ':'
		//        NEWLINE+
		//        BEGIN
		//        value=Container
		//        END
		//        NEWLINE*
		//;
		//VariableAssignment returns GHA::VariableAssignment:
		//    key=YAMLID ':' value=Expression NEWLINE+
		//;
		//*
		//*/
		//Expression returns GHA::Expression:
		//    Concat
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//Concat
		public RuleCall getConcatParserRuleCall() { return cConcatParserRuleCall; }
	}
	public class ConcatElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.Concat");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cExpressionsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cExpressionsConcatExpressionParserRuleCall_0_0 = (RuleCall)cExpressionsAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cExpressionsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cExpressionsConcatExpressionParserRuleCall_1_1_0 = (RuleCall)cExpressionsAssignment_1_1.eContents().get(0);
		
		//Concat returns GHA::Concat:
		//    expressions+=ConcatExpression (WS expressions+=ConcatExpression)*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//expressions+=ConcatExpression (WS expressions+=ConcatExpression)*
		public Group getGroup() { return cGroup; }
		
		//expressions+=ConcatExpression
		public Assignment getExpressionsAssignment_0() { return cExpressionsAssignment_0; }
		
		//ConcatExpression
		public RuleCall getExpressionsConcatExpressionParserRuleCall_0_0() { return cExpressionsConcatExpressionParserRuleCall_0_0; }
		
		//(WS expressions+=ConcatExpression)*
		public Group getGroup_1() { return cGroup_1; }
		
		//WS
		public RuleCall getWSTerminalRuleCall_1_0() { return cWSTerminalRuleCall_1_0; }
		
		//expressions+=ConcatExpression
		public Assignment getExpressionsAssignment_1_1() { return cExpressionsAssignment_1_1; }
		
		//ConcatExpression
		public RuleCall getExpressionsConcatExpressionParserRuleCall_1_1_0() { return cExpressionsConcatExpressionParserRuleCall_1_1_0; }
	}
	public class ConcatExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.ConcatExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cBracketedExpressionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cUnbracketedLiteralParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ConcatExpression returns GHA::Expression:
		//    BracketedExpression | UnbracketedLiteral
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//BracketedExpression | UnbracketedLiteral
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//BracketedExpression
		public RuleCall getBracketedExpressionParserRuleCall_0() { return cBracketedExpressionParserRuleCall_0; }
		
		//UnbracketedLiteral
		public RuleCall getUnbracketedLiteralParserRuleCall_1() { return cUnbracketedLiteralParserRuleCall_1; }
	}
	public class BracketedExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.BracketedExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDollarSignLeftCurlyBracketLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cInsideBracketsExpressionParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cRightCurlyBracketRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//BracketedExpression returns GHA::Expression:
		//    '${{' WS? InsideBracketsExpression WS? '}}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'${{' WS? InsideBracketsExpression WS? '}}'
		public Group getGroup() { return cGroup; }
		
		//'${{'
		public Keyword getDollarSignLeftCurlyBracketLeftCurlyBracketKeyword_0() { return cDollarSignLeftCurlyBracketLeftCurlyBracketKeyword_0; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }
		
		//InsideBracketsExpression
		public RuleCall getInsideBracketsExpressionParserRuleCall_2() { return cInsideBracketsExpressionParserRuleCall_2; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }
		
		//'}}'
		public Keyword getRightCurlyBracketRightCurlyBracketKeyword_4() { return cRightCurlyBracketRightCurlyBracketKeyword_4; }
	}
	public class InsideBracketsExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.InsideBracketsExpression");
		private final RuleCall cOrParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//InsideBracketsExpression returns GHA::Expression:
		//    Or
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//Or
		public RuleCall getOrParserRuleCall() { return cOrParserRuleCall; }
	}
	public class UnbracketedLiteralElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.UnbracketedLiteral");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cStringLiteralParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIntegerLiteralParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cDoubleLiteralParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cBooleanLiteralParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//UnbracketedLiteral returns GHA::Literal:
		//    StringLiteral | IntegerLiteral | DoubleLiteral | BooleanLiteral
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//StringLiteral | IntegerLiteral | DoubleLiteral | BooleanLiteral
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//StringLiteral
		public RuleCall getStringLiteralParserRuleCall_0() { return cStringLiteralParserRuleCall_0; }
		
		//IntegerLiteral
		public RuleCall getIntegerLiteralParserRuleCall_1() { return cIntegerLiteralParserRuleCall_1; }
		
		//DoubleLiteral
		public RuleCall getDoubleLiteralParserRuleCall_2() { return cDoubleLiteralParserRuleCall_2; }
		
		//BooleanLiteral
		public RuleCall getBooleanLiteralParserRuleCall_3() { return cBooleanLiteralParserRuleCall_3; }
	}
	public class StringLiteralElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.StringLiteral");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueYAMLStringParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//StringLiteral returns GHA::StringLiteral:
		//    value=YAMLString
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//value=YAMLString
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//YAMLString
		public RuleCall getValueYAMLStringParserRuleCall_0() { return cValueYAMLStringParserRuleCall_0; }
	}
	public class IntegerLiteralElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.IntegerLiteral");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueINTTerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//IntegerLiteral returns GHA::IntegerLiteral:
		//    value=INT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//value=INT
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//INT
		public RuleCall getValueINTTerminalRuleCall_0() { return cValueINTTerminalRuleCall_0; }
	}
	public class DoubleLiteralElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.DoubleLiteral");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueDOUBLETerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//DoubleLiteral returns GHA::DoubleLiteral:
		//    value=DOUBLE
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//value=DOUBLE
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//DOUBLE
		public RuleCall getValueDOUBLETerminalRuleCall_0() { return cValueDOUBLETerminalRuleCall_0; }
	}
	public class BooleanLiteralElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.BooleanLiteral");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueBOOLEANTerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//BooleanLiteral returns GHA::BooleanLiteral:
		//    value?=BOOLEAN
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//value?=BOOLEAN
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//BOOLEAN
		public RuleCall getValueBOOLEANTerminalRuleCall_0() { return cValueBOOLEANTerminalRuleCall_0; }
	}
	public class OrElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.Or");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cAndParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOrLhsAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Keyword cVerticalLineVerticalLineKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_1_3 = (RuleCall)cGroup_1.eContents().get(3);
		private final Assignment cRhsAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cRhsAndParserRuleCall_1_4_0 = (RuleCall)cRhsAssignment_1_4.eContents().get(0);
		
		//Or returns GHA::Expression:
		//    And ({GHA::Or.lhs=current} WS? '||' WS? rhs=And)*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//And ({GHA::Or.lhs=current} WS? '||' WS? rhs=And)*
		public Group getGroup() { return cGroup; }
		
		//And
		public RuleCall getAndParserRuleCall_0() { return cAndParserRuleCall_0; }
		
		//({GHA::Or.lhs=current} WS? '||' WS? rhs=And)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{GHA::Or.lhs=current}
		public Action getOrLhsAction_1_0() { return cOrLhsAction_1_0; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_1_1() { return cWSTerminalRuleCall_1_1; }
		
		//'||'
		public Keyword getVerticalLineVerticalLineKeyword_1_2() { return cVerticalLineVerticalLineKeyword_1_2; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_1_3() { return cWSTerminalRuleCall_1_3; }
		
		//rhs=And
		public Assignment getRhsAssignment_1_4() { return cRhsAssignment_1_4; }
		
		//And
		public RuleCall getRhsAndParserRuleCall_1_4_0() { return cRhsAndParserRuleCall_1_4_0; }
	}
	public class AndElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.And");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cEqualityParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cAndLhsAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Keyword cAmpersandAmpersandKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_1_3 = (RuleCall)cGroup_1.eContents().get(3);
		private final Assignment cRhsAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cRhsEqualityParserRuleCall_1_4_0 = (RuleCall)cRhsAssignment_1_4.eContents().get(0);
		
		//And returns GHA::Expression:
		//    Equality ({GHA::And.lhs=current} WS? '&&' WS? rhs=Equality )*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//Equality ({GHA::And.lhs=current} WS? '&&' WS? rhs=Equality )*
		public Group getGroup() { return cGroup; }
		
		//Equality
		public RuleCall getEqualityParserRuleCall_0() { return cEqualityParserRuleCall_0; }
		
		//({GHA::And.lhs=current} WS? '&&' WS? rhs=Equality )*
		public Group getGroup_1() { return cGroup_1; }
		
		//{GHA::And.lhs=current}
		public Action getAndLhsAction_1_0() { return cAndLhsAction_1_0; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_1_1() { return cWSTerminalRuleCall_1_1; }
		
		//'&&'
		public Keyword getAmpersandAmpersandKeyword_1_2() { return cAmpersandAmpersandKeyword_1_2; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_1_3() { return cWSTerminalRuleCall_1_3; }
		
		//rhs=Equality
		public Assignment getRhsAssignment_1_4() { return cRhsAssignment_1_4; }
		
		//Equality
		public RuleCall getRhsEqualityParserRuleCall_1_4_0() { return cRhsEqualityParserRuleCall_1_4_0; }
	}
	public class EqualityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.Equality");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cComparisonParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cEqualityLhsAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Assignment cOpAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOpEQUALITY_OPEnumRuleCall_1_2_0 = (RuleCall)cOpAssignment_1_2.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1_3 = (RuleCall)cGroup_1.eContents().get(3);
		private final Assignment cRhsAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cRhsComparisonParserRuleCall_1_4_0 = (RuleCall)cRhsAssignment_1_4.eContents().get(0);
		
		//Equality returns GHA::Expression:
		//    Comparison ({GHA::Equality.lhs=current} WS? op=EQUALITY_OP WS? rhs=Comparison )*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//Comparison ({GHA::Equality.lhs=current} WS? op=EQUALITY_OP WS? rhs=Comparison )*
		public Group getGroup() { return cGroup; }
		
		//Comparison
		public RuleCall getComparisonParserRuleCall_0() { return cComparisonParserRuleCall_0; }
		
		//({GHA::Equality.lhs=current} WS? op=EQUALITY_OP WS? rhs=Comparison )*
		public Group getGroup_1() { return cGroup_1; }
		
		//{GHA::Equality.lhs=current}
		public Action getEqualityLhsAction_1_0() { return cEqualityLhsAction_1_0; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_1_1() { return cWSTerminalRuleCall_1_1; }
		
		//op=EQUALITY_OP
		public Assignment getOpAssignment_1_2() { return cOpAssignment_1_2; }
		
		//EQUALITY_OP
		public RuleCall getOpEQUALITY_OPEnumRuleCall_1_2_0() { return cOpEQUALITY_OPEnumRuleCall_1_2_0; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_1_3() { return cWSTerminalRuleCall_1_3; }
		
		//rhs=Comparison
		public Assignment getRhsAssignment_1_4() { return cRhsAssignment_1_4; }
		
		//Comparison
		public RuleCall getRhsComparisonParserRuleCall_1_4_0() { return cRhsComparisonParserRuleCall_1_4_0; }
	}
	public class ComparisonElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.Comparison");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUnaryOpParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cComparisonLhsAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Assignment cOpAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOpCOMPARISON_OPEnumRuleCall_1_2_0 = (RuleCall)cOpAssignment_1_2.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1_3 = (RuleCall)cGroup_1.eContents().get(3);
		private final Assignment cRhsAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cRhsUnaryOpParserRuleCall_1_4_0 = (RuleCall)cRhsAssignment_1_4.eContents().get(0);
		
		//Comparison returns GHA::Expression:
		//    UnaryOp ({GHA::Comparison.lhs=current} WS? op=COMPARISON_OP WS? rhs=UnaryOp )*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UnaryOp ({GHA::Comparison.lhs=current} WS? op=COMPARISON_OP WS? rhs=UnaryOp )*
		public Group getGroup() { return cGroup; }
		
		//UnaryOp
		public RuleCall getUnaryOpParserRuleCall_0() { return cUnaryOpParserRuleCall_0; }
		
		//({GHA::Comparison.lhs=current} WS? op=COMPARISON_OP WS? rhs=UnaryOp )*
		public Group getGroup_1() { return cGroup_1; }
		
		//{GHA::Comparison.lhs=current}
		public Action getComparisonLhsAction_1_0() { return cComparisonLhsAction_1_0; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_1_1() { return cWSTerminalRuleCall_1_1; }
		
		//op=COMPARISON_OP
		public Assignment getOpAssignment_1_2() { return cOpAssignment_1_2; }
		
		//COMPARISON_OP
		public RuleCall getOpCOMPARISON_OPEnumRuleCall_1_2_0() { return cOpCOMPARISON_OPEnumRuleCall_1_2_0; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_1_3() { return cWSTerminalRuleCall_1_3; }
		
		//rhs=UnaryOp
		public Assignment getRhsAssignment_1_4() { return cRhsAssignment_1_4; }
		
		//UnaryOp
		public RuleCall getRhsUnaryOpParserRuleCall_1_4_0() { return cRhsUnaryOpParserRuleCall_1_4_0; }
	}
	public class UnaryOpElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.UnaryOp");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNotParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cBlankParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//UnaryOp returns GHA::Expression:
		//    Not | Blank
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//Not | Blank
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Not
		public RuleCall getNotParserRuleCall_0() { return cNotParserRuleCall_0; }
		
		//Blank
		public RuleCall getBlankParserRuleCall_1() { return cBlankParserRuleCall_1; }
	}
	public class NotElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.Not");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cExclamationMarkKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cChildExprAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cChildExprVariableDereferenceParserRuleCall_1_0 = (RuleCall)cChildExprAssignment_1.eContents().get(0);
		
		//Not returns GHA::Not:
		//    '!' childExpr=VariableDereference
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'!' childExpr=VariableDereference
		public Group getGroup() { return cGroup; }
		
		//'!'
		public Keyword getExclamationMarkKeyword_0() { return cExclamationMarkKeyword_0; }
		
		//childExpr=VariableDereference
		public Assignment getChildExprAssignment_1() { return cChildExprAssignment_1; }
		
		//VariableDereference
		public RuleCall getChildExprVariableDereferenceParserRuleCall_1_0() { return cChildExprVariableDereferenceParserRuleCall_1_0; }
	}
	public class BlankElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.Blank");
		private final RuleCall cVariableDereferenceParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//Blank returns GHA::Expression:
		//    VariableDereference
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//VariableDereference
		public RuleCall getVariableDereferenceParserRuleCall() { return cVariableDereferenceParserRuleCall; }
	}
	public class VariableDereferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.VariableDereference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cPrimaryParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cVariableDereferenceVariableAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cGroup_1.eContents().get(1);
		private final Group cGroup_1_1_0 = (Group)cAlternatives_1_1.eContents().get(0);
		private final Keyword cFullStopKeyword_1_1_0_0 = (Keyword)cGroup_1_1_0.eContents().get(0);
		private final Assignment cPropertyAssignment_1_1_0_1 = (Assignment)cGroup_1_1_0.eContents().get(1);
		private final RuleCall cPropertyIDTerminalRuleCall_1_1_0_1_0 = (RuleCall)cPropertyAssignment_1_1_0_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1_1 = (Alternatives)cAlternatives_1_1.eContents().get(1);
		private final Group cGroup_1_1_1_0 = (Group)cAlternatives_1_1_1.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1_1_1_0_0 = (Keyword)cGroup_1_1_1_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1_1_1_0_1 = (RuleCall)cGroup_1_1_1_0.eContents().get(1);
		private final Group cGroup_1_1_1_0_2 = (Group)cGroup_1_1_1_0.eContents().get(2);
		private final Keyword cQuotationMarkKeyword_1_1_1_0_2_0 = (Keyword)cGroup_1_1_1_0_2.eContents().get(0);
		private final Assignment cPropertyAssignment_1_1_1_0_2_1 = (Assignment)cGroup_1_1_1_0_2.eContents().get(1);
		private final RuleCall cPropertyIDTerminalRuleCall_1_1_1_0_2_1_0 = (RuleCall)cPropertyAssignment_1_1_1_0_2_1.eContents().get(0);
		private final Keyword cQuotationMarkKeyword_1_1_1_0_2_2 = (Keyword)cGroup_1_1_1_0_2.eContents().get(2);
		private final Group cGroup_1_1_1_1 = (Group)cAlternatives_1_1_1.eContents().get(1);
		private final Group cGroup_1_1_1_1_0 = (Group)cGroup_1_1_1_1.eContents().get(0);
		private final Keyword cApostropheKeyword_1_1_1_1_0_0 = (Keyword)cGroup_1_1_1_1_0.eContents().get(0);
		private final Assignment cPropertyAssignment_1_1_1_1_0_1 = (Assignment)cGroup_1_1_1_1_0.eContents().get(1);
		private final RuleCall cPropertyIDTerminalRuleCall_1_1_1_1_0_1_0 = (RuleCall)cPropertyAssignment_1_1_1_1_0_1.eContents().get(0);
		private final Keyword cQuotationMarkKeyword_1_1_1_1_0_2 = (Keyword)cGroup_1_1_1_1_0.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_1_1_1_1_1 = (RuleCall)cGroup_1_1_1_1.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_1_1_1_1_2 = (Keyword)cGroup_1_1_1_1.eContents().get(2);
		
		//VariableDereference returns GHA::Expression:
		//    Primary ({GHA::VariableDereference.variable=current} (('.' property=ID) | ('[' WS? ('"' property=ID '"') | ("'" property=ID '"') WS? ']')))*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//Primary ({GHA::VariableDereference.variable=current} (('.' property=ID) | ('[' WS? ('"' property=ID '"') | ("'" property=ID '"') WS? ']')))*
		public Group getGroup() { return cGroup; }
		
		//Primary
		public RuleCall getPrimaryParserRuleCall_0() { return cPrimaryParserRuleCall_0; }
		
		//({GHA::VariableDereference.variable=current} (('.' property=ID) | ('[' WS? ('"' property=ID '"') | ("'" property=ID '"') WS? ']')))*
		public Group getGroup_1() { return cGroup_1; }
		
		//{GHA::VariableDereference.variable=current}
		public Action getVariableDereferenceVariableAction_1_0() { return cVariableDereferenceVariableAction_1_0; }
		
		//(('.' property=ID) | ('[' WS? ('"' property=ID '"') | ("'" property=ID '"') WS? ']'))
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }
		
		//('.' property=ID)
		public Group getGroup_1_1_0() { return cGroup_1_1_0; }
		
		//'.'
		public Keyword getFullStopKeyword_1_1_0_0() { return cFullStopKeyword_1_1_0_0; }
		
		//property=ID
		public Assignment getPropertyAssignment_1_1_0_1() { return cPropertyAssignment_1_1_0_1; }
		
		//ID
		public RuleCall getPropertyIDTerminalRuleCall_1_1_0_1_0() { return cPropertyIDTerminalRuleCall_1_1_0_1_0; }
		
		//('[' WS? ('"' property=ID '"') | ("'" property=ID '"') WS? ']')
		public Alternatives getAlternatives_1_1_1() { return cAlternatives_1_1_1; }
		
		//'[' WS? ('"' property=ID '"')
		public Group getGroup_1_1_1_0() { return cGroup_1_1_1_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1_1_1_0_0() { return cLeftSquareBracketKeyword_1_1_1_0_0; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_1_1_1_0_1() { return cWSTerminalRuleCall_1_1_1_0_1; }
		
		//('"' property=ID '"')
		public Group getGroup_1_1_1_0_2() { return cGroup_1_1_1_0_2; }
		
		//'"'
		public Keyword getQuotationMarkKeyword_1_1_1_0_2_0() { return cQuotationMarkKeyword_1_1_1_0_2_0; }
		
		//property=ID
		public Assignment getPropertyAssignment_1_1_1_0_2_1() { return cPropertyAssignment_1_1_1_0_2_1; }
		
		//ID
		public RuleCall getPropertyIDTerminalRuleCall_1_1_1_0_2_1_0() { return cPropertyIDTerminalRuleCall_1_1_1_0_2_1_0; }
		
		//'"'
		public Keyword getQuotationMarkKeyword_1_1_1_0_2_2() { return cQuotationMarkKeyword_1_1_1_0_2_2; }
		
		//("'" property=ID '"') WS? ']'
		public Group getGroup_1_1_1_1() { return cGroup_1_1_1_1; }
		
		//("'" property=ID '"')
		public Group getGroup_1_1_1_1_0() { return cGroup_1_1_1_1_0; }
		
		//"'"
		public Keyword getApostropheKeyword_1_1_1_1_0_0() { return cApostropheKeyword_1_1_1_1_0_0; }
		
		//property=ID
		public Assignment getPropertyAssignment_1_1_1_1_0_1() { return cPropertyAssignment_1_1_1_1_0_1; }
		
		//ID
		public RuleCall getPropertyIDTerminalRuleCall_1_1_1_1_0_1_0() { return cPropertyIDTerminalRuleCall_1_1_1_1_0_1_0; }
		
		//'"'
		public Keyword getQuotationMarkKeyword_1_1_1_1_0_2() { return cQuotationMarkKeyword_1_1_1_1_0_2; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_1_1_1_1_1() { return cWSTerminalRuleCall_1_1_1_1_1; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_1_1_1_1_2() { return cRightSquareBracketKeyword_1_1_1_1_2; }
	}
	public class PrimaryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.Primary");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final RuleCall cInsideBracketsExpressionParserRuleCall_0_2 = (RuleCall)cGroup_0.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_0_3 = (RuleCall)cGroup_0.eContents().get(3);
		private final Keyword cRightParenthesisKeyword_0_4 = (Keyword)cGroup_0.eContents().get(4);
		private final RuleCall cCallExpressionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cAtomicParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Primary returns GHA::Expression:
		//    ('(' WS? InsideBracketsExpression WS? ')') | CallExpression | Atomic
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//('(' WS? InsideBracketsExpression WS? ')') | CallExpression | Atomic
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//('(' WS? InsideBracketsExpression WS? ')')
		public Group getGroup_0() { return cGroup_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0_0() { return cLeftParenthesisKeyword_0_0; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_0_1() { return cWSTerminalRuleCall_0_1; }
		
		//InsideBracketsExpression
		public RuleCall getInsideBracketsExpressionParserRuleCall_0_2() { return cInsideBracketsExpressionParserRuleCall_0_2; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_0_3() { return cWSTerminalRuleCall_0_3; }
		
		//')'
		public Keyword getRightParenthesisKeyword_0_4() { return cRightParenthesisKeyword_0_4; }
		
		//CallExpression
		public RuleCall getCallExpressionParserRuleCall_1() { return cCallExpressionParserRuleCall_1; }
		
		//Atomic
		public RuleCall getAtomicParserRuleCall_2() { return cAtomicParserRuleCall_2; }
	}
	public class AtomicElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.Atomic");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cGitHubContextAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final Assignment cContextAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cContextCONTEXTEnumRuleCall_0_1_0 = (RuleCall)cContextAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Action cVariableAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cNameAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_1_0 = (RuleCall)cNameAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Action cIntegerLiteralAction_2_0 = (Action)cGroup_2.eContents().get(0);
		private final Assignment cValueAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cValueINTTerminalRuleCall_2_1_0 = (RuleCall)cValueAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Action cDoubleLiteralAction_3_0 = (Action)cGroup_3.eContents().get(0);
		private final Assignment cValueAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cValueDOUBLETerminalRuleCall_3_1_0 = (RuleCall)cValueAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Action cBooleanLiteralAction_4_0 = (Action)cGroup_4.eContents().get(0);
		private final Assignment cValueAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cValueBOOLEANTerminalRuleCall_4_1_0 = (RuleCall)cValueAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Action cStringLiteralAction_5_0 = (Action)cGroup_5.eContents().get(0);
		private final Assignment cValueAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cValueSTRINGTerminalRuleCall_5_1_0 = (RuleCall)cValueAssignment_5_1.eContents().get(0);
		
		//Atomic returns GHA::Value:
		//    ({GHA::GitHubContext} context=CONTEXT) |
		//    ({GHA::Variable} name=ID) |
		//    ({GHA::IntegerLiteral} value=INT) |
		//    ({GHA::DoubleLiteral} value=DOUBLE) |
		//    ({GHA::BooleanLiteral} value=BOOLEAN) |
		//    ({GHA::StringLiteral} value=STRING)
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//({GHA::GitHubContext} context=CONTEXT) |
		//({GHA::Variable} name=ID) |
		//({GHA::IntegerLiteral} value=INT) |
		//({GHA::DoubleLiteral} value=DOUBLE) |
		//({GHA::BooleanLiteral} value=BOOLEAN) |
		//({GHA::StringLiteral} value=STRING)
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//({GHA::GitHubContext} context=CONTEXT)
		public Group getGroup_0() { return cGroup_0; }
		
		//{GHA::GitHubContext}
		public Action getGitHubContextAction_0_0() { return cGitHubContextAction_0_0; }
		
		//context=CONTEXT
		public Assignment getContextAssignment_0_1() { return cContextAssignment_0_1; }
		
		//CONTEXT
		public RuleCall getContextCONTEXTEnumRuleCall_0_1_0() { return cContextCONTEXTEnumRuleCall_0_1_0; }
		
		//({GHA::Variable} name=ID)
		public Group getGroup_1() { return cGroup_1; }
		
		//{GHA::Variable}
		public Action getVariableAction_1_0() { return cVariableAction_1_0; }
		
		//name=ID
		public Assignment getNameAssignment_1_1() { return cNameAssignment_1_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_1_0() { return cNameIDTerminalRuleCall_1_1_0; }
		
		//({GHA::IntegerLiteral} value=INT)
		public Group getGroup_2() { return cGroup_2; }
		
		//{GHA::IntegerLiteral}
		public Action getIntegerLiteralAction_2_0() { return cIntegerLiteralAction_2_0; }
		
		//value=INT
		public Assignment getValueAssignment_2_1() { return cValueAssignment_2_1; }
		
		//INT
		public RuleCall getValueINTTerminalRuleCall_2_1_0() { return cValueINTTerminalRuleCall_2_1_0; }
		
		//({GHA::DoubleLiteral} value=DOUBLE)
		public Group getGroup_3() { return cGroup_3; }
		
		//{GHA::DoubleLiteral}
		public Action getDoubleLiteralAction_3_0() { return cDoubleLiteralAction_3_0; }
		
		//value=DOUBLE
		public Assignment getValueAssignment_3_1() { return cValueAssignment_3_1; }
		
		//DOUBLE
		public RuleCall getValueDOUBLETerminalRuleCall_3_1_0() { return cValueDOUBLETerminalRuleCall_3_1_0; }
		
		//({GHA::BooleanLiteral} value=BOOLEAN)
		public Group getGroup_4() { return cGroup_4; }
		
		//{GHA::BooleanLiteral}
		public Action getBooleanLiteralAction_4_0() { return cBooleanLiteralAction_4_0; }
		
		//value=BOOLEAN
		public Assignment getValueAssignment_4_1() { return cValueAssignment_4_1; }
		
		//BOOLEAN
		public RuleCall getValueBOOLEANTerminalRuleCall_4_1_0() { return cValueBOOLEANTerminalRuleCall_4_1_0; }
		
		//({GHA::StringLiteral} value=STRING)
		public Group getGroup_5() { return cGroup_5; }
		
		//{GHA::StringLiteral}
		public Action getStringLiteralAction_5_0() { return cStringLiteralAction_5_0; }
		
		//value=STRING
		public Assignment getValueAssignment_5_1() { return cValueAssignment_5_1; }
		
		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_5_1_0() { return cValueSTRINGTerminalRuleCall_5_1_0; }
	}
	public class CallExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.CallExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cContainsParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cStartsWithParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cEndsWithParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cFormatParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cJoinParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cToJSONParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cFromJSONParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cHashFilesParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cSuccessParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cAlwaysParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cFailureParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cCancelledParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		
		//CallExpression returns GHA::BuiltInFunctionCall:
		//    Contains |
		//    StartsWith |
		//    EndsWith |
		//    Format |
		//    Join |
		//    ToJSON |
		//    FromJSON |
		//    HashFiles |
		//    Success |
		//    Always |
		//    Failure |
		//    Cancelled
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//Contains |
		//StartsWith |
		//EndsWith |
		//Format |
		//Join |
		//ToJSON |
		//FromJSON |
		//HashFiles |
		//Success |
		//Always |
		//Failure |
		//Cancelled
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Contains
		public RuleCall getContainsParserRuleCall_0() { return cContainsParserRuleCall_0; }
		
		//StartsWith
		public RuleCall getStartsWithParserRuleCall_1() { return cStartsWithParserRuleCall_1; }
		
		//EndsWith
		public RuleCall getEndsWithParserRuleCall_2() { return cEndsWithParserRuleCall_2; }
		
		//Format
		public RuleCall getFormatParserRuleCall_3() { return cFormatParserRuleCall_3; }
		
		//Join
		public RuleCall getJoinParserRuleCall_4() { return cJoinParserRuleCall_4; }
		
		//ToJSON
		public RuleCall getToJSONParserRuleCall_5() { return cToJSONParserRuleCall_5; }
		
		//FromJSON
		public RuleCall getFromJSONParserRuleCall_6() { return cFromJSONParserRuleCall_6; }
		
		//HashFiles
		public RuleCall getHashFilesParserRuleCall_7() { return cHashFilesParserRuleCall_7; }
		
		//Success
		public RuleCall getSuccessParserRuleCall_8() { return cSuccessParserRuleCall_8; }
		
		//Always
		public RuleCall getAlwaysParserRuleCall_9() { return cAlwaysParserRuleCall_9; }
		
		//Failure
		public RuleCall getFailureParserRuleCall_10() { return cFailureParserRuleCall_10; }
		
		//Cancelled
		public RuleCall getCancelledParserRuleCall_11() { return cCancelledParserRuleCall_11; }
	}
	public class ContainsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.Contains");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cContainsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cSearchAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSearchInsideBracketsExpressionParserRuleCall_3_0 = (RuleCall)cSearchAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final RuleCall cWSTerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		private final Assignment cItemAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cItemInsideBracketsExpressionParserRuleCall_7_0 = (RuleCall)cItemAssignment_7.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_8 = (RuleCall)cGroup.eContents().get(8);
		private final Keyword cRightParenthesisKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Contains returns GHA::Contains:
		//    'contains' '(' WS? search=InsideBracketsExpression WS? ',' WS? item=InsideBracketsExpression WS? ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'contains' '(' WS? search=InsideBracketsExpression WS? ',' WS? item=InsideBracketsExpression WS? ')'
		public Group getGroup() { return cGroup; }
		
		//'contains'
		public Keyword getContainsKeyword_0() { return cContainsKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }
		
		//search=InsideBracketsExpression
		public Assignment getSearchAssignment_3() { return cSearchAssignment_3; }
		
		//InsideBracketsExpression
		public RuleCall getSearchInsideBracketsExpressionParserRuleCall_3_0() { return cSearchInsideBracketsExpressionParserRuleCall_3_0; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }
		
		//','
		public Keyword getCommaKeyword_5() { return cCommaKeyword_5; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_6() { return cWSTerminalRuleCall_6; }
		
		//item=InsideBracketsExpression
		public Assignment getItemAssignment_7() { return cItemAssignment_7; }
		
		//InsideBracketsExpression
		public RuleCall getItemInsideBracketsExpressionParserRuleCall_7_0() { return cItemInsideBracketsExpressionParserRuleCall_7_0; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_8() { return cWSTerminalRuleCall_8; }
		
		//')'
		public Keyword getRightParenthesisKeyword_9() { return cRightParenthesisKeyword_9; }
	}
	public class StartsWithElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.StartsWith");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStartsWithKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cSearchStringAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSearchStringInsideBracketsExpressionParserRuleCall_3_0 = (RuleCall)cSearchStringAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final RuleCall cWSTerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		private final Assignment cSearchValueAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cSearchValueInsideBracketsExpressionParserRuleCall_7_0 = (RuleCall)cSearchValueAssignment_7.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_8 = (RuleCall)cGroup.eContents().get(8);
		private final Keyword cRightParenthesisKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//StartsWith returns GHA::StartsWith:
		//    'startsWith' '(' WS? searchString=InsideBracketsExpression WS? ',' WS? searchValue=InsideBracketsExpression WS? ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'startsWith' '(' WS? searchString=InsideBracketsExpression WS? ',' WS? searchValue=InsideBracketsExpression WS? ')'
		public Group getGroup() { return cGroup; }
		
		//'startsWith'
		public Keyword getStartsWithKeyword_0() { return cStartsWithKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }
		
		//searchString=InsideBracketsExpression
		public Assignment getSearchStringAssignment_3() { return cSearchStringAssignment_3; }
		
		//InsideBracketsExpression
		public RuleCall getSearchStringInsideBracketsExpressionParserRuleCall_3_0() { return cSearchStringInsideBracketsExpressionParserRuleCall_3_0; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }
		
		//','
		public Keyword getCommaKeyword_5() { return cCommaKeyword_5; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_6() { return cWSTerminalRuleCall_6; }
		
		//searchValue=InsideBracketsExpression
		public Assignment getSearchValueAssignment_7() { return cSearchValueAssignment_7; }
		
		//InsideBracketsExpression
		public RuleCall getSearchValueInsideBracketsExpressionParserRuleCall_7_0() { return cSearchValueInsideBracketsExpressionParserRuleCall_7_0; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_8() { return cWSTerminalRuleCall_8; }
		
		//')'
		public Keyword getRightParenthesisKeyword_9() { return cRightParenthesisKeyword_9; }
	}
	public class EndsWithElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.EndsWith");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEndsWithKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cSearchStringAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSearchStringInsideBracketsExpressionParserRuleCall_3_0 = (RuleCall)cSearchStringAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final RuleCall cWSTerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		private final Assignment cSearchValueAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cSearchValueInsideBracketsExpressionParserRuleCall_7_0 = (RuleCall)cSearchValueAssignment_7.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_8 = (RuleCall)cGroup.eContents().get(8);
		private final Keyword cRightParenthesisKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//EndsWith returns GHA::EndsWith:
		//    'endsWith' '(' WS? searchString=InsideBracketsExpression WS? ',' WS? searchValue=InsideBracketsExpression WS? ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'endsWith' '(' WS? searchString=InsideBracketsExpression WS? ',' WS? searchValue=InsideBracketsExpression WS? ')'
		public Group getGroup() { return cGroup; }
		
		//'endsWith'
		public Keyword getEndsWithKeyword_0() { return cEndsWithKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }
		
		//searchString=InsideBracketsExpression
		public Assignment getSearchStringAssignment_3() { return cSearchStringAssignment_3; }
		
		//InsideBracketsExpression
		public RuleCall getSearchStringInsideBracketsExpressionParserRuleCall_3_0() { return cSearchStringInsideBracketsExpressionParserRuleCall_3_0; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }
		
		//','
		public Keyword getCommaKeyword_5() { return cCommaKeyword_5; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_6() { return cWSTerminalRuleCall_6; }
		
		//searchValue=InsideBracketsExpression
		public Assignment getSearchValueAssignment_7() { return cSearchValueAssignment_7; }
		
		//InsideBracketsExpression
		public RuleCall getSearchValueInsideBracketsExpressionParserRuleCall_7_0() { return cSearchValueInsideBracketsExpressionParserRuleCall_7_0; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_8() { return cWSTerminalRuleCall_8; }
		
		//')'
		public Keyword getRightParenthesisKeyword_9() { return cRightParenthesisKeyword_9; }
	}
	public class FormatElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.Format");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFormatKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cStringAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cStringInsideBracketsExpressionParserRuleCall_3_0 = (RuleCall)cStringAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final RuleCall cWSTerminalRuleCall_4_0 = (RuleCall)cGroup_4.eContents().get(0);
		private final Keyword cCommaKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_4_2 = (RuleCall)cGroup_4.eContents().get(2);
		private final Assignment cReplaceValuesAssignment_4_3 = (Assignment)cGroup_4.eContents().get(3);
		private final RuleCall cReplaceValuesInsideBracketsExpressionParserRuleCall_4_3_0 = (RuleCall)cReplaceValuesAssignment_4_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Format returns GHA::Format:
		//    'format' '(' WS? string=InsideBracketsExpression (WS? ',' WS? replaceValues+=InsideBracketsExpression)* WS? ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'format' '(' WS? string=InsideBracketsExpression (WS? ',' WS? replaceValues+=InsideBracketsExpression)* WS? ')'
		public Group getGroup() { return cGroup; }
		
		//'format'
		public Keyword getFormatKeyword_0() { return cFormatKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }
		
		//string=InsideBracketsExpression
		public Assignment getStringAssignment_3() { return cStringAssignment_3; }
		
		//InsideBracketsExpression
		public RuleCall getStringInsideBracketsExpressionParserRuleCall_3_0() { return cStringInsideBracketsExpressionParserRuleCall_3_0; }
		
		//(WS? ',' WS? replaceValues+=InsideBracketsExpression)*
		public Group getGroup_4() { return cGroup_4; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_4_0() { return cWSTerminalRuleCall_4_0; }
		
		//','
		public Keyword getCommaKeyword_4_1() { return cCommaKeyword_4_1; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_4_2() { return cWSTerminalRuleCall_4_2; }
		
		//replaceValues+=InsideBracketsExpression
		public Assignment getReplaceValuesAssignment_4_3() { return cReplaceValuesAssignment_4_3; }
		
		//InsideBracketsExpression
		public RuleCall getReplaceValuesInsideBracketsExpressionParserRuleCall_4_3_0() { return cReplaceValuesInsideBracketsExpressionParserRuleCall_4_3_0; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_5() { return cWSTerminalRuleCall_5; }
		
		//')'
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
	}
	public class JoinElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.Join");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cJoinKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cArrayAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cArrayInsideBracketsExpressionParserRuleCall_3_0 = (RuleCall)cArrayAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final RuleCall cWSTerminalRuleCall_4_0 = (RuleCall)cGroup_4.eContents().get(0);
		private final Keyword cCommaKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_4_2 = (RuleCall)cGroup_4.eContents().get(2);
		private final Assignment cSepAssignment_4_3 = (Assignment)cGroup_4.eContents().get(3);
		private final RuleCall cSepInsideBracketsExpressionParserRuleCall_4_3_0 = (RuleCall)cSepAssignment_4_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Join returns GHA::Join:
		//    'join' '(' WS? array=InsideBracketsExpression (WS? ',' WS? sep=InsideBracketsExpression)? WS? ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'join' '(' WS? array=InsideBracketsExpression (WS? ',' WS? sep=InsideBracketsExpression)? WS? ')'
		public Group getGroup() { return cGroup; }
		
		//'join'
		public Keyword getJoinKeyword_0() { return cJoinKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }
		
		//array=InsideBracketsExpression
		public Assignment getArrayAssignment_3() { return cArrayAssignment_3; }
		
		//InsideBracketsExpression
		public RuleCall getArrayInsideBracketsExpressionParserRuleCall_3_0() { return cArrayInsideBracketsExpressionParserRuleCall_3_0; }
		
		//(WS? ',' WS? sep=InsideBracketsExpression)?
		public Group getGroup_4() { return cGroup_4; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_4_0() { return cWSTerminalRuleCall_4_0; }
		
		//','
		public Keyword getCommaKeyword_4_1() { return cCommaKeyword_4_1; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_4_2() { return cWSTerminalRuleCall_4_2; }
		
		//sep=InsideBracketsExpression
		public Assignment getSepAssignment_4_3() { return cSepAssignment_4_3; }
		
		//InsideBracketsExpression
		public RuleCall getSepInsideBracketsExpressionParserRuleCall_4_3_0() { return cSepInsideBracketsExpressionParserRuleCall_4_3_0; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_5() { return cWSTerminalRuleCall_5; }
		
		//')'
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
	}
	public class ToJSONElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.ToJSON");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cToJSONKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueInsideBracketsExpressionParserRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ToJSON returns GHA::ToJSON:
		//    'toJSON' '(' WS? value=InsideBracketsExpression WS? ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'toJSON' '(' WS? value=InsideBracketsExpression WS? ')'
		public Group getGroup() { return cGroup; }
		
		//'toJSON'
		public Keyword getToJSONKeyword_0() { return cToJSONKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }
		
		//value=InsideBracketsExpression
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }
		
		//InsideBracketsExpression
		public RuleCall getValueInsideBracketsExpressionParserRuleCall_3_0() { return cValueInsideBracketsExpressionParserRuleCall_3_0; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class FromJSONElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.FromJSON");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFromJSONKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueInsideBracketsExpressionParserRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//FromJSON returns GHA::FromJSON:
		//    'fromJSON' '(' WS? value=InsideBracketsExpression WS? ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'fromJSON' '(' WS? value=InsideBracketsExpression WS? ')'
		public Group getGroup() { return cGroup; }
		
		//'fromJSON'
		public Keyword getFromJSONKeyword_0() { return cFromJSONKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }
		
		//value=InsideBracketsExpression
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }
		
		//InsideBracketsExpression
		public RuleCall getValueInsideBracketsExpressionParserRuleCall_3_0() { return cValueInsideBracketsExpressionParserRuleCall_3_0; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class HashFilesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.HashFiles");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHashFilesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cPathAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPathInsideBracketsExpressionParserRuleCall_3_0 = (RuleCall)cPathAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//HashFiles returns GHA::HashFiles:
		//    'hashFiles' '(' WS? path=InsideBracketsExpression WS? ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'hashFiles' '(' WS? path=InsideBracketsExpression WS? ')'
		public Group getGroup() { return cGroup; }
		
		//'hashFiles'
		public Keyword getHashFilesKeyword_0() { return cHashFilesKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }
		
		//path=InsideBracketsExpression
		public Assignment getPathAssignment_3() { return cPathAssignment_3; }
		
		//InsideBracketsExpression
		public RuleCall getPathInsideBracketsExpressionParserRuleCall_3_0() { return cPathInsideBracketsExpressionParserRuleCall_3_0; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class SuccessElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.Success");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSuccessAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSuccessKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Success returns GHA::Success:
		//    {GHA::Success} 'success' '(' WS? ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{GHA::Success} 'success' '(' WS? ')'
		public Group getGroup() { return cGroup; }
		
		//{GHA::Success}
		public Action getSuccessAction_0() { return cSuccessAction_0; }
		
		//'success'
		public Keyword getSuccessKeyword_1() { return cSuccessKeyword_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}
	public class AlwaysElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.Always");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAlwaysAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAlwaysKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Always returns GHA::Always:
		//    {GHA::Always} 'always' '(' WS? ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{GHA::Always} 'always' '(' WS? ')'
		public Group getGroup() { return cGroup; }
		
		//{GHA::Always}
		public Action getAlwaysAction_0() { return cAlwaysAction_0; }
		
		//'always'
		public Keyword getAlwaysKeyword_1() { return cAlwaysKeyword_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}
	public class CancelledElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.Cancelled");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCancelledAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCancelledKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Cancelled returns GHA::Cancelled:
		//    {GHA::Cancelled} 'cancelled' '(' WS? ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{GHA::Cancelled} 'cancelled' '(' WS? ')'
		public Group getGroup() { return cGroup; }
		
		//{GHA::Cancelled}
		public Action getCancelledAction_0() { return cCancelledAction_0; }
		
		//'cancelled'
		public Keyword getCancelledKeyword_1() { return cCancelledKeyword_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}
	public class FailureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.Failure");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFailureAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cFailureKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Failure returns GHA::Failure:
		//    {GHA::Failure} 'failure' '(' WS? ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{GHA::Failure} 'failure' '(' WS? ')'
		public Group getGroup() { return cGroup; }
		
		//{GHA::Failure}
		public Action getFailureAction_0() { return cFailureAction_0; }
		
		//'failure'
		public Keyword getFailureKeyword_1() { return cFailureKeyword_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//WS?
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}
	public class YAMLIDElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.YAMLID");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cQuotationMarkKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Keyword cQuotationMarkKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cApostropheKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Keyword cApostropheKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final RuleCall cIDTerminalRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//YAMLID returns ecore::EString:
		//    ('"' ID '"') |
		//    ("'" ID "'") |
		//    ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//('"' ID '"') |
		//("'" ID "'") |
		//ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//('"' ID '"')
		public Group getGroup_0() { return cGroup_0; }
		
		//'"'
		public Keyword getQuotationMarkKeyword_0_0() { return cQuotationMarkKeyword_0_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0_1() { return cIDTerminalRuleCall_0_1; }
		
		//'"'
		public Keyword getQuotationMarkKeyword_0_2() { return cQuotationMarkKeyword_0_2; }
		
		//("'" ID "'")
		public Group getGroup_1() { return cGroup_1; }
		
		//"'"
		public Keyword getApostropheKeyword_1_0() { return cApostropheKeyword_1_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
		
		//"'"
		public Keyword getApostropheKeyword_1_2() { return cApostropheKeyword_1_2; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_2() { return cIDTerminalRuleCall_2; }
	}
	public class YAMLStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.YAMLString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cUNQUOTED_STRINGTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//YAMLString returns ecore::EString:
		//    STRING |
		//    UNQUOTED_STRING
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING |
		//UNQUOTED_STRING
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//UNQUOTED_STRING
		public RuleCall getUNQUOTED_STRINGTerminalRuleCall_1() { return cUNQUOTED_STRINGTerminalRuleCall_1; }
	}
	
	public class COMPARISON_OPElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.COMPARISON_OP");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cGTEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cGTGreaterThanSignKeyword_0_0 = (Keyword)cGTEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cGTEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cGTEGreaterThanSignEqualsSignKeyword_1_0 = (Keyword)cGTEEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cLTEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cLTLessThanSignKeyword_2_0 = (Keyword)cLTEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cLTEEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cLTELessThanSignEqualsSignKeyword_3_0 = (Keyword)cLTEEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum COMPARISON_OP returns GHA::COMPARISON_OPS:
		//    GT='>' |
		//    GTE='>=' |
		//    LT='<' |
		//    LTE='<='
		//;
		public EnumRule getRule() { return rule; }
		
		//GT='>' |
		//GTE='>=' |
		//LT='<' |
		//LTE='<='
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//GT='>'
		public EnumLiteralDeclaration getGTEnumLiteralDeclaration_0() { return cGTEnumLiteralDeclaration_0; }
		
		//'>'
		public Keyword getGTGreaterThanSignKeyword_0_0() { return cGTGreaterThanSignKeyword_0_0; }
		
		//GTE='>='
		public EnumLiteralDeclaration getGTEEnumLiteralDeclaration_1() { return cGTEEnumLiteralDeclaration_1; }
		
		//'>='
		public Keyword getGTEGreaterThanSignEqualsSignKeyword_1_0() { return cGTEGreaterThanSignEqualsSignKeyword_1_0; }
		
		//LT='<'
		public EnumLiteralDeclaration getLTEnumLiteralDeclaration_2() { return cLTEnumLiteralDeclaration_2; }
		
		//'<'
		public Keyword getLTLessThanSignKeyword_2_0() { return cLTLessThanSignKeyword_2_0; }
		
		//LTE='<='
		public EnumLiteralDeclaration getLTEEnumLiteralDeclaration_3() { return cLTEEnumLiteralDeclaration_3; }
		
		//'<='
		public Keyword getLTELessThanSignEqualsSignKeyword_3_0() { return cLTELessThanSignEqualsSignKeyword_3_0; }
	}
	public class EQUALITY_OPElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.EQUALITY_OP");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cEQUALSEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cEQUALSEqualsSignEqualsSignKeyword_0_0 = (Keyword)cEQUALSEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cNOT_EQUALSEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cNOT_EQUALSExclamationMarkEqualsSignKeyword_1_0 = (Keyword)cNOT_EQUALSEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum EQUALITY_OP returns GHA::EQUALITY_OPS:
		//    EQUALS='==' |
		//    NOT_EQUALS='!='
		//;
		public EnumRule getRule() { return rule; }
		
		//EQUALS='==' |
		//NOT_EQUALS='!='
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//EQUALS='=='
		public EnumLiteralDeclaration getEQUALSEnumLiteralDeclaration_0() { return cEQUALSEnumLiteralDeclaration_0; }
		
		//'=='
		public Keyword getEQUALSEqualsSignEqualsSignKeyword_0_0() { return cEQUALSEqualsSignEqualsSignKeyword_0_0; }
		
		//NOT_EQUALS='!='
		public EnumLiteralDeclaration getNOT_EQUALSEnumLiteralDeclaration_1() { return cNOT_EQUALSEnumLiteralDeclaration_1; }
		
		//'!='
		public Keyword getNOT_EQUALSExclamationMarkEqualsSignKeyword_1_0() { return cNOT_EQUALSExclamationMarkEqualsSignKeyword_1_0; }
	}
	public class CONTEXTElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.CONTEXT");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cGITHUBEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cGITHUBGithubKeyword_0_0 = (Keyword)cGITHUBEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cENVEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cENVEnvKeyword_1_0 = (Keyword)cENVEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cVARSEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cVARSVarsKeyword_2_0 = (Keyword)cVARSEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cJOBEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cJOBJobKeyword_3_0 = (Keyword)cJOBEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cJOBSEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cJOBSJobsKeyword_4_0 = (Keyword)cJOBSEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cSTEPSEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cSTEPSStepsKeyword_5_0 = (Keyword)cSTEPSEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cRUNNEREnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cRUNNERRunnerKeyword_6_0 = (Keyword)cRUNNEREnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cSECRETSEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cSECRETSSecretsKeyword_7_0 = (Keyword)cSECRETSEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cSTRATEGYEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cSTRATEGYStrategyKeyword_8_0 = (Keyword)cSTRATEGYEnumLiteralDeclaration_8.eContents().get(0);
		private final EnumLiteralDeclaration cMATRIXEnumLiteralDeclaration_9 = (EnumLiteralDeclaration)cAlternatives.eContents().get(9);
		private final Keyword cMATRIXMatrixKeyword_9_0 = (Keyword)cMATRIXEnumLiteralDeclaration_9.eContents().get(0);
		private final EnumLiteralDeclaration cNEEDSEnumLiteralDeclaration_10 = (EnumLiteralDeclaration)cAlternatives.eContents().get(10);
		private final Keyword cNEEDSNeedsKeyword_10_0 = (Keyword)cNEEDSEnumLiteralDeclaration_10.eContents().get(0);
		private final EnumLiteralDeclaration cINPUTSEnumLiteralDeclaration_11 = (EnumLiteralDeclaration)cAlternatives.eContents().get(11);
		private final Keyword cINPUTSInputsKeyword_11_0 = (Keyword)cINPUTSEnumLiteralDeclaration_11.eContents().get(0);
		
		//enum CONTEXT returns GHA::CONTEXTS:
		//    GITHUB='github' |
		//    ENV='env' |
		//    VARS='vars' |
		//    JOB='job' |
		//    JOBS='jobs' |
		//    STEPS='steps' |
		//    RUNNER='runner' |
		//    SECRETS='secrets' |
		//    STRATEGY='strategy' |
		//    MATRIX='matrix' |
		//    NEEDS='needs' |
		//    INPUTS='inputs'
		//;
		public EnumRule getRule() { return rule; }
		
		//GITHUB='github' |
		//ENV='env' |
		//VARS='vars' |
		//JOB='job' |
		//JOBS='jobs' |
		//STEPS='steps' |
		//RUNNER='runner' |
		//SECRETS='secrets' |
		//STRATEGY='strategy' |
		//MATRIX='matrix' |
		//NEEDS='needs' |
		//INPUTS='inputs'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//GITHUB='github'
		public EnumLiteralDeclaration getGITHUBEnumLiteralDeclaration_0() { return cGITHUBEnumLiteralDeclaration_0; }
		
		//'github'
		public Keyword getGITHUBGithubKeyword_0_0() { return cGITHUBGithubKeyword_0_0; }
		
		//ENV='env'
		public EnumLiteralDeclaration getENVEnumLiteralDeclaration_1() { return cENVEnumLiteralDeclaration_1; }
		
		//'env'
		public Keyword getENVEnvKeyword_1_0() { return cENVEnvKeyword_1_0; }
		
		//VARS='vars'
		public EnumLiteralDeclaration getVARSEnumLiteralDeclaration_2() { return cVARSEnumLiteralDeclaration_2; }
		
		//'vars'
		public Keyword getVARSVarsKeyword_2_0() { return cVARSVarsKeyword_2_0; }
		
		//JOB='job'
		public EnumLiteralDeclaration getJOBEnumLiteralDeclaration_3() { return cJOBEnumLiteralDeclaration_3; }
		
		//'job'
		public Keyword getJOBJobKeyword_3_0() { return cJOBJobKeyword_3_0; }
		
		//JOBS='jobs'
		public EnumLiteralDeclaration getJOBSEnumLiteralDeclaration_4() { return cJOBSEnumLiteralDeclaration_4; }
		
		//'jobs'
		public Keyword getJOBSJobsKeyword_4_0() { return cJOBSJobsKeyword_4_0; }
		
		//STEPS='steps'
		public EnumLiteralDeclaration getSTEPSEnumLiteralDeclaration_5() { return cSTEPSEnumLiteralDeclaration_5; }
		
		//'steps'
		public Keyword getSTEPSStepsKeyword_5_0() { return cSTEPSStepsKeyword_5_0; }
		
		//RUNNER='runner'
		public EnumLiteralDeclaration getRUNNEREnumLiteralDeclaration_6() { return cRUNNEREnumLiteralDeclaration_6; }
		
		//'runner'
		public Keyword getRUNNERRunnerKeyword_6_0() { return cRUNNERRunnerKeyword_6_0; }
		
		//SECRETS='secrets'
		public EnumLiteralDeclaration getSECRETSEnumLiteralDeclaration_7() { return cSECRETSEnumLiteralDeclaration_7; }
		
		//'secrets'
		public Keyword getSECRETSSecretsKeyword_7_0() { return cSECRETSSecretsKeyword_7_0; }
		
		//STRATEGY='strategy'
		public EnumLiteralDeclaration getSTRATEGYEnumLiteralDeclaration_8() { return cSTRATEGYEnumLiteralDeclaration_8; }
		
		//'strategy'
		public Keyword getSTRATEGYStrategyKeyword_8_0() { return cSTRATEGYStrategyKeyword_8_0; }
		
		//MATRIX='matrix'
		public EnumLiteralDeclaration getMATRIXEnumLiteralDeclaration_9() { return cMATRIXEnumLiteralDeclaration_9; }
		
		//'matrix'
		public Keyword getMATRIXMatrixKeyword_9_0() { return cMATRIXMatrixKeyword_9_0; }
		
		//NEEDS='needs'
		public EnumLiteralDeclaration getNEEDSEnumLiteralDeclaration_10() { return cNEEDSEnumLiteralDeclaration_10; }
		
		//'needs'
		public Keyword getNEEDSNeedsKeyword_10_0() { return cNEEDSNeedsKeyword_10_0; }
		
		//INPUTS='inputs'
		public EnumLiteralDeclaration getINPUTSEnumLiteralDeclaration_11() { return cINPUTSEnumLiteralDeclaration_11; }
		
		//'inputs'
		public Keyword getINPUTSInputsKeyword_11_0() { return cINPUTSInputsKeyword_11_0; }
	}
	public class TYPEElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.TYPE");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cBOOLEANEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cBOOLEANBooleanKeyword_0_0 = (Keyword)cBOOLEANEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cNUMBEREnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cNUMBERNumberKeyword_1_0 = (Keyword)cNUMBEREnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cSTRINGEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cSTRINGStringKeyword_2_0 = (Keyword)cSTRINGEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cENVIRONMENTEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cENVIRONMENTEnvironmentKeyword_3_0 = (Keyword)cENVIRONMENTEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cCHOICEEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cCHOICEChoiceKeyword_4_0 = (Keyword)cCHOICEEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum TYPE returns GHA::INPUT_TYPES:
		//    BOOLEAN='boolean' |
		//    NUMBER='number' |
		//    STRING='string' |
		//    ENVIRONMENT='environment' |
		//    CHOICE='choice'
		//;
		public EnumRule getRule() { return rule; }
		
		//BOOLEAN='boolean' |
		//NUMBER='number' |
		//STRING='string' |
		//ENVIRONMENT='environment' |
		//CHOICE='choice'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//BOOLEAN='boolean'
		public EnumLiteralDeclaration getBOOLEANEnumLiteralDeclaration_0() { return cBOOLEANEnumLiteralDeclaration_0; }
		
		//'boolean'
		public Keyword getBOOLEANBooleanKeyword_0_0() { return cBOOLEANBooleanKeyword_0_0; }
		
		//NUMBER='number'
		public EnumLiteralDeclaration getNUMBEREnumLiteralDeclaration_1() { return cNUMBEREnumLiteralDeclaration_1; }
		
		//'number'
		public Keyword getNUMBERNumberKeyword_1_0() { return cNUMBERNumberKeyword_1_0; }
		
		//STRING='string'
		public EnumLiteralDeclaration getSTRINGEnumLiteralDeclaration_2() { return cSTRINGEnumLiteralDeclaration_2; }
		
		//'string'
		public Keyword getSTRINGStringKeyword_2_0() { return cSTRINGStringKeyword_2_0; }
		
		//ENVIRONMENT='environment'
		public EnumLiteralDeclaration getENVIRONMENTEnumLiteralDeclaration_3() { return cENVIRONMENTEnumLiteralDeclaration_3; }
		
		//'environment'
		public Keyword getENVIRONMENTEnvironmentKeyword_3_0() { return cENVIRONMENTEnvironmentKeyword_3_0; }
		
		//CHOICE='choice'
		public EnumLiteralDeclaration getCHOICEEnumLiteralDeclaration_4() { return cCHOICEEnumLiteralDeclaration_4; }
		
		//'choice'
		public Keyword getCHOICEChoiceKeyword_4_0() { return cCHOICEChoiceKeyword_4_0; }
	}
	public class WEBHOOK_ACTIVITY_TYPEElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.WEBHOOK_ACTIVITY_TYPE");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cASSIGNEDEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cASSIGNEDAssignedKeyword_0_0 = (Keyword)cASSIGNEDEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cAUTO_MERGE_DISABLEDEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cAUTO_MERGE_DISABLEDAuto_merge_disabledKeyword_1_0 = (Keyword)cAUTO_MERGE_DISABLEDEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cAUTO_MERGE_ENABLEDEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cAUTO_MERGE_ENABLEDAuto_merge_enabledKeyword_2_0 = (Keyword)cAUTO_MERGE_ENABLEDEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cCLOSEDEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cCLOSEDClosedKeyword_3_0 = (Keyword)cCLOSEDEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cCONVERTED_TO_DRAFTEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cCONVERTED_TO_DRAFTConverted_to_draftKeyword_4_0 = (Keyword)cCONVERTED_TO_DRAFTEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cEDITEDEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cEDITEDEditedKeyword_5_0 = (Keyword)cEDITEDEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cLABELEDEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cLABELEDLabeledKeyword_6_0 = (Keyword)cLABELEDEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cLOCKEDEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cLOCKEDLockedKeyword_7_0 = (Keyword)cLOCKEDEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cOPENEDEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cOPENEDOpenedKeyword_8_0 = (Keyword)cOPENEDEnumLiteralDeclaration_8.eContents().get(0);
		private final EnumLiteralDeclaration cREADY_FOR_REVIEWEnumLiteralDeclaration_9 = (EnumLiteralDeclaration)cAlternatives.eContents().get(9);
		private final Keyword cREADY_FOR_REVIEWReady_for_reviewKeyword_9_0 = (Keyword)cREADY_FOR_REVIEWEnumLiteralDeclaration_9.eContents().get(0);
		private final EnumLiteralDeclaration cREOPENEDEnumLiteralDeclaration_10 = (EnumLiteralDeclaration)cAlternatives.eContents().get(10);
		private final Keyword cREOPENEDReopenedKeyword_10_0 = (Keyword)cREOPENEDEnumLiteralDeclaration_10.eContents().get(0);
		private final EnumLiteralDeclaration cREVIEW_REQUEST_REMOVEDEnumLiteralDeclaration_11 = (EnumLiteralDeclaration)cAlternatives.eContents().get(11);
		private final Keyword cREVIEW_REQUEST_REMOVEDReview_request_removedKeyword_11_0 = (Keyword)cREVIEW_REQUEST_REMOVEDEnumLiteralDeclaration_11.eContents().get(0);
		private final EnumLiteralDeclaration cREVIEW_REQUESTEDEnumLiteralDeclaration_12 = (EnumLiteralDeclaration)cAlternatives.eContents().get(12);
		private final Keyword cREVIEW_REQUESTEDReview_requestedKeyword_12_0 = (Keyword)cREVIEW_REQUESTEDEnumLiteralDeclaration_12.eContents().get(0);
		private final EnumLiteralDeclaration cSYNCHRONIZEEnumLiteralDeclaration_13 = (EnumLiteralDeclaration)cAlternatives.eContents().get(13);
		private final Keyword cSYNCHRONIZESynchronizeKeyword_13_0 = (Keyword)cSYNCHRONIZEEnumLiteralDeclaration_13.eContents().get(0);
		private final EnumLiteralDeclaration cUNASSIGNEDEnumLiteralDeclaration_14 = (EnumLiteralDeclaration)cAlternatives.eContents().get(14);
		private final Keyword cUNASSIGNEDUnassignedKeyword_14_0 = (Keyword)cUNASSIGNEDEnumLiteralDeclaration_14.eContents().get(0);
		private final EnumLiteralDeclaration cUNLABELEDEnumLiteralDeclaration_15 = (EnumLiteralDeclaration)cAlternatives.eContents().get(15);
		private final Keyword cUNLABELEDUnlabeledKeyword_15_0 = (Keyword)cUNLABELEDEnumLiteralDeclaration_15.eContents().get(0);
		private final EnumLiteralDeclaration cUNLOCKEDEnumLiteralDeclaration_16 = (EnumLiteralDeclaration)cAlternatives.eContents().get(16);
		private final Keyword cUNLOCKEDUnlockedKeyword_16_0 = (Keyword)cUNLOCKEDEnumLiteralDeclaration_16.eContents().get(0);
		private final EnumLiteralDeclaration cCREATEDEnumLiteralDeclaration_17 = (EnumLiteralDeclaration)cAlternatives.eContents().get(17);
		private final Keyword cCREATEDCreatedKeyword_17_0 = (Keyword)cCREATEDEnumLiteralDeclaration_17.eContents().get(0);
		private final EnumLiteralDeclaration cDELETEDEnumLiteralDeclaration_18 = (EnumLiteralDeclaration)cAlternatives.eContents().get(18);
		private final Keyword cDELETEDDeletedKeyword_18_0 = (Keyword)cDELETEDEnumLiteralDeclaration_18.eContents().get(0);
		
		//enum WEBHOOK_ACTIVITY_TYPE returns GHA::WEBHOOK_ACTIVITY_TYPES:
		//    ASSIGNED='assigned' |
		//    AUTO_MERGE_DISABLED='auto_merge_disabled' |
		//    AUTO_MERGE_ENABLED='auto_merge_enabled' |
		//    CLOSED='closed' |
		//    CONVERTED_TO_DRAFT='converted_to_draft' |
		//    EDITED='edited' |
		//    LABELED='labeled' |
		//    LOCKED='locked' |
		//    OPENED='opened' |
		//    READY_FOR_REVIEW='ready_for_review' |
		//    REOPENED='reopened' |
		//    REVIEW_REQUEST_REMOVED='review_request_removed' |
		//    REVIEW_REQUESTED='review_requested' |
		//    SYNCHRONIZE='synchronize' |
		//    UNASSIGNED='unassigned' |
		//    UNLABELED='unlabeled' |
		//    UNLOCKED='unlocked' |
		//    CREATED='created' |
		//    DELETED='deleted'
		//;
		public EnumRule getRule() { return rule; }
		
		//ASSIGNED='assigned' |
		//AUTO_MERGE_DISABLED='auto_merge_disabled' |
		//AUTO_MERGE_ENABLED='auto_merge_enabled' |
		//CLOSED='closed' |
		//CONVERTED_TO_DRAFT='converted_to_draft' |
		//EDITED='edited' |
		//LABELED='labeled' |
		//LOCKED='locked' |
		//OPENED='opened' |
		//READY_FOR_REVIEW='ready_for_review' |
		//REOPENED='reopened' |
		//REVIEW_REQUEST_REMOVED='review_request_removed' |
		//REVIEW_REQUESTED='review_requested' |
		//SYNCHRONIZE='synchronize' |
		//UNASSIGNED='unassigned' |
		//UNLABELED='unlabeled' |
		//UNLOCKED='unlocked' |
		//CREATED='created' |
		//DELETED='deleted'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ASSIGNED='assigned'
		public EnumLiteralDeclaration getASSIGNEDEnumLiteralDeclaration_0() { return cASSIGNEDEnumLiteralDeclaration_0; }
		
		//'assigned'
		public Keyword getASSIGNEDAssignedKeyword_0_0() { return cASSIGNEDAssignedKeyword_0_0; }
		
		//AUTO_MERGE_DISABLED='auto_merge_disabled'
		public EnumLiteralDeclaration getAUTO_MERGE_DISABLEDEnumLiteralDeclaration_1() { return cAUTO_MERGE_DISABLEDEnumLiteralDeclaration_1; }
		
		//'auto_merge_disabled'
		public Keyword getAUTO_MERGE_DISABLEDAuto_merge_disabledKeyword_1_0() { return cAUTO_MERGE_DISABLEDAuto_merge_disabledKeyword_1_0; }
		
		//AUTO_MERGE_ENABLED='auto_merge_enabled'
		public EnumLiteralDeclaration getAUTO_MERGE_ENABLEDEnumLiteralDeclaration_2() { return cAUTO_MERGE_ENABLEDEnumLiteralDeclaration_2; }
		
		//'auto_merge_enabled'
		public Keyword getAUTO_MERGE_ENABLEDAuto_merge_enabledKeyword_2_0() { return cAUTO_MERGE_ENABLEDAuto_merge_enabledKeyword_2_0; }
		
		//CLOSED='closed'
		public EnumLiteralDeclaration getCLOSEDEnumLiteralDeclaration_3() { return cCLOSEDEnumLiteralDeclaration_3; }
		
		//'closed'
		public Keyword getCLOSEDClosedKeyword_3_0() { return cCLOSEDClosedKeyword_3_0; }
		
		//CONVERTED_TO_DRAFT='converted_to_draft'
		public EnumLiteralDeclaration getCONVERTED_TO_DRAFTEnumLiteralDeclaration_4() { return cCONVERTED_TO_DRAFTEnumLiteralDeclaration_4; }
		
		//'converted_to_draft'
		public Keyword getCONVERTED_TO_DRAFTConverted_to_draftKeyword_4_0() { return cCONVERTED_TO_DRAFTConverted_to_draftKeyword_4_0; }
		
		//EDITED='edited'
		public EnumLiteralDeclaration getEDITEDEnumLiteralDeclaration_5() { return cEDITEDEnumLiteralDeclaration_5; }
		
		//'edited'
		public Keyword getEDITEDEditedKeyword_5_0() { return cEDITEDEditedKeyword_5_0; }
		
		//LABELED='labeled'
		public EnumLiteralDeclaration getLABELEDEnumLiteralDeclaration_6() { return cLABELEDEnumLiteralDeclaration_6; }
		
		//'labeled'
		public Keyword getLABELEDLabeledKeyword_6_0() { return cLABELEDLabeledKeyword_6_0; }
		
		//LOCKED='locked'
		public EnumLiteralDeclaration getLOCKEDEnumLiteralDeclaration_7() { return cLOCKEDEnumLiteralDeclaration_7; }
		
		//'locked'
		public Keyword getLOCKEDLockedKeyword_7_0() { return cLOCKEDLockedKeyword_7_0; }
		
		//OPENED='opened'
		public EnumLiteralDeclaration getOPENEDEnumLiteralDeclaration_8() { return cOPENEDEnumLiteralDeclaration_8; }
		
		//'opened'
		public Keyword getOPENEDOpenedKeyword_8_0() { return cOPENEDOpenedKeyword_8_0; }
		
		//READY_FOR_REVIEW='ready_for_review'
		public EnumLiteralDeclaration getREADY_FOR_REVIEWEnumLiteralDeclaration_9() { return cREADY_FOR_REVIEWEnumLiteralDeclaration_9; }
		
		//'ready_for_review'
		public Keyword getREADY_FOR_REVIEWReady_for_reviewKeyword_9_0() { return cREADY_FOR_REVIEWReady_for_reviewKeyword_9_0; }
		
		//REOPENED='reopened'
		public EnumLiteralDeclaration getREOPENEDEnumLiteralDeclaration_10() { return cREOPENEDEnumLiteralDeclaration_10; }
		
		//'reopened'
		public Keyword getREOPENEDReopenedKeyword_10_0() { return cREOPENEDReopenedKeyword_10_0; }
		
		//REVIEW_REQUEST_REMOVED='review_request_removed'
		public EnumLiteralDeclaration getREVIEW_REQUEST_REMOVEDEnumLiteralDeclaration_11() { return cREVIEW_REQUEST_REMOVEDEnumLiteralDeclaration_11; }
		
		//'review_request_removed'
		public Keyword getREVIEW_REQUEST_REMOVEDReview_request_removedKeyword_11_0() { return cREVIEW_REQUEST_REMOVEDReview_request_removedKeyword_11_0; }
		
		//REVIEW_REQUESTED='review_requested'
		public EnumLiteralDeclaration getREVIEW_REQUESTEDEnumLiteralDeclaration_12() { return cREVIEW_REQUESTEDEnumLiteralDeclaration_12; }
		
		//'review_requested'
		public Keyword getREVIEW_REQUESTEDReview_requestedKeyword_12_0() { return cREVIEW_REQUESTEDReview_requestedKeyword_12_0; }
		
		//SYNCHRONIZE='synchronize'
		public EnumLiteralDeclaration getSYNCHRONIZEEnumLiteralDeclaration_13() { return cSYNCHRONIZEEnumLiteralDeclaration_13; }
		
		//'synchronize'
		public Keyword getSYNCHRONIZESynchronizeKeyword_13_0() { return cSYNCHRONIZESynchronizeKeyword_13_0; }
		
		//UNASSIGNED='unassigned'
		public EnumLiteralDeclaration getUNASSIGNEDEnumLiteralDeclaration_14() { return cUNASSIGNEDEnumLiteralDeclaration_14; }
		
		//'unassigned'
		public Keyword getUNASSIGNEDUnassignedKeyword_14_0() { return cUNASSIGNEDUnassignedKeyword_14_0; }
		
		//UNLABELED='unlabeled'
		public EnumLiteralDeclaration getUNLABELEDEnumLiteralDeclaration_15() { return cUNLABELEDEnumLiteralDeclaration_15; }
		
		//'unlabeled'
		public Keyword getUNLABELEDUnlabeledKeyword_15_0() { return cUNLABELEDUnlabeledKeyword_15_0; }
		
		//UNLOCKED='unlocked'
		public EnumLiteralDeclaration getUNLOCKEDEnumLiteralDeclaration_16() { return cUNLOCKEDEnumLiteralDeclaration_16; }
		
		//'unlocked'
		public Keyword getUNLOCKEDUnlockedKeyword_16_0() { return cUNLOCKEDUnlockedKeyword_16_0; }
		
		//CREATED='created'
		public EnumLiteralDeclaration getCREATEDEnumLiteralDeclaration_17() { return cCREATEDEnumLiteralDeclaration_17; }
		
		//'created'
		public Keyword getCREATEDCreatedKeyword_17_0() { return cCREATEDCreatedKeyword_17_0; }
		
		//DELETED='deleted'
		public EnumLiteralDeclaration getDELETEDEnumLiteralDeclaration_18() { return cDELETEDEnumLiteralDeclaration_18; }
		
		//'deleted'
		public Keyword getDELETEDDeletedKeyword_18_0() { return cDELETEDDeletedKeyword_18_0; }
	}
	public class EVENTElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.EVENT");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cBRANCH_PROTECTION_RULEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cBRANCH_PROTECTION_RULEBranch_protection_ruleKeyword_0_0 = (Keyword)cBRANCH_PROTECTION_RULEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cCHECK_RUNEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cCHECK_RUNCheck_runKeyword_1_0 = (Keyword)cCHECK_RUNEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cCHECK_SUITEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cCHECK_SUITECheck_suiteKeyword_2_0 = (Keyword)cCHECK_SUITEEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cCREATEEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cCREATECreateKeyword_3_0 = (Keyword)cCREATEEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cDELETEEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cDELETEDeleteKeyword_4_0 = (Keyword)cDELETEEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cDEPLOYMENTEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cDEPLOYMENTDeploymentKeyword_5_0 = (Keyword)cDEPLOYMENTEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cDEPLOYMENT_STATUSEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cDEPLOYMENT_STATUSDeployment_statusKeyword_6_0 = (Keyword)cDEPLOYMENT_STATUSEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cDISCUSSIONEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cDISCUSSIONDiscussionKeyword_7_0 = (Keyword)cDISCUSSIONEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cFORKEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cFORKForkKeyword_8_0 = (Keyword)cFORKEnumLiteralDeclaration_8.eContents().get(0);
		private final EnumLiteralDeclaration cGOLLUMEnumLiteralDeclaration_9 = (EnumLiteralDeclaration)cAlternatives.eContents().get(9);
		private final Keyword cGOLLUMGollumKeyword_9_0 = (Keyword)cGOLLUMEnumLiteralDeclaration_9.eContents().get(0);
		private final EnumLiteralDeclaration cISSUESEnumLiteralDeclaration_10 = (EnumLiteralDeclaration)cAlternatives.eContents().get(10);
		private final Keyword cISSUESIssuesKeyword_10_0 = (Keyword)cISSUESEnumLiteralDeclaration_10.eContents().get(0);
		private final EnumLiteralDeclaration cLABELEnumLiteralDeclaration_11 = (EnumLiteralDeclaration)cAlternatives.eContents().get(11);
		private final Keyword cLABELLabelKeyword_11_0 = (Keyword)cLABELEnumLiteralDeclaration_11.eContents().get(0);
		private final EnumLiteralDeclaration cMERGE_GROUPEnumLiteralDeclaration_12 = (EnumLiteralDeclaration)cAlternatives.eContents().get(12);
		private final Keyword cMERGE_GROUPMerge_groupKeyword_12_0 = (Keyword)cMERGE_GROUPEnumLiteralDeclaration_12.eContents().get(0);
		private final EnumLiteralDeclaration cMILESTONEEnumLiteralDeclaration_13 = (EnumLiteralDeclaration)cAlternatives.eContents().get(13);
		private final Keyword cMILESTONEMilestoneKeyword_13_0 = (Keyword)cMILESTONEEnumLiteralDeclaration_13.eContents().get(0);
		private final EnumLiteralDeclaration cPAGE_BUILDEnumLiteralDeclaration_14 = (EnumLiteralDeclaration)cAlternatives.eContents().get(14);
		private final Keyword cPAGE_BUILDPage_buildKeyword_14_0 = (Keyword)cPAGE_BUILDEnumLiteralDeclaration_14.eContents().get(0);
		private final EnumLiteralDeclaration cPROJECTEnumLiteralDeclaration_15 = (EnumLiteralDeclaration)cAlternatives.eContents().get(15);
		private final Keyword cPROJECTProjectKeyword_15_0 = (Keyword)cPROJECTEnumLiteralDeclaration_15.eContents().get(0);
		private final EnumLiteralDeclaration cPROJECT_CARDEnumLiteralDeclaration_16 = (EnumLiteralDeclaration)cAlternatives.eContents().get(16);
		private final Keyword cPROJECT_CARDProject_cardKeyword_16_0 = (Keyword)cPROJECT_CARDEnumLiteralDeclaration_16.eContents().get(0);
		private final EnumLiteralDeclaration cPROJECT_COLUMNEnumLiteralDeclaration_17 = (EnumLiteralDeclaration)cAlternatives.eContents().get(17);
		private final Keyword cPROJECT_COLUMNProject_columnKeyword_17_0 = (Keyword)cPROJECT_COLUMNEnumLiteralDeclaration_17.eContents().get(0);
		private final EnumLiteralDeclaration cPUBLICEnumLiteralDeclaration_18 = (EnumLiteralDeclaration)cAlternatives.eContents().get(18);
		private final Keyword cPUBLICPublicKeyword_18_0 = (Keyword)cPUBLICEnumLiteralDeclaration_18.eContents().get(0);
		private final EnumLiteralDeclaration cPULL_REQUEST_REVIEWEnumLiteralDeclaration_19 = (EnumLiteralDeclaration)cAlternatives.eContents().get(19);
		private final Keyword cPULL_REQUEST_REVIEWPull_request_reviewKeyword_19_0 = (Keyword)cPULL_REQUEST_REVIEWEnumLiteralDeclaration_19.eContents().get(0);
		private final EnumLiteralDeclaration cPULL_REQUEST_REVIEW_COMMENTEnumLiteralDeclaration_20 = (EnumLiteralDeclaration)cAlternatives.eContents().get(20);
		private final Keyword cPULL_REQUEST_REVIEW_COMMENTPull_request_review_commentKeyword_20_0 = (Keyword)cPULL_REQUEST_REVIEW_COMMENTEnumLiteralDeclaration_20.eContents().get(0);
		private final EnumLiteralDeclaration cREGISTRY_PACKAGEEnumLiteralDeclaration_21 = (EnumLiteralDeclaration)cAlternatives.eContents().get(21);
		private final Keyword cREGISTRY_PACKAGERegistry_packageKeyword_21_0 = (Keyword)cREGISTRY_PACKAGEEnumLiteralDeclaration_21.eContents().get(0);
		private final EnumLiteralDeclaration cRELEASEEnumLiteralDeclaration_22 = (EnumLiteralDeclaration)cAlternatives.eContents().get(22);
		private final Keyword cRELEASEReleaseKeyword_22_0 = (Keyword)cRELEASEEnumLiteralDeclaration_22.eContents().get(0);
		private final EnumLiteralDeclaration cREPOSITORY_DISPATCHEnumLiteralDeclaration_23 = (EnumLiteralDeclaration)cAlternatives.eContents().get(23);
		private final Keyword cREPOSITORY_DISPATCHRepository_dispatchKeyword_23_0 = (Keyword)cREPOSITORY_DISPATCHEnumLiteralDeclaration_23.eContents().get(0);
		private final EnumLiteralDeclaration cWATCHEnumLiteralDeclaration_24 = (EnumLiteralDeclaration)cAlternatives.eContents().get(24);
		private final Keyword cWATCHWatchKeyword_24_0 = (Keyword)cWATCHEnumLiteralDeclaration_24.eContents().get(0);
		private final EnumLiteralDeclaration cSTATUSEnumLiteralDeclaration_25 = (EnumLiteralDeclaration)cAlternatives.eContents().get(25);
		private final Keyword cSTATUSStatusKeyword_25_0 = (Keyword)cSTATUSEnumLiteralDeclaration_25.eContents().get(0);
		
		//enum EVENT returns GHA::EVENTS:
		//    BRANCH_PROTECTION_RULE='branch_protection_rule' |
		//    CHECK_RUN='check_run' |
		//    CHECK_SUITE='check_suite' |
		//    CREATE='create' |
		//    DELETE='delete' |
		//    DEPLOYMENT='deployment' |
		//    DEPLOYMENT_STATUS='deployment_status' |
		//    DISCUSSION='discussion' |
		//    FORK='fork' |
		//    GOLLUM='gollum' |
		//    ISSUES='issues' |
		//    LABEL='label' |
		//    MERGE_GROUP='merge_group' |
		//    MILESTONE='milestone' |
		//    PAGE_BUILD='page_build' |
		//    PROJECT='project' |
		//    PROJECT_CARD='project_card' |
		//    PROJECT_COLUMN='project_column' |
		//    PUBLIC='public' |
		//    PULL_REQUEST_REVIEW='pull_request_review' |
		//    PULL_REQUEST_REVIEW_COMMENT='pull_request_review_comment' |
		//    REGISTRY_PACKAGE='registry_package' |
		//    RELEASE='release' |
		//    REPOSITORY_DISPATCH='repository_dispatch' |
		//    WATCH='watch' |
		//    STATUS='status'
		//;
		public EnumRule getRule() { return rule; }
		
		//BRANCH_PROTECTION_RULE='branch_protection_rule' |
		//CHECK_RUN='check_run' |
		//CHECK_SUITE='check_suite' |
		//CREATE='create' |
		//DELETE='delete' |
		//DEPLOYMENT='deployment' |
		//DEPLOYMENT_STATUS='deployment_status' |
		//DISCUSSION='discussion' |
		//FORK='fork' |
		//GOLLUM='gollum' |
		//ISSUES='issues' |
		//LABEL='label' |
		//MERGE_GROUP='merge_group' |
		//MILESTONE='milestone' |
		//PAGE_BUILD='page_build' |
		//PROJECT='project' |
		//PROJECT_CARD='project_card' |
		//PROJECT_COLUMN='project_column' |
		//PUBLIC='public' |
		//PULL_REQUEST_REVIEW='pull_request_review' |
		//PULL_REQUEST_REVIEW_COMMENT='pull_request_review_comment' |
		//REGISTRY_PACKAGE='registry_package' |
		//RELEASE='release' |
		//REPOSITORY_DISPATCH='repository_dispatch' |
		//WATCH='watch' |
		//STATUS='status'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//BRANCH_PROTECTION_RULE='branch_protection_rule'
		public EnumLiteralDeclaration getBRANCH_PROTECTION_RULEEnumLiteralDeclaration_0() { return cBRANCH_PROTECTION_RULEEnumLiteralDeclaration_0; }
		
		//'branch_protection_rule'
		public Keyword getBRANCH_PROTECTION_RULEBranch_protection_ruleKeyword_0_0() { return cBRANCH_PROTECTION_RULEBranch_protection_ruleKeyword_0_0; }
		
		//CHECK_RUN='check_run'
		public EnumLiteralDeclaration getCHECK_RUNEnumLiteralDeclaration_1() { return cCHECK_RUNEnumLiteralDeclaration_1; }
		
		//'check_run'
		public Keyword getCHECK_RUNCheck_runKeyword_1_0() { return cCHECK_RUNCheck_runKeyword_1_0; }
		
		//CHECK_SUITE='check_suite'
		public EnumLiteralDeclaration getCHECK_SUITEEnumLiteralDeclaration_2() { return cCHECK_SUITEEnumLiteralDeclaration_2; }
		
		//'check_suite'
		public Keyword getCHECK_SUITECheck_suiteKeyword_2_0() { return cCHECK_SUITECheck_suiteKeyword_2_0; }
		
		//CREATE='create'
		public EnumLiteralDeclaration getCREATEEnumLiteralDeclaration_3() { return cCREATEEnumLiteralDeclaration_3; }
		
		//'create'
		public Keyword getCREATECreateKeyword_3_0() { return cCREATECreateKeyword_3_0; }
		
		//DELETE='delete'
		public EnumLiteralDeclaration getDELETEEnumLiteralDeclaration_4() { return cDELETEEnumLiteralDeclaration_4; }
		
		//'delete'
		public Keyword getDELETEDeleteKeyword_4_0() { return cDELETEDeleteKeyword_4_0; }
		
		//DEPLOYMENT='deployment'
		public EnumLiteralDeclaration getDEPLOYMENTEnumLiteralDeclaration_5() { return cDEPLOYMENTEnumLiteralDeclaration_5; }
		
		//'deployment'
		public Keyword getDEPLOYMENTDeploymentKeyword_5_0() { return cDEPLOYMENTDeploymentKeyword_5_0; }
		
		//DEPLOYMENT_STATUS='deployment_status'
		public EnumLiteralDeclaration getDEPLOYMENT_STATUSEnumLiteralDeclaration_6() { return cDEPLOYMENT_STATUSEnumLiteralDeclaration_6; }
		
		//'deployment_status'
		public Keyword getDEPLOYMENT_STATUSDeployment_statusKeyword_6_0() { return cDEPLOYMENT_STATUSDeployment_statusKeyword_6_0; }
		
		//DISCUSSION='discussion'
		public EnumLiteralDeclaration getDISCUSSIONEnumLiteralDeclaration_7() { return cDISCUSSIONEnumLiteralDeclaration_7; }
		
		//'discussion'
		public Keyword getDISCUSSIONDiscussionKeyword_7_0() { return cDISCUSSIONDiscussionKeyword_7_0; }
		
		//FORK='fork'
		public EnumLiteralDeclaration getFORKEnumLiteralDeclaration_8() { return cFORKEnumLiteralDeclaration_8; }
		
		//'fork'
		public Keyword getFORKForkKeyword_8_0() { return cFORKForkKeyword_8_0; }
		
		//GOLLUM='gollum'
		public EnumLiteralDeclaration getGOLLUMEnumLiteralDeclaration_9() { return cGOLLUMEnumLiteralDeclaration_9; }
		
		//'gollum'
		public Keyword getGOLLUMGollumKeyword_9_0() { return cGOLLUMGollumKeyword_9_0; }
		
		//ISSUES='issues'
		public EnumLiteralDeclaration getISSUESEnumLiteralDeclaration_10() { return cISSUESEnumLiteralDeclaration_10; }
		
		//'issues'
		public Keyword getISSUESIssuesKeyword_10_0() { return cISSUESIssuesKeyword_10_0; }
		
		//LABEL='label'
		public EnumLiteralDeclaration getLABELEnumLiteralDeclaration_11() { return cLABELEnumLiteralDeclaration_11; }
		
		//'label'
		public Keyword getLABELLabelKeyword_11_0() { return cLABELLabelKeyword_11_0; }
		
		//MERGE_GROUP='merge_group'
		public EnumLiteralDeclaration getMERGE_GROUPEnumLiteralDeclaration_12() { return cMERGE_GROUPEnumLiteralDeclaration_12; }
		
		//'merge_group'
		public Keyword getMERGE_GROUPMerge_groupKeyword_12_0() { return cMERGE_GROUPMerge_groupKeyword_12_0; }
		
		//MILESTONE='milestone'
		public EnumLiteralDeclaration getMILESTONEEnumLiteralDeclaration_13() { return cMILESTONEEnumLiteralDeclaration_13; }
		
		//'milestone'
		public Keyword getMILESTONEMilestoneKeyword_13_0() { return cMILESTONEMilestoneKeyword_13_0; }
		
		//PAGE_BUILD='page_build'
		public EnumLiteralDeclaration getPAGE_BUILDEnumLiteralDeclaration_14() { return cPAGE_BUILDEnumLiteralDeclaration_14; }
		
		//'page_build'
		public Keyword getPAGE_BUILDPage_buildKeyword_14_0() { return cPAGE_BUILDPage_buildKeyword_14_0; }
		
		//PROJECT='project'
		public EnumLiteralDeclaration getPROJECTEnumLiteralDeclaration_15() { return cPROJECTEnumLiteralDeclaration_15; }
		
		//'project'
		public Keyword getPROJECTProjectKeyword_15_0() { return cPROJECTProjectKeyword_15_0; }
		
		//PROJECT_CARD='project_card'
		public EnumLiteralDeclaration getPROJECT_CARDEnumLiteralDeclaration_16() { return cPROJECT_CARDEnumLiteralDeclaration_16; }
		
		//'project_card'
		public Keyword getPROJECT_CARDProject_cardKeyword_16_0() { return cPROJECT_CARDProject_cardKeyword_16_0; }
		
		//PROJECT_COLUMN='project_column'
		public EnumLiteralDeclaration getPROJECT_COLUMNEnumLiteralDeclaration_17() { return cPROJECT_COLUMNEnumLiteralDeclaration_17; }
		
		//'project_column'
		public Keyword getPROJECT_COLUMNProject_columnKeyword_17_0() { return cPROJECT_COLUMNProject_columnKeyword_17_0; }
		
		//PUBLIC='public'
		public EnumLiteralDeclaration getPUBLICEnumLiteralDeclaration_18() { return cPUBLICEnumLiteralDeclaration_18; }
		
		//'public'
		public Keyword getPUBLICPublicKeyword_18_0() { return cPUBLICPublicKeyword_18_0; }
		
		//PULL_REQUEST_REVIEW='pull_request_review'
		public EnumLiteralDeclaration getPULL_REQUEST_REVIEWEnumLiteralDeclaration_19() { return cPULL_REQUEST_REVIEWEnumLiteralDeclaration_19; }
		
		//'pull_request_review'
		public Keyword getPULL_REQUEST_REVIEWPull_request_reviewKeyword_19_0() { return cPULL_REQUEST_REVIEWPull_request_reviewKeyword_19_0; }
		
		//PULL_REQUEST_REVIEW_COMMENT='pull_request_review_comment'
		public EnumLiteralDeclaration getPULL_REQUEST_REVIEW_COMMENTEnumLiteralDeclaration_20() { return cPULL_REQUEST_REVIEW_COMMENTEnumLiteralDeclaration_20; }
		
		//'pull_request_review_comment'
		public Keyword getPULL_REQUEST_REVIEW_COMMENTPull_request_review_commentKeyword_20_0() { return cPULL_REQUEST_REVIEW_COMMENTPull_request_review_commentKeyword_20_0; }
		
		//REGISTRY_PACKAGE='registry_package'
		public EnumLiteralDeclaration getREGISTRY_PACKAGEEnumLiteralDeclaration_21() { return cREGISTRY_PACKAGEEnumLiteralDeclaration_21; }
		
		//'registry_package'
		public Keyword getREGISTRY_PACKAGERegistry_packageKeyword_21_0() { return cREGISTRY_PACKAGERegistry_packageKeyword_21_0; }
		
		//RELEASE='release'
		public EnumLiteralDeclaration getRELEASEEnumLiteralDeclaration_22() { return cRELEASEEnumLiteralDeclaration_22; }
		
		//'release'
		public Keyword getRELEASEReleaseKeyword_22_0() { return cRELEASEReleaseKeyword_22_0; }
		
		//REPOSITORY_DISPATCH='repository_dispatch'
		public EnumLiteralDeclaration getREPOSITORY_DISPATCHEnumLiteralDeclaration_23() { return cREPOSITORY_DISPATCHEnumLiteralDeclaration_23; }
		
		//'repository_dispatch'
		public Keyword getREPOSITORY_DISPATCHRepository_dispatchKeyword_23_0() { return cREPOSITORY_DISPATCHRepository_dispatchKeyword_23_0; }
		
		//WATCH='watch'
		public EnumLiteralDeclaration getWATCHEnumLiteralDeclaration_24() { return cWATCHEnumLiteralDeclaration_24; }
		
		//'watch'
		public Keyword getWATCHWatchKeyword_24_0() { return cWATCHWatchKeyword_24_0; }
		
		//STATUS='status'
		public EnumLiteralDeclaration getSTATUSEnumLiteralDeclaration_25() { return cSTATUSEnumLiteralDeclaration_25; }
		
		//'status'
		public Keyword getSTATUSStatusKeyword_25_0() { return cSTATUSStatusKeyword_25_0; }
	}
	public class PERMISSION_SCOPEElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.PERMISSION_SCOPE");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cACTIONSEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cACTIONSActionsKeyword_0_0 = (Keyword)cACTIONSEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cCHECKSEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cCHECKSChecksKeyword_1_0 = (Keyword)cCHECKSEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cCONTENTSEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cCONTENTSContentsKeyword_2_0 = (Keyword)cCONTENTSEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cDEPLOYMENTSEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cDEPLOYMENTSDeploymentsKeyword_3_0 = (Keyword)cDEPLOYMENTSEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cDISCUSSIONSEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cDISCUSSIONSDiscussionsKeyword_4_0 = (Keyword)cDISCUSSIONSEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cID_TOKENEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cID_TOKENIdTokenKeyword_5_0 = (Keyword)cID_TOKENEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cISSUESEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cISSUESIssuesKeyword_6_0 = (Keyword)cISSUESEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cPACKAGESEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cPACKAGESPackagesKeyword_7_0 = (Keyword)cPACKAGESEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cPAGESEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cPAGESPagesKeyword_8_0 = (Keyword)cPAGESEnumLiteralDeclaration_8.eContents().get(0);
		private final EnumLiteralDeclaration cPULL_REQUESTSEnumLiteralDeclaration_9 = (EnumLiteralDeclaration)cAlternatives.eContents().get(9);
		private final Keyword cPULL_REQUESTSPull_requestsKeyword_9_0 = (Keyword)cPULL_REQUESTSEnumLiteralDeclaration_9.eContents().get(0);
		private final EnumLiteralDeclaration cREPOSITORY_PROJECTSEnumLiteralDeclaration_10 = (EnumLiteralDeclaration)cAlternatives.eContents().get(10);
		private final Keyword cREPOSITORY_PROJECTSRepository_projectsKeyword_10_0 = (Keyword)cREPOSITORY_PROJECTSEnumLiteralDeclaration_10.eContents().get(0);
		private final EnumLiteralDeclaration cSECURITY_EVENTSEnumLiteralDeclaration_11 = (EnumLiteralDeclaration)cAlternatives.eContents().get(11);
		private final Keyword cSECURITY_EVENTSSecurity_eventsKeyword_11_0 = (Keyword)cSECURITY_EVENTSEnumLiteralDeclaration_11.eContents().get(0);
		private final EnumLiteralDeclaration cSTATUSESEnumLiteralDeclaration_12 = (EnumLiteralDeclaration)cAlternatives.eContents().get(12);
		private final Keyword cSTATUSESStatusesKeyword_12_0 = (Keyword)cSTATUSESEnumLiteralDeclaration_12.eContents().get(0);
		
		//enum PERMISSION_SCOPE returns GHA::PERMISSION_SCOPES:
		//    ACTIONS='actions' |
		//    CHECKS='checks' |
		//    CONTENTS='contents' |
		//    DEPLOYMENTS='deployments' |
		//    DISCUSSIONS='discussions' |
		//    ID_TOKEN='id-token' |
		//    ISSUES='issues' |
		//    PACKAGES='packages' |
		//    PAGES='pages' |
		//    PULL_REQUESTS='pull_requests' |
		//    REPOSITORY_PROJECTS='repository_projects' |
		//    SECURITY_EVENTS='security_events' |
		//    STATUSES='statuses'
		//;
		public EnumRule getRule() { return rule; }
		
		//ACTIONS='actions' |
		//CHECKS='checks' |
		//CONTENTS='contents' |
		//DEPLOYMENTS='deployments' |
		//DISCUSSIONS='discussions' |
		//ID_TOKEN='id-token' |
		//ISSUES='issues' |
		//PACKAGES='packages' |
		//PAGES='pages' |
		//PULL_REQUESTS='pull_requests' |
		//REPOSITORY_PROJECTS='repository_projects' |
		//SECURITY_EVENTS='security_events' |
		//STATUSES='statuses'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ACTIONS='actions'
		public EnumLiteralDeclaration getACTIONSEnumLiteralDeclaration_0() { return cACTIONSEnumLiteralDeclaration_0; }
		
		//'actions'
		public Keyword getACTIONSActionsKeyword_0_0() { return cACTIONSActionsKeyword_0_0; }
		
		//CHECKS='checks'
		public EnumLiteralDeclaration getCHECKSEnumLiteralDeclaration_1() { return cCHECKSEnumLiteralDeclaration_1; }
		
		//'checks'
		public Keyword getCHECKSChecksKeyword_1_0() { return cCHECKSChecksKeyword_1_0; }
		
		//CONTENTS='contents'
		public EnumLiteralDeclaration getCONTENTSEnumLiteralDeclaration_2() { return cCONTENTSEnumLiteralDeclaration_2; }
		
		//'contents'
		public Keyword getCONTENTSContentsKeyword_2_0() { return cCONTENTSContentsKeyword_2_0; }
		
		//DEPLOYMENTS='deployments'
		public EnumLiteralDeclaration getDEPLOYMENTSEnumLiteralDeclaration_3() { return cDEPLOYMENTSEnumLiteralDeclaration_3; }
		
		//'deployments'
		public Keyword getDEPLOYMENTSDeploymentsKeyword_3_0() { return cDEPLOYMENTSDeploymentsKeyword_3_0; }
		
		//DISCUSSIONS='discussions'
		public EnumLiteralDeclaration getDISCUSSIONSEnumLiteralDeclaration_4() { return cDISCUSSIONSEnumLiteralDeclaration_4; }
		
		//'discussions'
		public Keyword getDISCUSSIONSDiscussionsKeyword_4_0() { return cDISCUSSIONSDiscussionsKeyword_4_0; }
		
		//ID_TOKEN='id-token'
		public EnumLiteralDeclaration getID_TOKENEnumLiteralDeclaration_5() { return cID_TOKENEnumLiteralDeclaration_5; }
		
		//'id-token'
		public Keyword getID_TOKENIdTokenKeyword_5_0() { return cID_TOKENIdTokenKeyword_5_0; }
		
		//ISSUES='issues'
		public EnumLiteralDeclaration getISSUESEnumLiteralDeclaration_6() { return cISSUESEnumLiteralDeclaration_6; }
		
		//'issues'
		public Keyword getISSUESIssuesKeyword_6_0() { return cISSUESIssuesKeyword_6_0; }
		
		//PACKAGES='packages'
		public EnumLiteralDeclaration getPACKAGESEnumLiteralDeclaration_7() { return cPACKAGESEnumLiteralDeclaration_7; }
		
		//'packages'
		public Keyword getPACKAGESPackagesKeyword_7_0() { return cPACKAGESPackagesKeyword_7_0; }
		
		//PAGES='pages'
		public EnumLiteralDeclaration getPAGESEnumLiteralDeclaration_8() { return cPAGESEnumLiteralDeclaration_8; }
		
		//'pages'
		public Keyword getPAGESPagesKeyword_8_0() { return cPAGESPagesKeyword_8_0; }
		
		//PULL_REQUESTS='pull_requests'
		public EnumLiteralDeclaration getPULL_REQUESTSEnumLiteralDeclaration_9() { return cPULL_REQUESTSEnumLiteralDeclaration_9; }
		
		//'pull_requests'
		public Keyword getPULL_REQUESTSPull_requestsKeyword_9_0() { return cPULL_REQUESTSPull_requestsKeyword_9_0; }
		
		//REPOSITORY_PROJECTS='repository_projects'
		public EnumLiteralDeclaration getREPOSITORY_PROJECTSEnumLiteralDeclaration_10() { return cREPOSITORY_PROJECTSEnumLiteralDeclaration_10; }
		
		//'repository_projects'
		public Keyword getREPOSITORY_PROJECTSRepository_projectsKeyword_10_0() { return cREPOSITORY_PROJECTSRepository_projectsKeyword_10_0; }
		
		//SECURITY_EVENTS='security_events'
		public EnumLiteralDeclaration getSECURITY_EVENTSEnumLiteralDeclaration_11() { return cSECURITY_EVENTSEnumLiteralDeclaration_11; }
		
		//'security_events'
		public Keyword getSECURITY_EVENTSSecurity_eventsKeyword_11_0() { return cSECURITY_EVENTSSecurity_eventsKeyword_11_0; }
		
		//STATUSES='statuses'
		public EnumLiteralDeclaration getSTATUSESEnumLiteralDeclaration_12() { return cSTATUSESEnumLiteralDeclaration_12; }
		
		//'statuses'
		public Keyword getSTATUSESStatusesKeyword_12_0() { return cSTATUSESStatusesKeyword_12_0; }
	}
	public class PERMISSION_VALUEElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.PERMISSION_VALUE");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cREADEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cREADReadKeyword_0_0 = (Keyword)cREADEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cWRITEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cWRITEWriteKeyword_1_0 = (Keyword)cWRITEEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cNONEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cNONENoneKeyword_2_0 = (Keyword)cNONEEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum PERMISSION_VALUE returns GHA::PERMISSIONS:
		//    READ='read' |
		//    WRITE='write' |
		//    NONE='none'
		//;
		public EnumRule getRule() { return rule; }
		
		//READ='read' |
		//WRITE='write' |
		//NONE='none'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//READ='read'
		public EnumLiteralDeclaration getREADEnumLiteralDeclaration_0() { return cREADEnumLiteralDeclaration_0; }
		
		//'read'
		public Keyword getREADReadKeyword_0_0() { return cREADReadKeyword_0_0; }
		
		//WRITE='write'
		public EnumLiteralDeclaration getWRITEEnumLiteralDeclaration_1() { return cWRITEEnumLiteralDeclaration_1; }
		
		//'write'
		public Keyword getWRITEWriteKeyword_1_0() { return cWRITEWriteKeyword_1_0; }
		
		//NONE='none'
		public EnumLiteralDeclaration getNONEEnumLiteralDeclaration_2() { return cNONEEnumLiteralDeclaration_2; }
		
		//'none'
		public Keyword getNONENoneKeyword_2_0() { return cNONENoneKeyword_2_0; }
	}
	
	private final WorkflowElements pWorkflow;
	private final ExpressionElements pExpression;
	private final ConcatElements pConcat;
	private final ConcatExpressionElements pConcatExpression;
	private final BracketedExpressionElements pBracketedExpression;
	private final InsideBracketsExpressionElements pInsideBracketsExpression;
	private final UnbracketedLiteralElements pUnbracketedLiteral;
	private final StringLiteralElements pStringLiteral;
	private final IntegerLiteralElements pIntegerLiteral;
	private final DoubleLiteralElements pDoubleLiteral;
	private final BooleanLiteralElements pBooleanLiteral;
	private final OrElements pOr;
	private final AndElements pAnd;
	private final EqualityElements pEquality;
	private final ComparisonElements pComparison;
	private final UnaryOpElements pUnaryOp;
	private final NotElements pNot;
	private final BlankElements pBlank;
	private final VariableDereferenceElements pVariableDereference;
	private final PrimaryElements pPrimary;
	private final AtomicElements pAtomic;
	private final CallExpressionElements pCallExpression;
	private final ContainsElements pContains;
	private final StartsWithElements pStartsWith;
	private final EndsWithElements pEndsWith;
	private final FormatElements pFormat;
	private final JoinElements pJoin;
	private final ToJSONElements pToJSON;
	private final FromJSONElements pFromJSON;
	private final HashFilesElements pHashFiles;
	private final SuccessElements pSuccess;
	private final AlwaysElements pAlways;
	private final CancelledElements pCancelled;
	private final FailureElements pFailure;
	private final COMPARISON_OPElements eCOMPARISON_OP;
	private final EQUALITY_OPElements eEQUALITY_OP;
	private final CONTEXTElements eCONTEXT;
	private final TYPEElements eTYPE;
	private final WEBHOOK_ACTIVITY_TYPEElements eWEBHOOK_ACTIVITY_TYPE;
	private final EVENTElements eEVENT;
	private final PERMISSION_SCOPEElements ePERMISSION_SCOPE;
	private final PERMISSION_VALUEElements ePERMISSION_VALUE;
	private final YAMLIDElements pYAMLID;
	private final YAMLStringElements pYAMLString;
	private final TerminalRule tDOUBLE;
	private final TerminalRule tBOOLEAN;
	private final TerminalRule tUNQUOTED_STRING;
	private final TerminalRule tUNQUOTED_STRING_CHARS;
	private final TerminalRule tUNQUOTED_STRING_BEGIN_CHARS;
	private final TerminalRule tBEGIN;
	private final TerminalRule tEND;
	private final TerminalRule tNEWLINE;
	private final TerminalRule tWS;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public GitHubActionsGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pWorkflow = new WorkflowElements();
		this.pExpression = new ExpressionElements();
		this.pConcat = new ConcatElements();
		this.pConcatExpression = new ConcatExpressionElements();
		this.pBracketedExpression = new BracketedExpressionElements();
		this.pInsideBracketsExpression = new InsideBracketsExpressionElements();
		this.pUnbracketedLiteral = new UnbracketedLiteralElements();
		this.pStringLiteral = new StringLiteralElements();
		this.pIntegerLiteral = new IntegerLiteralElements();
		this.pDoubleLiteral = new DoubleLiteralElements();
		this.pBooleanLiteral = new BooleanLiteralElements();
		this.pOr = new OrElements();
		this.pAnd = new AndElements();
		this.pEquality = new EqualityElements();
		this.pComparison = new ComparisonElements();
		this.pUnaryOp = new UnaryOpElements();
		this.pNot = new NotElements();
		this.pBlank = new BlankElements();
		this.pVariableDereference = new VariableDereferenceElements();
		this.pPrimary = new PrimaryElements();
		this.pAtomic = new AtomicElements();
		this.pCallExpression = new CallExpressionElements();
		this.pContains = new ContainsElements();
		this.pStartsWith = new StartsWithElements();
		this.pEndsWith = new EndsWithElements();
		this.pFormat = new FormatElements();
		this.pJoin = new JoinElements();
		this.pToJSON = new ToJSONElements();
		this.pFromJSON = new FromJSONElements();
		this.pHashFiles = new HashFilesElements();
		this.pSuccess = new SuccessElements();
		this.pAlways = new AlwaysElements();
		this.pCancelled = new CancelledElements();
		this.pFailure = new FailureElements();
		this.eCOMPARISON_OP = new COMPARISON_OPElements();
		this.eEQUALITY_OP = new EQUALITY_OPElements();
		this.eCONTEXT = new CONTEXTElements();
		this.eTYPE = new TYPEElements();
		this.eWEBHOOK_ACTIVITY_TYPE = new WEBHOOK_ACTIVITY_TYPEElements();
		this.eEVENT = new EVENTElements();
		this.ePERMISSION_SCOPE = new PERMISSION_SCOPEElements();
		this.ePERMISSION_VALUE = new PERMISSION_VALUEElements();
		this.pYAMLID = new YAMLIDElements();
		this.pYAMLString = new YAMLStringElements();
		this.tDOUBLE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.DOUBLE");
		this.tBOOLEAN = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.BOOLEAN");
		this.tUNQUOTED_STRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.UNQUOTED_STRING");
		this.tUNQUOTED_STRING_CHARS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.UNQUOTED_STRING_CHARS");
		this.tUNQUOTED_STRING_BEGIN_CHARS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.UNQUOTED_STRING_BEGIN_CHARS");
		this.tBEGIN = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.BEGIN");
		this.tEND = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.END");
		this.tNEWLINE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.NEWLINE");
		this.tWS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "d.fe.up.pt.cicd.gha.dsl.GitHubActions.WS");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("d.fe.up.pt.cicd.gha.dsl.GitHubActions".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Workflow returns GHA::Workflow:
	//    (WS? NEWLINE)*
	//    (
	//        ('name' ':' WS? name=Expression NEWLINE (WS? NEWLINE)*)? &
	//        ('run-name' ':' WS? runName=Expression)? /* &
	//        ('on' ':' WS? (
	//            (triggers+=SimpleTrigger NEWLINE) |
	//            ('[' WS? triggers+=SimpleTrigger ( WS? ',' WS? triggers+=SimpleTrigger)* WS? ']' NEWLINE) |
	//            (
	//                NEWLINE
	//                BEGIN
	//                ('-' triggers+=SimpleTrigger NEWLINE)+
	//                END
	//            ) |
	//            triggers+=OptionedTrigger+
	//        )) &
	//        ('permissions' ':' NEWLINE BEGIN permissions+=Permission+ END)? &
	//        ('env' ':' NEWLINE BEGIN environmentVariables+=VariableAssignment+ END)? &
	//        ('defaults' ':' NEWLINE BEGIN defaults=Defaults END)? &
	//        ('concurrency' ':' NEWLINE BEGIN concurrencyGroup=ConcurrencyGroup END)? &
	//        ('jobs' ':' NEWLINE BEGIN jobs+=Job+ END)
	//        *
	//        */
	//    )
	//;
	public WorkflowElements getWorkflowAccess() {
		return pWorkflow;
	}
	
	public ParserRule getWorkflowRule() {
		return getWorkflowAccess().getRule();
	}
	
	///*
	//Job returns GHA::Job:
	//    ScriptJob | ReuseWorkflowJob
	//;
	//ScriptJob returns GHA::ScriptJob:
	//    name=YAMLID ':'
	//        NEWLINE+
	//        BEGIN
	//        ('name' ':' jobName=Expression NEWLINE+)? &
	//        ('permissions' ':' NEWLINE+ BEGIN permissions+=Permission+ END NEWLINE*)? &
	//        ('needs' ':'
	//            (dependsOn+=[GHA::Job] NEWLINE+) |
	//            ('[' dependsOn+=[GHA::Job] (',' dependsOn+=[GHA::Job])* ']' NEWLINE+) |
	//            (
	//                NEWLINE+
	//                BEGIN
	//                ('-' dependsOn+=[GHA::Job] NEWLINE+)+
	//                END
	//                NEWLINE*
	//        ))? &
	//        ifCondition=IfStatement? &
	//        ('runs-on' ':' agent=Agent) &
	//        ('environment' ':' stagingEnvironment=StagingEnvironment)? &
	//        ('concurrency' ':' NEWLINE+ BEGIN concurrencyGroup=ConcurrencyGroup END NEWLINE*)? &
	//        ('env' ':' NEWLINE+ BEGIN environmentVariables+=VariableAssignment+ END NEWLINE*)? &
	//        ('defaults' ':' NEWLINE+ BEGIN defaults=Defaults END NEWLINE*)? &
	//        ('steps' ':' NEWLINE+ BEGIN steps+=Step+ END NEWLINE*) &
	//        ('strategy' ':' NEWLINE+ BEGIN strategy=Strategy END NEWLINE*)? &
	//        ('container' ':' container=Container)? &
	//        ('services' ':' NEWLINE+ BEGIN services+=Service+ END NEWLINE*)? &
	//        ('continue-on-error' ':' continueOnError=Expression NEWLINE+)? &
	//        ('timeout-minutes' ':' timeoutMinutes=Expression NEWLINE+)?
	//        END
	//        NEWLINE*
	//;
	//ReuseWorkflowJob returns GHA::ReuseWorkflowJob:
	//    name=YAMLID ':'
	//        NEWLINE+
	//        BEGIN
	//        ('name' ':' jobName=Expression  NEWLINE+)? &
	//        ('permissions' ':' NEWLINE+ BEGIN permissions+=Permission+ END NEWLINE*)? &
	//        ('needs' ':'
	//            (dependsOn+=[GHA::Job] NEWLINE+) |
	//            ('[' dependsOn+=[GHA::Job] (',' dependsOn+=[GHA::Job])* ']' NEWLINE+) |
	//            (
	//                NEWLINE+
	//                BEGIN
	//                ('-' dependsOn+=[GHA::Job] NEWLINE+)+
	//                END
	//                NEWLINE*
	//            )
	//        )? &
	//        ifCondition=IfStatement? &
	//        ('runs-on' ':' agent=Agent) &
	//        ('environment' ':' stagingEnvironment=StagingEnvironment)? &
	//        ('concurrency' ':' NEWLINE+ BEGIN concurrencyGroup=ConcurrencyGroup END NEWLINE*)? &
	//        ('env' ':' NEWLINE+ BEGIN environmentVariables+=VariableAssignment+ END NEWLINE*)? &
	//        ('defaults' ':' NEWLINE+ BEGIN defaults=Defaults END NEWLINE*)? &
	//        ('strategy' ':' NEWLINE+ BEGIN strategy=Strategy END NEWLINE*)? &
	//        ('container' ':' container=Container)? &
	//        ('services' ':' NEWLINE+ BEGIN services+=Service+ END NEWLINE*)? &
	//        ('uses' ':' workflowPath=Expression NEWLINE+)? &
	//        ('with' ':' NEWLINE+ BEGIN args+=VariableAssignment+ END NEWLINE*)? &
	//        ('secrets' ':' ((inheritSecrets?='inherit' NEWLINE+) | (NEWLINE+ BEGIN secrets+=VariableAssignment+ END NEWLINE*)))? &
	//        ('continue-on-error' ':' continueOnError=Expression NEWLINE+)? &
	//        ('timeout-minutes' ':' timeoutMinutes=Expression NEWLINE+)?
	//        END
	//        NEWLINE*
	//;
	//Agent returns GHA::Agent:
	//    (
	//        (labels+=Expression NEWLINE+) |
	//        ('[' labels+=Expression (',' labels+=Expression)* ']' NEWLINE+) |
	//        (
	//            NEWLINE+
	//            BEGIN
	//            ('-' labels+=Expression NEWLINE+)+
	//            END
	//            NEWLINE*
	//        )
	//    ) |
	//    (
	//        NEWLINE+
	//        BEGIN
	//        (
	//            (
	//                'labels' ':'
	//                    (labels+=Expression NEWLINE+) |
	//                    ('[' labels+=Expression (',' labels+=Expression)* ']' NEWLINE+) |
	//                    (
	//                        NEWLINE+
	//                        BEGIN
	//                        ('-' labels+=Expression NEWLINE+)+
	//                        END
	//                        NEWLINE*
	//                    )
	//            )
	//            (
	//                'group' ':' group=Expression NEWLINE+
	//            )?
	//        )|
	//        (
	//            (
	//                'group' ':' group=Expression NEWLINE+
	//            )
	//            (
	//                'labels' ':'
	//                    (labels+=Expression NEWLINE+) |
	//                    ('[' labels+=Expression (',' labels+=Expression)* ']' NEWLINE+) |
	//                    (
	//                        NEWLINE+
	//                        BEGIN
	//                        ('-' labels+=Expression NEWLINE+)+
	//                        END
	//                        NEWLINE*
	//                    )
	//            )?
	//        )
	//        END
	//        NEWLINE*
	//    )
	//;
	//Step returns GHA::Step:
	//    '-' BEGIN (Command | Package) END
	//;
	//Command returns GHA::Command:
	//    ('id' ':' id=STRING NEWLINE+)? &
	//    ifCondition=IfStatement? &
	//    ('name' ':' name=Expression NEWLINE+)? &
	//    ('shell' ':' shell=Expression NEWLINE+)? &
	//    ('working-directory' ':' workingDirectory=Expression NEWLINE+)? &
	//    ('env' ':' NEWLINE+ BEGIN environmentVariables+=VariableAssignment+ END NEWLINE*)? &
	//    ('continue-on-error' ':' continueOnError=Expression NEWLINE+)? &
	//    ('timeout-minutes' ':' timeoutMinutes=Expression NEWLINE+)?
	//    ('run' ':' command=Expression NEWLINE+)
	//;
	//Package returns GHA::Package:
	//    ('id' ':' id=STRING NEWLINE+)? &
	//    ifCondition=IfStatement? &
	//    ('name' ':' name=Expression NEWLINE+)? &
	//    ('shell' ':' shell=Expression NEWLINE+)? &
	//    ('working-directory' ':' workingDirectory=Expression NEWLINE+)? &
	//    ('env' ':' NEWLINE+ BEGIN environmentVariables+=VariableAssignment+ END NEWLINE)? &
	//    ('continue-on-error' ':' continueOnError=Expression NEWLINE+)? &
	//    ('timeout-minutes' ':' timeoutMinutes=Expression NEWLINE+)?
	//    ('uses' ':' uses=Expression NEWLINE+) &
	//    ('with' ':'
	//        NEWLINE+
	//        BEGIN
	//        (
	//            ('entrypoint' ':' entrypoint=Expression NEWLINE+) &
	//            ('args' ':' containerArgs=Expression NEWLINE+)?
	//        ) |
	//        (
	//            args+=VariableAssignment+
	//        )
	//        END
	//        NEWLINE*
	//    )?
	//;
	//IfStatement returns GHA::Expression:
	//    'if' ':' Expression NEWLINE+
	//;
	//ConcurrencyGroup returns GHA::ConcurrencyGroup:
	//    ('group' ':' name=Expression NEWLINE+) &
	//    ('cancel-in-progress' ':' cancelInProgress=Expression NEWLINE+)?
	//;
	//SimpleTrigger returns GHA::Trigger:
	//    (
	//        SimpleWorkflowDispatchTrigger |
	//        SimpleWorkflowCallTrigger |
	//        SimplePushTriggerTrigger |
	//        SimplePullRequestTrigger |
	//        SimpleStandardEventTrigger
	//    )
	//    NEWLINE+
	//;
	//SimplePullRequestTrigger returns GHA::PullRequestTrigger:
	//    {GHA::PullRequestTrigger} 'pull_request' | {GHA::PullRequestTrigger} 'pull_request_target'
	//;
	//SimplePushTriggerTrigger returns GHA::PushTrigger:
	//    {GHA::PushTrigger} 'push'
	//;
	//SimpleWorkflowCallTrigger returns GHA::WorkflowCallTrigger:
	//    {GHA::WorkflowCallTrigger} 'workflow_call'
	//;
	//SimpleWorkflowDispatchTrigger returns GHA::WorkflowDispatchTrigger:
	//    {GHA::WorkflowDispatchTrigger} 'workflow_dispatch'
	//;
	//SimpleStandardEventTrigger returns GHA::StandardEventTrigger:
	//    event=EVENT
	//;
	//OptionedTrigger returns GHA::Trigger:
	//    NEWLINE+
	//    BEGIN
	//    (
	//        OptionedPullRequestTrigger |
	//        OptionedPushTrigger |
	//        OptionedScheduleTrigger |
	//        OptionedStandardEventTrigger |
	//        OptionedWorkflowCallTrigger |
	//        OptionedWorkflowRunTrigger |
	//        OptionedWorkflowDispatchTrigger
	//    )
	//    END
	//    NEWLINE*
	//;
	//OptionedStandardEventTrigger returns GHA::StandardEventTrigger:
	//    event=EVENT ':'
	//        NEWLINE+
	//        BEGIN
	//        'types' ':'
	//            (eventTypes+=WEBHOOK_ACTIVITY_TYPE NEWLINE+) |
	//            ('[' eventTypes+=WEBHOOK_ACTIVITY_TYPE (',' eventTypes+=WEBHOOK_ACTIVITY_TYPE)* ']' NEWLINE+) |
	//            (
	//                NEWLINE+
	//                BEGIN
	//                ('-' eventTypes+=WEBHOOK_ACTIVITY_TYPE NEWLINE+)+
	//                END
	//                NEWLINE*
	//            )
	//        END
	//        NEWLINE*
	//;
	//OptionedWorkflowRunTrigger returns GHA::WorkflowRunTrigger:
	//    'workflow_run' ':'
	//        NEWLINE+
	//        BEGIN
	//        ('branches' | ignoreSpecifiedBranches?='branches-ignore')  ':'
	//            (branches+=Expression NEWLINE+) |
	//            ('[' branches+=Expression (',' branches+=Expression)* ']' NEWLINE+) |
	//            (
	//                NEWLINE+
	//                BEGIN
	//                ('-' branches+=Expression NEWLINE+)+
	//                END
	//                NEWLINE*
	//            )
	//        END
	//        NEWLINE*
	//;
	//OptionedPullRequestTrigger returns GHA::PullRequestTrigger:
	//    {GHA::PullRequestTrigger} ('pull_request' | 'pull_request_target') ':'
	//    (
	//        NEWLINE+
	//        BEGIN
	//        (
	//            (
	//                'types' ':'
	//                    (eventTypes+=WEBHOOK_ACTIVITY_TYPE NEWLINE+) |
	//                    ('[' eventTypes+=WEBHOOK_ACTIVITY_TYPE (',' eventTypes+=WEBHOOK_ACTIVITY_TYPE)* ']' NEWLINE+) |
	//                    (
	//                        NEWLINE+
	//                        BEGIN
	//                        ('-' eventTypes+=WEBHOOK_ACTIVITY_TYPE NEWLINE+)+
	//                        END
	//                        NEWLINE*
	//                    )
	//            )
	//            (
	//                ('branches' | ignoreSpecifiedBranches?='branches-ignore')  ':'
	//                    (branches+=Expression NEWLINE+) |
	//                    ('[' branches+=Expression (',' branches+=Expression)* ']' NEWLINE+) |
	//                    (
	//                        NEWLINE+
	//                        BEGIN
	//                        ('-' branches+=Expression NEWLINE+)+
	//                        END
	//                        NEWLINE*
	//                    )
	//            )? &
	//            (
	//                ('paths' | ignoreSpecifiedPaths?='paths-ignore')  ':'
	//                    (paths+=Expression NEWLINE+) |
	//                    ('[' paths+=Expression (',' paths+=Expression)* ']' NEWLINE+) |
	//                    (
	//                        NEWLINE+
	//                        BEGIN
	//                        ('-' paths+=Expression NEWLINE+)+
	//                        END
	//                        NEWLINE*
	//                    )
	//            )?
	//        ) |
	//        (
	//            (
	//                ('branches' | ignoreSpecifiedBranches?='branches-ignore')  ':'
	//                    (branches+=Expression NEWLINE+) |
	//                    ('[' branches+=Expression (',' branches+=Expression)* ']' NEWLINE+) |
	//                    (
	//                        NEWLINE+
	//                        BEGIN
	//                        ('-' branches+=Expression NEWLINE+)+
	//                        END
	//                        NEWLINE*
	//                    )
	//            )
	//            (
	//                'types' ':'
	//                    (eventTypes+=WEBHOOK_ACTIVITY_TYPE NEWLINE+) |
	//                    ('[' eventTypes+=WEBHOOK_ACTIVITY_TYPE (',' eventTypes+=WEBHOOK_ACTIVITY_TYPE)* ']' NEWLINE+) |
	//                    (
	//                        NEWLINE+
	//                        BEGIN
	//                        ('-' eventTypes+=WEBHOOK_ACTIVITY_TYPE NEWLINE+)+
	//                        END
	//                        NEWLINE*
	//                    )
	//            )? &
	//            (
	//                ('paths' | ignoreSpecifiedPaths?='paths-ignore')  ':'
	//                    (paths+=Expression NEWLINE+) |
	//                    ('[' paths+=Expression (',' paths+=Expression)* ']' NEWLINE+) |
	//                    (
	//                        NEWLINE+
	//                        BEGIN
	//                        ('-' paths+=Expression NEWLINE+)+
	//                        END
	//                        NEWLINE*
	//                    )
	//            )?
	//        ) |
	//        (
	//            (
	//                ('paths' | ignoreSpecifiedPaths?='paths-ignore')  ':'
	//                    (paths+=Expression NEWLINE+) |
	//                    ('[' paths+=Expression (',' paths+=Expression)* ']' NEWLINE+) |
	//                    (
	//                        NEWLINE+
	//                        BEGIN
	//                        ('-' paths+=Expression NEWLINE+)+
	//                        END
	//                        NEWLINE*
	//                    )
	//            )
	//            (
	//                'types' ':'
	//                    (eventTypes+=WEBHOOK_ACTIVITY_TYPE NEWLINE+) |
	//                    ('[' eventTypes+=WEBHOOK_ACTIVITY_TYPE (',' eventTypes+=WEBHOOK_ACTIVITY_TYPE)* ']' NEWLINE+) |
	//                    (
	//                        NEWLINE+
	//                        BEGIN
	//                        ('-' eventTypes+=WEBHOOK_ACTIVITY_TYPE NEWLINE+)+
	//                        END
	//                        NEWLINE*
	//                    )
	//            )? &
	//            (
	//                ('branches' | ignoreSpecifiedBranches?='branches-ignore')  ':'
	//                    (branches+=Expression NEWLINE+) |
	//                    ('[' branches+=Expression (',' branches+=Expression)* ']' NEWLINE+) |
	//                    (
	//                        NEWLINE+
	//                        BEGIN
	//                        ('-' branches+=Expression NEWLINE+)+
	//                        END
	//                        NEWLINE*
	//                    )
	//            )?
	//        )
	//        END
	//        NEWLINE*
	//    )
	//;
	//OptionedPushTrigger returns GHA::PushTrigger:
	//    {GHA::PushTrigger} 'push' ':'
	//    (
	//        NEWLINE+
	//        BEGIN
	//        (
	//            (
	//                ('branches' | ignoreSpecifiedBranches?='branches-ignore')  ':'
	//                    (branches+=Expression NEWLINE+) |
	//                    ('[' branches+=Expression (',' branches+=Expression)* ']' NEWLINE+) |
	//                    (
	//                        NEWLINE+
	//                        BEGIN
	//                        ('-' branches+=Expression NEWLINE+)+
	//                        END
	//                        NEWLINE*
	//                    )
	//            )
	//            (
	//                ('paths' | ignoreSpecifiedPaths?='paths-ignore')  ':'
	//                    (paths+=Expression NEWLINE+) |
	//                    ('[' paths+=Expression (',' paths+=Expression)* ']' NEWLINE+) |
	//                    (
	//                        NEWLINE+
	//                        BEGIN
	//                        ('-' paths+=Expression NEWLINE+)+
	//                        END
	//                        NEWLINE*
	//                    )
	//            )? &
	//            (
	//                ('tags' | ignoreSpecifiedTags?='tags-ignore')  ':'
	//                    (tags+=Expression NEWLINE+) |
	//                    ('[' tags+=Expression (',' tags+=Expression)* ']' NEWLINE+) |
	//                    (
	//                        NEWLINE+
	//                        BEGIN
	//                        ('-' tags+=Expression NEWLINE+)+
	//                        END
	//                        NEWLINE*
	//                    )
	//            )?
	//        ) |
	//        (
	//            (
	//                ('paths' | ignoreSpecifiedPaths?='paths-ignore')  ':'
	//                    (paths+=Expression NEWLINE+) |
	//                    ('[' paths+=Expression (',' paths+=Expression)* ']' NEWLINE+) |
	//                    (
	//                        NEWLINE+
	//                        BEGIN
	//                        ('-' paths+=Expression NEWLINE+)+
	//                        END
	//                        NEWLINE*
	//                    )
	//            )
	//            (
	//                ('branches' | ignoreSpecifiedBranches?='branches-ignore')  ':'
	//                    (branches+=Expression NEWLINE+) |
	//                    ('[' branches+=Expression (',' branches+=Expression)* ']' NEWLINE+) |
	//                    (
	//                        NEWLINE+
	//                        BEGIN
	//                        ('-' branches+=Expression NEWLINE+)+
	//                        END
	//                        NEWLINE*
	//                    )
	//            )? &
	//            (
	//                ('tags' | ignoreSpecifiedTags?='tags-ignore')  ':'
	//                    (tags+=Expression NEWLINE+) |
	//                    ('[' tags+=Expression (',' tags+=Expression)* ']' NEWLINE+) |
	//                    (
	//                        NEWLINE+
	//                        BEGIN
	//                        ('-' tags+=Expression NEWLINE+)+
	//                        END
	//                        NEWLINE*
	//                    )
	//            )?
	//        ) |
	//        (
	//            (
	//                ('tags' | ignoreSpecifiedTags?='tags-ignore')  ':'
	//                    (tags+=Expression NEWLINE+) |
	//                    ('[' tags+=Expression (',' tags+=Expression)* ']' NEWLINE+) |
	//                    (
	//                        NEWLINE+
	//                        BEGIN
	//                        ('-' tags+=Expression NEWLINE+)+
	//                        END
	//                        NEWLINE*
	//                    )
	//            )
	//            (
	//                ('branches' | ignoreSpecifiedBranches?='branches-ignore')  ':'
	//                    (branches+=Expression NEWLINE+) |
	//                    ('[' branches+=Expression (',' branches+=Expression)* ']' NEWLINE+) |
	//                    (
	//                        NEWLINE+
	//                        BEGIN
	//                        ('-' branches+=Expression NEWLINE+)+
	//                        END
	//                        NEWLINE*
	//                    )
	//            )? &
	//            (
	//                ('paths' | ignoreSpecifiedPaths?='paths-ignore')  ':'
	//                    (paths+=Expression NEWLINE+) |
	//                    ('[' paths+=Expression (',' paths+=Expression)* ']' NEWLINE+) |
	//                    (
	//                        NEWLINE+
	//                        BEGIN
	//                        ('-' paths+=Expression NEWLINE+)+
	//                        END
	//                        NEWLINE*
	//                    )
	//            )?
	//        )
	//        END
	//        NEWLINE*
	//    )
	//;
	//OptionedScheduleTrigger returns GHA::ScheduleTrigger:
	//    'schedule' ':'
	//    (
	//        NEWLINE+
	//        BEGIN
	//        (
	//            '-' 'cron' ':' crons+=Expression NEWLINE+
	//        )+
	//        END
	//        NEWLINE*
	//    )
	//;
	//OptionedWorkflowCallTrigger returns GHA::WorkflowCallTrigger:
	//    {GHA::WorkflowCallTrigger} 'workflow_call' ':'
	//    (
	//        NEWLINE+
	//        BEGIN
	//        (
	//            (
	//                'inputs' ':' NEWLINE+ BEGIN inputs+=Input+ END NEWLINE*
	//            )
	//            (
	//                'outputs' ':' NEWLINE+ BEGIN outputs+=Output+ END NEWLINE*
	//            )? &
	//            (
	//                'secrets' ':' NEWLINE+ BEGIN secrets+=Secret+ END NEWLINE*
	//            )?
	//        ) |
	//        (
	//            (
	//                'outputs' ':' NEWLINE+ BEGIN outputs+=Output+ END NEWLINE*
	//            )
	//            (
	//                'inputs' ':' NEWLINE+ BEGIN inputs+=Input+ END NEWLINE*
	//            )? &
	//            (
	//                'secrets' ':' NEWLINE+ BEGIN secrets+=Secret+ END NEWLINE*
	//            )?
	//        ) |
	//        (
	//            (
	//                'secrets' ':' NEWLINE+ BEGIN secrets+=Secret+ END NEWLINE*
	//            )
	//            (
	//                'inputs' ':' NEWLINE+ BEGIN inputs+=Input+ END NEWLINE*
	//            )? &
	//            (
	//                'outputs' ':' NEWLINE+ BEGIN outputs+=Output+ END NEWLINE*
	//            )?
	//        )
	//        END
	//        NEWLINE*
	//    )
	//;
	//OptionedWorkflowDispatchTrigger returns GHA::WorkflowDispatchTrigger:
	//    {GHA::WorkflowDispatchTrigger} 'workflow_dispatch' ':'
	//        NEWLINE+
	//        BEGIN
	//        ('inputs' ':' NEWLINE+ BEGIN inputs+=Input+ END NEWLINE*)
	//        END
	//        NEWLINE*
	//;
	//Input returns GHA::Input:
	//    id=YAMLID ':'
	//        NEWLINE+
	//        BEGIN
	//        ('description' ':' description=Expression NEWLINE+)? &
	//        ('default' ':' default=Expression NEWLINE+)? &
	//        ('required' ':' isRequired=Expression NEWLINE+)? &
	//        ('type' ':' type=TYPE NEWLINE+) &
	//        (
	//            'options' ':'
	//                (options+=STRING NEWLINE+) |
	//                ('[' options+=STRING (',' options+=STRING)* ']' NEWLINE+) |
	//                (
	//                    NEWLINE+
	//                    BEGIN
	//                    ('-' options+=STRING NEWLINE+)+
	//                    END
	//                    NEWLINE*
	//                )
	//        )
	//        END
	//        NEWLINE*
	//;
	//Output returns GHA::Output:
	//    id=YAMLID ':'
	//        NEWLINE+
	//        BEGIN
	//        ('description' ':' description=Expression NEWLINE+)? &
	//        ('value' ':' value=Expression NEWLINE+)
	//        END
	//        NEWLINE*
	//;
	//Secret returns GHA::Secret:
	//    id=YAMLID ':'
	//        NEWLINE+
	//        BEGIN
	//        (
	//            ('description' ':' description=Expression NEWLINE+) &
	//            ('required' ':' isRequired=Expression NEWLINE+)?
	//        ) |
	//        (
	//            ('required' ':' isRequired=Expression NEWLINE+) &
	//            ('description' ':' description=Expression NEWLINE+)?
	//        )
	//        END
	//        NEWLINE*
	//;
	//Permission returns GHA::Permission:
	//    key=PERMISSION_SCOPE ':' value=PERMISSION_VALUE NEWLINE+
	//;
	//Defaults returns GHA::Defaults:
	//    'run' ':'
	//        NEWLINE+
	//        BEGIN
	//        (
	//            ('shell' ':' shell=Expression NEWLINE+) &
	//            ('working-directory' ':' workingDirectory=Expression NEWLINE+)?
	//        )
	//        END
	//        NEWLINE*
	//;
	//StagingEnvironment returns GHA::StagingEnvironment:
	//    (name=Expression NEWLINE+) |
	//    (
	//        NEWLINE+
	//        BEGIN
	//        ('name' ':' name=Expression NEWLINE+)
	//        ('url' ':' url=Expression NEWLINE+)?
	//        END
	//        NEWLINE*
	//    )
	//;
	//Strategy returns GHA::Matrix:
	//    (
	//        'matrix' ':'
	//            NEWLINE+
	//            BEGIN
	//            ('includes' ':' NEWLINE+ BEGIN includes+=MatrixCombination END NEWLINE*)? &
	//            ('exludes' ':' NEWLINE+ BEGIN excludes+=MatrixCombination END NEWLINE*)? &
	//            (BEGIN axes+=MatrixAxis+ END NEWLINE*)
	//            END
	//            NEWLINE*
	//    ) &
	//    ('fail-fast' ':' failFast=Expression NEWLINE+)? &
	//    ('max-paralell' ':' maxParallel=Expression NEWLINE+)?
	//;
	//MatrixAxis returns GHA::MatrixAxis:
	//    name=YAMLID ':'
	//    (
	//        (cells+=Expression NEWLINE+) |
	//        ('[' cells+=Expression (',' cells+=Expression)* ']' NEWLINE+) |
	//        (
	//            NEWLINE+
	//            BEGIN
	//            ('-' cells+=Expression NEWLINE+)+
	//            END
	//            NEWLINE*
	//        )
	//    )
	//;
	//MatrixCombination returns GHA::MatrixCombination:
	//    '-' BEGIN entries+=VariableAssignment END
	//;
	//Container returns GHA::Container:
	//    (
	//        image=Expression NEWLINE+
	//    ) |
	//    (
	//        NEWLINE+
	//        BEGIN
	//        ('image' ':' image=Expression NEWLINE+) &
	//        ('env' ':' BEGIN environmentVariables+=VariableAssignment+ END NEWLINE*)? &
	//        ('ports' ':'
	//            (ports+=Expression NEWLINE+) |
	//            ('[' ports+=Expression (',' ports+=Expression)* ']' NEWLINE+) |
	//            (
	//                NEWLINE+
	//                BEGIN
	//                ('-' ports+=Expression NEWLINE+)+
	//                END
	//                NEWLINE*
	//            )
	//        )? &
	//        ('volumes' ':'
	//            (volumes+=Expression NEWLINE+) |
	//            ('[' volumes+=Expression (',' volumes+=Expression)* ']' NEWLINE+) |
	//            (
	//                NEWLINE*
	//                BEGIN
	//                ('-' volumes+=Expression NEWLINE*)+
	//                END
	//                NEWLINE*
	//            )
	//        )? &
	//        ('options' ':' options=Expression NEWLINE+)? &
	//        (
	//            'credentials' ':'
	//                NEWLINE+
	//                BEGIN
	//                ('username' ':' username=Expression NEWLINE+) &
	//                ('password' ':' password=Expression NEWLINE+)
	//                END
	//                NEWLINE*
	//        )?
	//        END
	//        NEWLINE*
	//    )
	//;
	//Service returns GHA::Service:
	//    key=YAMLID ':'
	//        NEWLINE+
	//        BEGIN
	//        value=Container
	//        END
	//        NEWLINE*
	//;
	//VariableAssignment returns GHA::VariableAssignment:
	//    key=YAMLID ':' value=Expression NEWLINE+
	//;
	//*
	//*/
	//Expression returns GHA::Expression:
	//    Concat
	//;
	public ExpressionElements getExpressionAccess() {
		return pExpression;
	}
	
	public ParserRule getExpressionRule() {
		return getExpressionAccess().getRule();
	}
	
	//Concat returns GHA::Concat:
	//    expressions+=ConcatExpression (WS expressions+=ConcatExpression)*
	//;
	public ConcatElements getConcatAccess() {
		return pConcat;
	}
	
	public ParserRule getConcatRule() {
		return getConcatAccess().getRule();
	}
	
	//ConcatExpression returns GHA::Expression:
	//    BracketedExpression | UnbracketedLiteral
	//;
	public ConcatExpressionElements getConcatExpressionAccess() {
		return pConcatExpression;
	}
	
	public ParserRule getConcatExpressionRule() {
		return getConcatExpressionAccess().getRule();
	}
	
	//BracketedExpression returns GHA::Expression:
	//    '${{' WS? InsideBracketsExpression WS? '}}'
	//;
	public BracketedExpressionElements getBracketedExpressionAccess() {
		return pBracketedExpression;
	}
	
	public ParserRule getBracketedExpressionRule() {
		return getBracketedExpressionAccess().getRule();
	}
	
	//InsideBracketsExpression returns GHA::Expression:
	//    Or
	//;
	public InsideBracketsExpressionElements getInsideBracketsExpressionAccess() {
		return pInsideBracketsExpression;
	}
	
	public ParserRule getInsideBracketsExpressionRule() {
		return getInsideBracketsExpressionAccess().getRule();
	}
	
	//UnbracketedLiteral returns GHA::Literal:
	//    StringLiteral | IntegerLiteral | DoubleLiteral | BooleanLiteral
	//;
	public UnbracketedLiteralElements getUnbracketedLiteralAccess() {
		return pUnbracketedLiteral;
	}
	
	public ParserRule getUnbracketedLiteralRule() {
		return getUnbracketedLiteralAccess().getRule();
	}
	
	//StringLiteral returns GHA::StringLiteral:
	//    value=YAMLString
	//;
	public StringLiteralElements getStringLiteralAccess() {
		return pStringLiteral;
	}
	
	public ParserRule getStringLiteralRule() {
		return getStringLiteralAccess().getRule();
	}
	
	//IntegerLiteral returns GHA::IntegerLiteral:
	//    value=INT
	//;
	public IntegerLiteralElements getIntegerLiteralAccess() {
		return pIntegerLiteral;
	}
	
	public ParserRule getIntegerLiteralRule() {
		return getIntegerLiteralAccess().getRule();
	}
	
	//DoubleLiteral returns GHA::DoubleLiteral:
	//    value=DOUBLE
	//;
	public DoubleLiteralElements getDoubleLiteralAccess() {
		return pDoubleLiteral;
	}
	
	public ParserRule getDoubleLiteralRule() {
		return getDoubleLiteralAccess().getRule();
	}
	
	//BooleanLiteral returns GHA::BooleanLiteral:
	//    value?=BOOLEAN
	//;
	public BooleanLiteralElements getBooleanLiteralAccess() {
		return pBooleanLiteral;
	}
	
	public ParserRule getBooleanLiteralRule() {
		return getBooleanLiteralAccess().getRule();
	}
	
	//Or returns GHA::Expression:
	//    And ({GHA::Or.lhs=current} WS? '||' WS? rhs=And)*
	//;
	public OrElements getOrAccess() {
		return pOr;
	}
	
	public ParserRule getOrRule() {
		return getOrAccess().getRule();
	}
	
	//And returns GHA::Expression:
	//    Equality ({GHA::And.lhs=current} WS? '&&' WS? rhs=Equality )*
	//;
	public AndElements getAndAccess() {
		return pAnd;
	}
	
	public ParserRule getAndRule() {
		return getAndAccess().getRule();
	}
	
	//Equality returns GHA::Expression:
	//    Comparison ({GHA::Equality.lhs=current} WS? op=EQUALITY_OP WS? rhs=Comparison )*
	//;
	public EqualityElements getEqualityAccess() {
		return pEquality;
	}
	
	public ParserRule getEqualityRule() {
		return getEqualityAccess().getRule();
	}
	
	//Comparison returns GHA::Expression:
	//    UnaryOp ({GHA::Comparison.lhs=current} WS? op=COMPARISON_OP WS? rhs=UnaryOp )*
	//;
	public ComparisonElements getComparisonAccess() {
		return pComparison;
	}
	
	public ParserRule getComparisonRule() {
		return getComparisonAccess().getRule();
	}
	
	//UnaryOp returns GHA::Expression:
	//    Not | Blank
	//;
	public UnaryOpElements getUnaryOpAccess() {
		return pUnaryOp;
	}
	
	public ParserRule getUnaryOpRule() {
		return getUnaryOpAccess().getRule();
	}
	
	//Not returns GHA::Not:
	//    '!' childExpr=VariableDereference
	//;
	public NotElements getNotAccess() {
		return pNot;
	}
	
	public ParserRule getNotRule() {
		return getNotAccess().getRule();
	}
	
	//Blank returns GHA::Expression:
	//    VariableDereference
	//;
	public BlankElements getBlankAccess() {
		return pBlank;
	}
	
	public ParserRule getBlankRule() {
		return getBlankAccess().getRule();
	}
	
	//VariableDereference returns GHA::Expression:
	//    Primary ({GHA::VariableDereference.variable=current} (('.' property=ID) | ('[' WS? ('"' property=ID '"') | ("'" property=ID '"') WS? ']')))*
	//;
	public VariableDereferenceElements getVariableDereferenceAccess() {
		return pVariableDereference;
	}
	
	public ParserRule getVariableDereferenceRule() {
		return getVariableDereferenceAccess().getRule();
	}
	
	//Primary returns GHA::Expression:
	//    ('(' WS? InsideBracketsExpression WS? ')') | CallExpression | Atomic
	//;
	public PrimaryElements getPrimaryAccess() {
		return pPrimary;
	}
	
	public ParserRule getPrimaryRule() {
		return getPrimaryAccess().getRule();
	}
	
	//Atomic returns GHA::Value:
	//    ({GHA::GitHubContext} context=CONTEXT) |
	//    ({GHA::Variable} name=ID) |
	//    ({GHA::IntegerLiteral} value=INT) |
	//    ({GHA::DoubleLiteral} value=DOUBLE) |
	//    ({GHA::BooleanLiteral} value=BOOLEAN) |
	//    ({GHA::StringLiteral} value=STRING)
	//;
	public AtomicElements getAtomicAccess() {
		return pAtomic;
	}
	
	public ParserRule getAtomicRule() {
		return getAtomicAccess().getRule();
	}
	
	//CallExpression returns GHA::BuiltInFunctionCall:
	//    Contains |
	//    StartsWith |
	//    EndsWith |
	//    Format |
	//    Join |
	//    ToJSON |
	//    FromJSON |
	//    HashFiles |
	//    Success |
	//    Always |
	//    Failure |
	//    Cancelled
	//;
	public CallExpressionElements getCallExpressionAccess() {
		return pCallExpression;
	}
	
	public ParserRule getCallExpressionRule() {
		return getCallExpressionAccess().getRule();
	}
	
	//Contains returns GHA::Contains:
	//    'contains' '(' WS? search=InsideBracketsExpression WS? ',' WS? item=InsideBracketsExpression WS? ')'
	//;
	public ContainsElements getContainsAccess() {
		return pContains;
	}
	
	public ParserRule getContainsRule() {
		return getContainsAccess().getRule();
	}
	
	//StartsWith returns GHA::StartsWith:
	//    'startsWith' '(' WS? searchString=InsideBracketsExpression WS? ',' WS? searchValue=InsideBracketsExpression WS? ')'
	//;
	public StartsWithElements getStartsWithAccess() {
		return pStartsWith;
	}
	
	public ParserRule getStartsWithRule() {
		return getStartsWithAccess().getRule();
	}
	
	//EndsWith returns GHA::EndsWith:
	//    'endsWith' '(' WS? searchString=InsideBracketsExpression WS? ',' WS? searchValue=InsideBracketsExpression WS? ')'
	//;
	public EndsWithElements getEndsWithAccess() {
		return pEndsWith;
	}
	
	public ParserRule getEndsWithRule() {
		return getEndsWithAccess().getRule();
	}
	
	//Format returns GHA::Format:
	//    'format' '(' WS? string=InsideBracketsExpression (WS? ',' WS? replaceValues+=InsideBracketsExpression)* WS? ')'
	//;
	public FormatElements getFormatAccess() {
		return pFormat;
	}
	
	public ParserRule getFormatRule() {
		return getFormatAccess().getRule();
	}
	
	//Join returns GHA::Join:
	//    'join' '(' WS? array=InsideBracketsExpression (WS? ',' WS? sep=InsideBracketsExpression)? WS? ')'
	//;
	public JoinElements getJoinAccess() {
		return pJoin;
	}
	
	public ParserRule getJoinRule() {
		return getJoinAccess().getRule();
	}
	
	//ToJSON returns GHA::ToJSON:
	//    'toJSON' '(' WS? value=InsideBracketsExpression WS? ')'
	//;
	public ToJSONElements getToJSONAccess() {
		return pToJSON;
	}
	
	public ParserRule getToJSONRule() {
		return getToJSONAccess().getRule();
	}
	
	//FromJSON returns GHA::FromJSON:
	//    'fromJSON' '(' WS? value=InsideBracketsExpression WS? ')'
	//;
	public FromJSONElements getFromJSONAccess() {
		return pFromJSON;
	}
	
	public ParserRule getFromJSONRule() {
		return getFromJSONAccess().getRule();
	}
	
	//HashFiles returns GHA::HashFiles:
	//    'hashFiles' '(' WS? path=InsideBracketsExpression WS? ')'
	//;
	public HashFilesElements getHashFilesAccess() {
		return pHashFiles;
	}
	
	public ParserRule getHashFilesRule() {
		return getHashFilesAccess().getRule();
	}
	
	//Success returns GHA::Success:
	//    {GHA::Success} 'success' '(' WS? ')'
	//;
	public SuccessElements getSuccessAccess() {
		return pSuccess;
	}
	
	public ParserRule getSuccessRule() {
		return getSuccessAccess().getRule();
	}
	
	//Always returns GHA::Always:
	//    {GHA::Always} 'always' '(' WS? ')'
	//;
	public AlwaysElements getAlwaysAccess() {
		return pAlways;
	}
	
	public ParserRule getAlwaysRule() {
		return getAlwaysAccess().getRule();
	}
	
	//Cancelled returns GHA::Cancelled:
	//    {GHA::Cancelled} 'cancelled' '(' WS? ')'
	//;
	public CancelledElements getCancelledAccess() {
		return pCancelled;
	}
	
	public ParserRule getCancelledRule() {
		return getCancelledAccess().getRule();
	}
	
	//Failure returns GHA::Failure:
	//    {GHA::Failure} 'failure' '(' WS? ')'
	//;
	public FailureElements getFailureAccess() {
		return pFailure;
	}
	
	public ParserRule getFailureRule() {
		return getFailureAccess().getRule();
	}
	
	//enum COMPARISON_OP returns GHA::COMPARISON_OPS:
	//    GT='>' |
	//    GTE='>=' |
	//    LT='<' |
	//    LTE='<='
	//;
	public COMPARISON_OPElements getCOMPARISON_OPAccess() {
		return eCOMPARISON_OP;
	}
	
	public EnumRule getCOMPARISON_OPRule() {
		return getCOMPARISON_OPAccess().getRule();
	}
	
	//enum EQUALITY_OP returns GHA::EQUALITY_OPS:
	//    EQUALS='==' |
	//    NOT_EQUALS='!='
	//;
	public EQUALITY_OPElements getEQUALITY_OPAccess() {
		return eEQUALITY_OP;
	}
	
	public EnumRule getEQUALITY_OPRule() {
		return getEQUALITY_OPAccess().getRule();
	}
	
	//enum CONTEXT returns GHA::CONTEXTS:
	//    GITHUB='github' |
	//    ENV='env' |
	//    VARS='vars' |
	//    JOB='job' |
	//    JOBS='jobs' |
	//    STEPS='steps' |
	//    RUNNER='runner' |
	//    SECRETS='secrets' |
	//    STRATEGY='strategy' |
	//    MATRIX='matrix' |
	//    NEEDS='needs' |
	//    INPUTS='inputs'
	//;
	public CONTEXTElements getCONTEXTAccess() {
		return eCONTEXT;
	}
	
	public EnumRule getCONTEXTRule() {
		return getCONTEXTAccess().getRule();
	}
	
	//enum TYPE returns GHA::INPUT_TYPES:
	//    BOOLEAN='boolean' |
	//    NUMBER='number' |
	//    STRING='string' |
	//    ENVIRONMENT='environment' |
	//    CHOICE='choice'
	//;
	public TYPEElements getTYPEAccess() {
		return eTYPE;
	}
	
	public EnumRule getTYPERule() {
		return getTYPEAccess().getRule();
	}
	
	//enum WEBHOOK_ACTIVITY_TYPE returns GHA::WEBHOOK_ACTIVITY_TYPES:
	//    ASSIGNED='assigned' |
	//    AUTO_MERGE_DISABLED='auto_merge_disabled' |
	//    AUTO_MERGE_ENABLED='auto_merge_enabled' |
	//    CLOSED='closed' |
	//    CONVERTED_TO_DRAFT='converted_to_draft' |
	//    EDITED='edited' |
	//    LABELED='labeled' |
	//    LOCKED='locked' |
	//    OPENED='opened' |
	//    READY_FOR_REVIEW='ready_for_review' |
	//    REOPENED='reopened' |
	//    REVIEW_REQUEST_REMOVED='review_request_removed' |
	//    REVIEW_REQUESTED='review_requested' |
	//    SYNCHRONIZE='synchronize' |
	//    UNASSIGNED='unassigned' |
	//    UNLABELED='unlabeled' |
	//    UNLOCKED='unlocked' |
	//    CREATED='created' |
	//    DELETED='deleted'
	//;
	public WEBHOOK_ACTIVITY_TYPEElements getWEBHOOK_ACTIVITY_TYPEAccess() {
		return eWEBHOOK_ACTIVITY_TYPE;
	}
	
	public EnumRule getWEBHOOK_ACTIVITY_TYPERule() {
		return getWEBHOOK_ACTIVITY_TYPEAccess().getRule();
	}
	
	//enum EVENT returns GHA::EVENTS:
	//    BRANCH_PROTECTION_RULE='branch_protection_rule' |
	//    CHECK_RUN='check_run' |
	//    CHECK_SUITE='check_suite' |
	//    CREATE='create' |
	//    DELETE='delete' |
	//    DEPLOYMENT='deployment' |
	//    DEPLOYMENT_STATUS='deployment_status' |
	//    DISCUSSION='discussion' |
	//    FORK='fork' |
	//    GOLLUM='gollum' |
	//    ISSUES='issues' |
	//    LABEL='label' |
	//    MERGE_GROUP='merge_group' |
	//    MILESTONE='milestone' |
	//    PAGE_BUILD='page_build' |
	//    PROJECT='project' |
	//    PROJECT_CARD='project_card' |
	//    PROJECT_COLUMN='project_column' |
	//    PUBLIC='public' |
	//    PULL_REQUEST_REVIEW='pull_request_review' |
	//    PULL_REQUEST_REVIEW_COMMENT='pull_request_review_comment' |
	//    REGISTRY_PACKAGE='registry_package' |
	//    RELEASE='release' |
	//    REPOSITORY_DISPATCH='repository_dispatch' |
	//    WATCH='watch' |
	//    STATUS='status'
	//;
	public EVENTElements getEVENTAccess() {
		return eEVENT;
	}
	
	public EnumRule getEVENTRule() {
		return getEVENTAccess().getRule();
	}
	
	//enum PERMISSION_SCOPE returns GHA::PERMISSION_SCOPES:
	//    ACTIONS='actions' |
	//    CHECKS='checks' |
	//    CONTENTS='contents' |
	//    DEPLOYMENTS='deployments' |
	//    DISCUSSIONS='discussions' |
	//    ID_TOKEN='id-token' |
	//    ISSUES='issues' |
	//    PACKAGES='packages' |
	//    PAGES='pages' |
	//    PULL_REQUESTS='pull_requests' |
	//    REPOSITORY_PROJECTS='repository_projects' |
	//    SECURITY_EVENTS='security_events' |
	//    STATUSES='statuses'
	//;
	public PERMISSION_SCOPEElements getPERMISSION_SCOPEAccess() {
		return ePERMISSION_SCOPE;
	}
	
	public EnumRule getPERMISSION_SCOPERule() {
		return getPERMISSION_SCOPEAccess().getRule();
	}
	
	//enum PERMISSION_VALUE returns GHA::PERMISSIONS:
	//    READ='read' |
	//    WRITE='write' |
	//    NONE='none'
	//;
	public PERMISSION_VALUEElements getPERMISSION_VALUEAccess() {
		return ePERMISSION_VALUE;
	}
	
	public EnumRule getPERMISSION_VALUERule() {
		return getPERMISSION_VALUEAccess().getRule();
	}
	
	//YAMLID returns ecore::EString:
	//    ('"' ID '"') |
	//    ("'" ID "'") |
	//    ID
	//;
	public YAMLIDElements getYAMLIDAccess() {
		return pYAMLID;
	}
	
	public ParserRule getYAMLIDRule() {
		return getYAMLIDAccess().getRule();
	}
	
	//YAMLString returns ecore::EString:
	//    STRING |
	//    UNQUOTED_STRING
	//;
	public YAMLStringElements getYAMLStringAccess() {
		return pYAMLString;
	}
	
	public ParserRule getYAMLStringRule() {
		return getYAMLStringAccess().getRule();
	}
	
	//terminal DOUBLE returns ecore::EDoubleObject:
	//    INT '.' INT
	//;
	public TerminalRule getDOUBLERule() {
		return tDOUBLE;
	}
	
	//terminal BOOLEAN returns ecore::EBooleanObject:
	//    'true' | 'false'
	//;
	public TerminalRule getBOOLEANRule() {
		return tBOOLEAN;
	}
	
	//terminal UNQUOTED_STRING returns ecore::EString:
	//    UNQUOTED_STRING_BEGIN_CHARS UNQUOTED_STRING_CHARS*
	//;
	public TerminalRule getUNQUOTED_STRINGRule() {
		return tUNQUOTED_STRING;
	}
	
	//terminal fragment UNQUOTED_STRING_CHARS:
	//    'a'..'z'|'A'..'Z'|'_'|'0'..'9'|'@'|'`'|'~'
	//;
	public TerminalRule getUNQUOTED_STRING_CHARSRule() {
		return tUNQUOTED_STRING_CHARS;
	}
	
	//terminal fragment UNQUOTED_STRING_BEGIN_CHARS:
	//    'a'..'z'|'A'..'Z'|'_'|'@'|'`'|'~'
	//;
	public TerminalRule getUNQUOTED_STRING_BEGIN_CHARSRule() {
		return tUNQUOTED_STRING_BEGIN_CHARS;
	}
	
	//terminal BEGIN: 'synthetic:BEGIN';
	public TerminalRule getBEGINRule() {
		return tBEGIN;
	}
	
	//  // increase indentation
	//terminal END: 'synthetic:END';
	public TerminalRule getENDRule() {
		return tEND;
	}
	
	//      // decrease indentation
	//terminal NEWLINE: '\r'? '\n';
	public TerminalRule getNEWLINERule() {
		return tNEWLINE;
	}
	
	//@Override
	//terminal WS: (' '|'\t')+;
	public TerminalRule getWSRule() {
		return tWS;
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
