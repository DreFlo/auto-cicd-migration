/*
 * generated by Xtext 2.33.0
 */
package d.fe.up.pt.cicd.gha.dsl.formatting2

import com.google.inject.Inject
import d.fe.up.pt.cicd.gha.dsl.services.GitHubActionsGrammarAccess
import d.fe.up.pt.cicd.gha.metamodel.GHA.Defaults
import d.fe.up.pt.cicd.gha.metamodel.GHA.Workflow
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class GitHubActionsFormatter extends AbstractFormatter2 {
	
	@Inject extension GitHubActionsGrammarAccess

	def dispatch void format(Workflow workflow, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		workflow.name.format
		workflow.runName.format
		for (trigger : workflow.triggers) {
			trigger.format
		}
		for (permission : workflow.permissions) {
			permission.format
		}
		workflow.defaults.format
		for (variableAssignment : workflow.environmentVariables) {
			variableAssignment.format
		}
		workflow.concurrencyGroup.format
		for (job : workflow.jobs) {
			job.format
		}
	}

	def dispatch void format(Defaults defaults, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		defaults.shell.format
		defaults.workingDirectory.format
	}
	
	// TODO: implement for VariableAssignment, ConcurrencyGroup, Concat, Equality, Or, And, Not, Contains, StartsWith, EndsWith, Format, Join, ToJSON, FromJSON, HashFiles, VariableDereference, WorkflowRunTrigger, PullRequestTrigger, PushTrigger, ScheduleTrigger, WorkflowCallTrigger, WorkflowDispatchTrigger, Input, Output, Secret, Agent, Container, StagingEnvironment, Service, Matrix, ReuseWorkflowJob, ScriptJob, MatrixAxis, MatrixCombination, Command, Package
}
