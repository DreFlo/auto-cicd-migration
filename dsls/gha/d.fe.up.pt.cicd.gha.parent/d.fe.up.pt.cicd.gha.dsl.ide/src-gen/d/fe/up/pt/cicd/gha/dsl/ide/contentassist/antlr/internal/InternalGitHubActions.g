/*
 * generated by Xtext 2.33.0
 */
grammar InternalGitHubActions;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package d.fe.up.pt.cicd.gha.dsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package d.fe.up.pt.cicd.gha.dsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import d.fe.up.pt.cicd.gha.dsl.services.GitHubActionsGrammarAccess;

}
@parser::members {
	private GitHubActionsGrammarAccess grammarAccess;

	public void setGrammarAccess(GitHubActionsGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getOrParserRuleCall()); }
		ruleOr
		{ after(grammarAccess.getExpressionAccess().getOrParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOr
entryRuleOr
:
{ before(grammarAccess.getOrRule()); }
	 ruleOr
{ after(grammarAccess.getOrRule()); } 
	 EOF 
;

// Rule Or
ruleOr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrAccess().getGroup()); }
		(rule__Or__Group__0)
		{ after(grammarAccess.getOrAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnd
entryRuleAnd
:
{ before(grammarAccess.getAndRule()); }
	 ruleAnd
{ after(grammarAccess.getAndRule()); } 
	 EOF 
;

// Rule And
ruleAnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndAccess().getGroup()); }
		(rule__And__Group__0)
		{ after(grammarAccess.getAndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEquality
entryRuleEquality
:
{ before(grammarAccess.getEqualityRule()); }
	 ruleEquality
{ after(grammarAccess.getEqualityRule()); } 
	 EOF 
;

// Rule Equality
ruleEquality 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualityAccess().getGroup()); }
		(rule__Equality__Group__0)
		{ after(grammarAccess.getEqualityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparison
entryRuleComparison
:
{ before(grammarAccess.getComparisonRule()); }
	 ruleComparison
{ after(grammarAccess.getComparisonRule()); } 
	 EOF 
;

// Rule Comparison
ruleComparison 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparisonAccess().getGroup()); }
		(rule__Comparison__Group__0)
		{ after(grammarAccess.getComparisonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryOp
entryRuleUnaryOp
:
{ before(grammarAccess.getUnaryOpRule()); }
	 ruleUnaryOp
{ after(grammarAccess.getUnaryOpRule()); } 
	 EOF 
;

// Rule UnaryOp
ruleUnaryOp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryOpAccess().getAlternatives()); }
		(rule__UnaryOp__Alternatives)
		{ after(grammarAccess.getUnaryOpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNot
entryRuleNot
:
{ before(grammarAccess.getNotRule()); }
	 ruleNot
{ after(grammarAccess.getNotRule()); } 
	 EOF 
;

// Rule Not
ruleNot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNotAccess().getGroup()); }
		(rule__Not__Group__0)
		{ after(grammarAccess.getNotAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBlank
entryRuleBlank
:
{ before(grammarAccess.getBlankRule()); }
	 ruleBlank
{ after(grammarAccess.getBlankRule()); } 
	 EOF 
;

// Rule Blank
ruleBlank 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlankAccess().getVariableDereferenceParserRuleCall()); }
		ruleVariableDereference
		{ after(grammarAccess.getBlankAccess().getVariableDereferenceParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableDereference
entryRuleVariableDereference
:
{ before(grammarAccess.getVariableDereferenceRule()); }
	 ruleVariableDereference
{ after(grammarAccess.getVariableDereferenceRule()); } 
	 EOF 
;

// Rule VariableDereference
ruleVariableDereference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableDereferenceAccess().getGroup()); }
		(rule__VariableDereference__Group__0)
		{ after(grammarAccess.getVariableDereferenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimary
entryRulePrimary
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
		(rule__Primary__Alternatives)
		{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAtomic
entryRuleAtomic
:
{ before(grammarAccess.getAtomicRule()); }
	 ruleAtomic
{ after(grammarAccess.getAtomicRule()); } 
	 EOF 
;

// Rule Atomic
ruleAtomic 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAtomicAccess().getAlternatives()); }
		(rule__Atomic__Alternatives)
		{ after(grammarAccess.getAtomicAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCallExpression
entryRuleCallExpression
:
{ before(grammarAccess.getCallExpressionRule()); }
	 ruleCallExpression
{ after(grammarAccess.getCallExpressionRule()); } 
	 EOF 
;

// Rule CallExpression
ruleCallExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCallExpressionAccess().getAlternatives()); }
		(rule__CallExpression__Alternatives)
		{ after(grammarAccess.getCallExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContains
entryRuleContains
:
{ before(grammarAccess.getContainsRule()); }
	 ruleContains
{ after(grammarAccess.getContainsRule()); } 
	 EOF 
;

// Rule Contains
ruleContains 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContainsAccess().getGroup()); }
		(rule__Contains__Group__0)
		{ after(grammarAccess.getContainsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStartsWith
entryRuleStartsWith
:
{ before(grammarAccess.getStartsWithRule()); }
	 ruleStartsWith
{ after(grammarAccess.getStartsWithRule()); } 
	 EOF 
;

// Rule StartsWith
ruleStartsWith 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStartsWithAccess().getGroup()); }
		(rule__StartsWith__Group__0)
		{ after(grammarAccess.getStartsWithAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEndsWith
entryRuleEndsWith
:
{ before(grammarAccess.getEndsWithRule()); }
	 ruleEndsWith
{ after(grammarAccess.getEndsWithRule()); } 
	 EOF 
;

// Rule EndsWith
ruleEndsWith 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEndsWithAccess().getGroup()); }
		(rule__EndsWith__Group__0)
		{ after(grammarAccess.getEndsWithAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFormat
entryRuleFormat
:
{ before(grammarAccess.getFormatRule()); }
	 ruleFormat
{ after(grammarAccess.getFormatRule()); } 
	 EOF 
;

// Rule Format
ruleFormat 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFormatAccess().getGroup()); }
		(rule__Format__Group__0)
		{ after(grammarAccess.getFormatAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJoin
entryRuleJoin
:
{ before(grammarAccess.getJoinRule()); }
	 ruleJoin
{ after(grammarAccess.getJoinRule()); } 
	 EOF 
;

// Rule Join
ruleJoin 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJoinAccess().getGroup()); }
		(rule__Join__Group__0)
		{ after(grammarAccess.getJoinAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleToJSON
entryRuleToJSON
:
{ before(grammarAccess.getToJSONRule()); }
	 ruleToJSON
{ after(grammarAccess.getToJSONRule()); } 
	 EOF 
;

// Rule ToJSON
ruleToJSON 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getToJSONAccess().getGroup()); }
		(rule__ToJSON__Group__0)
		{ after(grammarAccess.getToJSONAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFromJSON
entryRuleFromJSON
:
{ before(grammarAccess.getFromJSONRule()); }
	 ruleFromJSON
{ after(grammarAccess.getFromJSONRule()); } 
	 EOF 
;

// Rule FromJSON
ruleFromJSON 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFromJSONAccess().getGroup()); }
		(rule__FromJSON__Group__0)
		{ after(grammarAccess.getFromJSONAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHashFiles
entryRuleHashFiles
:
{ before(grammarAccess.getHashFilesRule()); }
	 ruleHashFiles
{ after(grammarAccess.getHashFilesRule()); } 
	 EOF 
;

// Rule HashFiles
ruleHashFiles 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHashFilesAccess().getGroup()); }
		(rule__HashFiles__Group__0)
		{ after(grammarAccess.getHashFilesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSuccess
entryRuleSuccess
:
{ before(grammarAccess.getSuccessRule()); }
	 ruleSuccess
{ after(grammarAccess.getSuccessRule()); } 
	 EOF 
;

// Rule Success
ruleSuccess 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSuccessAccess().getGroup()); }
		(rule__Success__Group__0)
		{ after(grammarAccess.getSuccessAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAlways
entryRuleAlways
:
{ before(grammarAccess.getAlwaysRule()); }
	 ruleAlways
{ after(grammarAccess.getAlwaysRule()); } 
	 EOF 
;

// Rule Always
ruleAlways 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAlwaysAccess().getGroup()); }
		(rule__Always__Group__0)
		{ after(grammarAccess.getAlwaysAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCancelled
entryRuleCancelled
:
{ before(grammarAccess.getCancelledRule()); }
	 ruleCancelled
{ after(grammarAccess.getCancelledRule()); } 
	 EOF 
;

// Rule Cancelled
ruleCancelled 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCancelledAccess().getGroup()); }
		(rule__Cancelled__Group__0)
		{ after(grammarAccess.getCancelledAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFailure
entryRuleFailure
:
{ before(grammarAccess.getFailureRule()); }
	 ruleFailure
{ after(grammarAccess.getFailureRule()); } 
	 EOF 
;

// Rule Failure
ruleFailure 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFailureAccess().getGroup()); }
		(rule__Failure__Group__0)
		{ after(grammarAccess.getFailureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule COMPARISON_OP
ruleCOMPARISON_OP
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCOMPARISON_OPAccess().getAlternatives()); }
		(rule__COMPARISON_OP__Alternatives)
		{ after(grammarAccess.getCOMPARISON_OPAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule EQUALITY_OP
ruleEQUALITY_OP
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEQUALITY_OPAccess().getAlternatives()); }
		(rule__EQUALITY_OP__Alternatives)
		{ after(grammarAccess.getEQUALITY_OPAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule CONTEXT
ruleCONTEXT
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCONTEXTAccess().getAlternatives()); }
		(rule__CONTEXT__Alternatives)
		{ after(grammarAccess.getCONTEXTAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryOpAccess().getNotParserRuleCall_0()); }
		ruleNot
		{ after(grammarAccess.getUnaryOpAccess().getNotParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOpAccess().getBlankParserRuleCall_1()); }
		ruleBlank
		{ after(grammarAccess.getUnaryOpAccess().getBlankParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDereferenceAccess().getGroup_1_1_0()); }
		(rule__VariableDereference__Group_1_1_0__0)
		{ after(grammarAccess.getVariableDereferenceAccess().getGroup_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableDereferenceAccess().getGroup_1_1_1()); }
		(rule__VariableDereference__Group_1_1_1__0)
		{ after(grammarAccess.getVariableDereferenceAccess().getGroup_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_0()); }
		(rule__Primary__Group_0__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getCallExpressionParserRuleCall_1()); }
		ruleCallExpression
		{ after(grammarAccess.getPrimaryAccess().getCallExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getAtomicParserRuleCall_2()); }
		ruleAtomic
		{ after(grammarAccess.getPrimaryAccess().getAtomicParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_0()); }
		(rule__Atomic__Group_0__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_1()); }
		(rule__Atomic__Group_1__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_2()); }
		(rule__Atomic__Group_2__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_3()); }
		(rule__Atomic__Group_3__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_4()); }
		(rule__Atomic__Group_4__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_5()); }
		(rule__Atomic__Group_5__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCallExpressionAccess().getContainsParserRuleCall_0()); }
		ruleContains
		{ after(grammarAccess.getCallExpressionAccess().getContainsParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCallExpressionAccess().getStartsWithParserRuleCall_1()); }
		ruleStartsWith
		{ after(grammarAccess.getCallExpressionAccess().getStartsWithParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getCallExpressionAccess().getEndsWithParserRuleCall_2()); }
		ruleEndsWith
		{ after(grammarAccess.getCallExpressionAccess().getEndsWithParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getCallExpressionAccess().getFormatParserRuleCall_3()); }
		ruleFormat
		{ after(grammarAccess.getCallExpressionAccess().getFormatParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getCallExpressionAccess().getJoinParserRuleCall_4()); }
		ruleJoin
		{ after(grammarAccess.getCallExpressionAccess().getJoinParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getCallExpressionAccess().getToJSONParserRuleCall_5()); }
		ruleToJSON
		{ after(grammarAccess.getCallExpressionAccess().getToJSONParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getCallExpressionAccess().getFromJSONParserRuleCall_6()); }
		ruleFromJSON
		{ after(grammarAccess.getCallExpressionAccess().getFromJSONParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getCallExpressionAccess().getHashFilesParserRuleCall_7()); }
		ruleHashFiles
		{ after(grammarAccess.getCallExpressionAccess().getHashFilesParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getCallExpressionAccess().getSuccessParserRuleCall_8()); }
		ruleSuccess
		{ after(grammarAccess.getCallExpressionAccess().getSuccessParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getCallExpressionAccess().getAlwaysParserRuleCall_9()); }
		ruleAlways
		{ after(grammarAccess.getCallExpressionAccess().getAlwaysParserRuleCall_9()); }
	)
	|
	(
		{ before(grammarAccess.getCallExpressionAccess().getFailureParserRuleCall_10()); }
		ruleFailure
		{ after(grammarAccess.getCallExpressionAccess().getFailureParserRuleCall_10()); }
	)
	|
	(
		{ before(grammarAccess.getCallExpressionAccess().getCancelledParserRuleCall_11()); }
		ruleCancelled
		{ after(grammarAccess.getCallExpressionAccess().getCancelledParserRuleCall_11()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__COMPARISON_OP__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCOMPARISON_OPAccess().getGTEnumLiteralDeclaration_0()); }
		('>')
		{ after(grammarAccess.getCOMPARISON_OPAccess().getGTEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getCOMPARISON_OPAccess().getGTEEnumLiteralDeclaration_1()); }
		('>=')
		{ after(grammarAccess.getCOMPARISON_OPAccess().getGTEEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getCOMPARISON_OPAccess().getLTEnumLiteralDeclaration_2()); }
		('<')
		{ after(grammarAccess.getCOMPARISON_OPAccess().getLTEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getCOMPARISON_OPAccess().getLTEEnumLiteralDeclaration_3()); }
		('<=')
		{ after(grammarAccess.getCOMPARISON_OPAccess().getLTEEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EQUALITY_OP__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEQUALITY_OPAccess().getEQUALSEnumLiteralDeclaration_0()); }
		('==')
		{ after(grammarAccess.getEQUALITY_OPAccess().getEQUALSEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getEQUALITY_OPAccess().getNOT_EQUALSEnumLiteralDeclaration_1()); }
		('!=')
		{ after(grammarAccess.getEQUALITY_OPAccess().getNOT_EQUALSEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CONTEXT__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCONTEXTAccess().getGITHUBEnumLiteralDeclaration_0()); }
		('github')
		{ after(grammarAccess.getCONTEXTAccess().getGITHUBEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getCONTEXTAccess().getENVEnumLiteralDeclaration_1()); }
		('env')
		{ after(grammarAccess.getCONTEXTAccess().getENVEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getCONTEXTAccess().getVARSEnumLiteralDeclaration_2()); }
		('vars')
		{ after(grammarAccess.getCONTEXTAccess().getVARSEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getCONTEXTAccess().getJOBEnumLiteralDeclaration_3()); }
		('job')
		{ after(grammarAccess.getCONTEXTAccess().getJOBEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getCONTEXTAccess().getJOBSEnumLiteralDeclaration_4()); }
		('jobs')
		{ after(grammarAccess.getCONTEXTAccess().getJOBSEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getCONTEXTAccess().getSTEPSEnumLiteralDeclaration_5()); }
		('steps')
		{ after(grammarAccess.getCONTEXTAccess().getSTEPSEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getCONTEXTAccess().getRUNNEREnumLiteralDeclaration_6()); }
		('runner')
		{ after(grammarAccess.getCONTEXTAccess().getRUNNEREnumLiteralDeclaration_6()); }
	)
	|
	(
		{ before(grammarAccess.getCONTEXTAccess().getSECRETSEnumLiteralDeclaration_7()); }
		('secrets')
		{ after(grammarAccess.getCONTEXTAccess().getSECRETSEnumLiteralDeclaration_7()); }
	)
	|
	(
		{ before(grammarAccess.getCONTEXTAccess().getSTRATEGYEnumLiteralDeclaration_8()); }
		('strategy')
		{ after(grammarAccess.getCONTEXTAccess().getSTRATEGYEnumLiteralDeclaration_8()); }
	)
	|
	(
		{ before(grammarAccess.getCONTEXTAccess().getMATRIXEnumLiteralDeclaration_9()); }
		('matrix')
		{ after(grammarAccess.getCONTEXTAccess().getMATRIXEnumLiteralDeclaration_9()); }
	)
	|
	(
		{ before(grammarAccess.getCONTEXTAccess().getNEEDSEnumLiteralDeclaration_10()); }
		('needs')
		{ after(grammarAccess.getCONTEXTAccess().getNEEDSEnumLiteralDeclaration_10()); }
	)
	|
	(
		{ before(grammarAccess.getCONTEXTAccess().getINPUTSEnumLiteralDeclaration_11()); }
		('inputs')
		{ after(grammarAccess.getCONTEXTAccess().getINPUTSEnumLiteralDeclaration_11()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group__0__Impl
	rule__Or__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getAndParserRuleCall_0()); }
	ruleAnd
	{ after(grammarAccess.getOrAccess().getAndParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getGroup_1()); }
	(rule__Or__Group_1__0)*
	{ after(grammarAccess.getOrAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__0__Impl
	rule__Or__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getOrLhsAction_1_0()); }
	()
	{ after(grammarAccess.getOrAccess().getOrLhsAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__1__Impl
	rule__Or__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getVerticalLineVerticalLineKeyword_1_1()); }
	'||'
	{ after(grammarAccess.getOrAccess().getVerticalLineVerticalLineKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getRhsAssignment_1_2()); }
	(rule__Or__RhsAssignment_1_2)
	{ after(grammarAccess.getOrAccess().getRhsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__0__Impl
	rule__And__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getEqualityParserRuleCall_0()); }
	ruleEquality
	{ after(grammarAccess.getAndAccess().getEqualityParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getGroup_1()); }
	(rule__And__Group_1__0)*
	{ after(grammarAccess.getAndAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__0__Impl
	rule__And__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getAndLhsAction_1_0()); }
	()
	{ after(grammarAccess.getAndAccess().getAndLhsAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__1__Impl
	rule__And__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getAmpersandAmpersandKeyword_1_1()); }
	'&&'
	{ after(grammarAccess.getAndAccess().getAmpersandAmpersandKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getRhsAssignment_1_2()); }
	(rule__And__RhsAssignment_1_2)
	{ after(grammarAccess.getAndAccess().getRhsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equality__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group__0__Impl
	rule__Equality__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getComparisonParserRuleCall_0()); }
	ruleComparison
	{ after(grammarAccess.getEqualityAccess().getComparisonParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getGroup_1()); }
	(rule__Equality__Group_1__0)*
	{ after(grammarAccess.getEqualityAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equality__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1__0__Impl
	rule__Equality__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getEqualityLhsAction_1_0()); }
	()
	{ after(grammarAccess.getEqualityAccess().getEqualityLhsAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1__1__Impl
	rule__Equality__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getOpAssignment_1_1()); }
	(rule__Equality__OpAssignment_1_1)
	{ after(grammarAccess.getEqualityAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getRhsAssignment_1_2()); }
	(rule__Equality__RhsAssignment_1_2)
	{ after(grammarAccess.getEqualityAccess().getRhsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group__0__Impl
	rule__Comparison__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getUnaryOpParserRuleCall_0()); }
	ruleUnaryOp
	{ after(grammarAccess.getComparisonAccess().getUnaryOpParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getGroup_1()); }
	(rule__Comparison__Group_1__0)*
	{ after(grammarAccess.getComparisonAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__0__Impl
	rule__Comparison__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getComparisonLhsAction_1_0()); }
	()
	{ after(grammarAccess.getComparisonAccess().getComparisonLhsAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__1__Impl
	rule__Comparison__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getOpAssignment_1_1()); }
	(rule__Comparison__OpAssignment_1_1)
	{ after(grammarAccess.getComparisonAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getRhsAssignment_1_2()); }
	(rule__Comparison__RhsAssignment_1_2)
	{ after(grammarAccess.getComparisonAccess().getRhsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Not__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Not__Group__0__Impl
	rule__Not__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Not__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotAccess().getExclamationMarkKeyword_0()); }
	'!'
	{ after(grammarAccess.getNotAccess().getExclamationMarkKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Not__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Not__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Not__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotAccess().getChildExprAssignment_1()); }
	(rule__Not__ChildExprAssignment_1)
	{ after(grammarAccess.getNotAccess().getChildExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDereference__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDereference__Group__0__Impl
	rule__VariableDereference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDereferenceAccess().getPrimaryParserRuleCall_0()); }
	rulePrimary
	{ after(grammarAccess.getVariableDereferenceAccess().getPrimaryParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDereference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDereferenceAccess().getGroup_1()); }
	(rule__VariableDereference__Group_1__0)?
	{ after(grammarAccess.getVariableDereferenceAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDereference__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDereference__Group_1__0__Impl
	rule__VariableDereference__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDereferenceAccess().getDotOpLhsAction_1_0()); }
	()
	{ after(grammarAccess.getVariableDereferenceAccess().getDotOpLhsAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDereference__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDereferenceAccess().getAlternatives_1_1()); }
	(rule__VariableDereference__Alternatives_1_1)
	{ after(grammarAccess.getVariableDereferenceAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDereference__Group_1_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDereference__Group_1_1_0__0__Impl
	rule__VariableDereference__Group_1_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__Group_1_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDereferenceAccess().getFullStopKeyword_1_1_0_0()); }
	'.'
	{ after(grammarAccess.getVariableDereferenceAccess().getFullStopKeyword_1_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__Group_1_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDereference__Group_1_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__Group_1_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDereferenceAccess().getRhsAssignment_1_1_0_1()); }
	(rule__VariableDereference__RhsAssignment_1_1_0_1)
	{ after(grammarAccess.getVariableDereferenceAccess().getRhsAssignment_1_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDereference__Group_1_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDereference__Group_1_1_1__0__Impl
	rule__VariableDereference__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__Group_1_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDereferenceAccess().getLeftSquareBracketKeyword_1_1_1_0()); }
	'['
	{ after(grammarAccess.getVariableDereferenceAccess().getLeftSquareBracketKeyword_1_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__Group_1_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDereference__Group_1_1_1__1__Impl
	rule__VariableDereference__Group_1_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__Group_1_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDereferenceAccess().getRhsAssignment_1_1_1_1()); }
	(rule__VariableDereference__RhsAssignment_1_1_1_1)
	{ after(grammarAccess.getVariableDereferenceAccess().getRhsAssignment_1_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__Group_1_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDereference__Group_1_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__Group_1_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDereferenceAccess().getRightSquareBracketKeyword_1_1_1_2()); }
	']'
	{ after(grammarAccess.getVariableDereferenceAccess().getRightSquareBracketKeyword_1_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__0__Impl
	rule__Primary__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_0()); }
	'('
	{ after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__1__Impl
	rule__Primary__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getExpressionParserRuleCall_0_1()); }
	ruleExpression
	{ after(grammarAccess.getPrimaryAccess().getExpressionParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_2()); }
	')'
	{ after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_0__0__Impl
	rule__Atomic__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getGitHubContextAction_0_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getGitHubContextAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getContextAssignment_0_1()); }
	(rule__Atomic__ContextAssignment_0_1)
	{ after(grammarAccess.getAtomicAccess().getContextAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_1__0__Impl
	rule__Atomic__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getVariableReferenceAction_1_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getVariableReferenceAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getNameAssignment_1_1()); }
	(rule__Atomic__NameAssignment_1_1)
	{ after(grammarAccess.getAtomicAccess().getNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_2__0__Impl
	rule__Atomic__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getIntegerLiteralAction_2_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getIntegerLiteralAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_2_1()); }
	(rule__Atomic__ValueAssignment_2_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_3__0__Impl
	rule__Atomic__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getDoubleLiteralAction_3_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getDoubleLiteralAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_3_1()); }
	(rule__Atomic__ValueAssignment_3_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_4__0__Impl
	rule__Atomic__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getBooleanLiteralAction_4_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getBooleanLiteralAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_4_1()); }
	(rule__Atomic__ValueAssignment_4_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_5__0__Impl
	rule__Atomic__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getStringLiteralAction_5_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getStringLiteralAction_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_5_1()); }
	(rule__Atomic__ValueAssignment_5_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Contains__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contains__Group__0__Impl
	rule__Contains__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainsAccess().getContainsKeyword_0()); }
	'contains'
	{ after(grammarAccess.getContainsAccess().getContainsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contains__Group__1__Impl
	rule__Contains__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainsAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getContainsAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contains__Group__2__Impl
	rule__Contains__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainsAccess().getSearchAssignment_2()); }
	(rule__Contains__SearchAssignment_2)
	{ after(grammarAccess.getContainsAccess().getSearchAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contains__Group__3__Impl
	rule__Contains__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainsAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getContainsAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contains__Group__4__Impl
	rule__Contains__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainsAccess().getItemAssignment_4()); }
	(rule__Contains__ItemAssignment_4)
	{ after(grammarAccess.getContainsAccess().getItemAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contains__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainsAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getContainsAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StartsWith__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartsWith__Group__0__Impl
	rule__StartsWith__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StartsWith__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartsWithAccess().getStartsWithKeyword_0()); }
	'startsWith'
	{ after(grammarAccess.getStartsWithAccess().getStartsWithKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartsWith__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartsWith__Group__1__Impl
	rule__StartsWith__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StartsWith__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartsWithAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getStartsWithAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartsWith__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartsWith__Group__2__Impl
	rule__StartsWith__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StartsWith__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartsWithAccess().getSearchStringAssignment_2()); }
	(rule__StartsWith__SearchStringAssignment_2)
	{ after(grammarAccess.getStartsWithAccess().getSearchStringAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartsWith__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartsWith__Group__3__Impl
	rule__StartsWith__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StartsWith__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartsWithAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getStartsWithAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartsWith__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartsWith__Group__4__Impl
	rule__StartsWith__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StartsWith__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartsWithAccess().getSearchValueAssignment_4()); }
	(rule__StartsWith__SearchValueAssignment_4)
	{ after(grammarAccess.getStartsWithAccess().getSearchValueAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartsWith__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartsWith__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StartsWith__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartsWithAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getStartsWithAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EndsWith__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndsWith__Group__0__Impl
	rule__EndsWith__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EndsWith__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndsWithAccess().getEndsWithKeyword_0()); }
	'endsWith'
	{ after(grammarAccess.getEndsWithAccess().getEndsWithKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndsWith__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndsWith__Group__1__Impl
	rule__EndsWith__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EndsWith__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndsWithAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getEndsWithAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndsWith__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndsWith__Group__2__Impl
	rule__EndsWith__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EndsWith__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndsWithAccess().getSearchStringAssignment_2()); }
	(rule__EndsWith__SearchStringAssignment_2)
	{ after(grammarAccess.getEndsWithAccess().getSearchStringAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndsWith__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndsWith__Group__3__Impl
	rule__EndsWith__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EndsWith__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndsWithAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getEndsWithAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndsWith__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndsWith__Group__4__Impl
	rule__EndsWith__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EndsWith__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndsWithAccess().getSearchValueAssignment_4()); }
	(rule__EndsWith__SearchValueAssignment_4)
	{ after(grammarAccess.getEndsWithAccess().getSearchValueAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndsWith__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndsWith__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EndsWith__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndsWithAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getEndsWithAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Format__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Format__Group__0__Impl
	rule__Format__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Format__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormatAccess().getFormatKeyword_0()); }
	'format'
	{ after(grammarAccess.getFormatAccess().getFormatKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Format__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Format__Group__1__Impl
	rule__Format__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Format__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormatAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getFormatAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Format__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Format__Group__2__Impl
	rule__Format__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Format__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormatAccess().getStringAssignment_2()); }
	(rule__Format__StringAssignment_2)
	{ after(grammarAccess.getFormatAccess().getStringAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Format__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Format__Group__3__Impl
	rule__Format__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Format__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormatAccess().getGroup_3()); }
	(rule__Format__Group_3__0)*
	{ after(grammarAccess.getFormatAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Format__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Format__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Format__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormatAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getFormatAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Format__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Format__Group_3__0__Impl
	rule__Format__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Format__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormatAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getFormatAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Format__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Format__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Format__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormatAccess().getReplaceValuesAssignment_3_1()); }
	(rule__Format__ReplaceValuesAssignment_3_1)
	{ after(grammarAccess.getFormatAccess().getReplaceValuesAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Join__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Join__Group__0__Impl
	rule__Join__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinAccess().getJoinKeyword_0()); }
	'join'
	{ after(grammarAccess.getJoinAccess().getJoinKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Join__Group__1__Impl
	rule__Join__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getJoinAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Join__Group__2__Impl
	rule__Join__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinAccess().getArrayAssignment_2()); }
	(rule__Join__ArrayAssignment_2)
	{ after(grammarAccess.getJoinAccess().getArrayAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Join__Group__3__Impl
	rule__Join__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinAccess().getGroup_3()); }
	(rule__Join__Group_3__0)?
	{ after(grammarAccess.getJoinAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Join__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getJoinAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Join__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Join__Group_3__0__Impl
	rule__Join__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getJoinAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Join__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinAccess().getSepAssignment_3_1()); }
	(rule__Join__SepAssignment_3_1)
	{ after(grammarAccess.getJoinAccess().getSepAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ToJSON__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ToJSON__Group__0__Impl
	rule__ToJSON__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ToJSON__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getToJSONAccess().getToJSONKeyword_0()); }
	'toJSON'
	{ after(grammarAccess.getToJSONAccess().getToJSONKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ToJSON__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ToJSON__Group__1__Impl
	rule__ToJSON__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ToJSON__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getToJSONAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getToJSONAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ToJSON__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ToJSON__Group__2__Impl
	rule__ToJSON__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ToJSON__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getToJSONAccess().getValueAssignment_2()); }
	(rule__ToJSON__ValueAssignment_2)
	{ after(grammarAccess.getToJSONAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ToJSON__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ToJSON__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ToJSON__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getToJSONAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getToJSONAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FromJSON__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FromJSON__Group__0__Impl
	rule__FromJSON__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FromJSON__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFromJSONAccess().getFromJSONKeyword_0()); }
	'fromJSON'
	{ after(grammarAccess.getFromJSONAccess().getFromJSONKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FromJSON__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FromJSON__Group__1__Impl
	rule__FromJSON__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FromJSON__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFromJSONAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getFromJSONAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FromJSON__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FromJSON__Group__2__Impl
	rule__FromJSON__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FromJSON__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFromJSONAccess().getValueAssignment_2()); }
	(rule__FromJSON__ValueAssignment_2)
	{ after(grammarAccess.getFromJSONAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FromJSON__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FromJSON__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FromJSON__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFromJSONAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getFromJSONAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HashFiles__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HashFiles__Group__0__Impl
	rule__HashFiles__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HashFiles__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHashFilesAccess().getHashFilesKeyword_0()); }
	'hashFiles'
	{ after(grammarAccess.getHashFilesAccess().getHashFilesKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HashFiles__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HashFiles__Group__1__Impl
	rule__HashFiles__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HashFiles__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHashFilesAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getHashFilesAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HashFiles__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HashFiles__Group__2__Impl
	rule__HashFiles__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__HashFiles__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHashFilesAccess().getPathAssignment_2()); }
	(rule__HashFiles__PathAssignment_2)
	{ after(grammarAccess.getHashFilesAccess().getPathAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HashFiles__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HashFiles__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HashFiles__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHashFilesAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getHashFilesAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Success__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Success__Group__0__Impl
	rule__Success__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Success__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuccessAccess().getSuccessAction_0()); }
	()
	{ after(grammarAccess.getSuccessAccess().getSuccessAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Success__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Success__Group__1__Impl
	rule__Success__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Success__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuccessAccess().getSuccessKeyword_1()); }
	'success'
	{ after(grammarAccess.getSuccessAccess().getSuccessKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Success__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Success__Group__2__Impl
	rule__Success__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Success__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuccessAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getSuccessAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Success__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Success__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Success__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuccessAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getSuccessAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Always__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Always__Group__0__Impl
	rule__Always__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Always__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlwaysAccess().getAlwaysAction_0()); }
	()
	{ after(grammarAccess.getAlwaysAccess().getAlwaysAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Always__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Always__Group__1__Impl
	rule__Always__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Always__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlwaysAccess().getAlwaysKeyword_1()); }
	'always'
	{ after(grammarAccess.getAlwaysAccess().getAlwaysKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Always__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Always__Group__2__Impl
	rule__Always__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Always__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlwaysAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getAlwaysAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Always__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Always__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Always__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlwaysAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getAlwaysAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Cancelled__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cancelled__Group__0__Impl
	rule__Cancelled__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cancelled__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCancelledAccess().getCancelledAction_0()); }
	()
	{ after(grammarAccess.getCancelledAccess().getCancelledAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cancelled__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cancelled__Group__1__Impl
	rule__Cancelled__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Cancelled__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCancelledAccess().getCancelledKeyword_1()); }
	'cancelled'
	{ after(grammarAccess.getCancelledAccess().getCancelledKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cancelled__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cancelled__Group__2__Impl
	rule__Cancelled__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Cancelled__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCancelledAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getCancelledAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cancelled__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cancelled__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cancelled__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCancelledAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getCancelledAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Failure__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Failure__Group__0__Impl
	rule__Failure__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Failure__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFailureAccess().getFailureAction_0()); }
	()
	{ after(grammarAccess.getFailureAccess().getFailureAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Failure__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Failure__Group__1__Impl
	rule__Failure__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Failure__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFailureAccess().getFailureKeyword_1()); }
	'failure'
	{ after(grammarAccess.getFailureAccess().getFailureKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Failure__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Failure__Group__2__Impl
	rule__Failure__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Failure__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFailureAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getFailureAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Failure__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Failure__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Failure__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFailureAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getFailureAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Or__RhsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrAccess().getRhsAndParserRuleCall_1_2_0()); }
		ruleAnd
		{ after(grammarAccess.getOrAccess().getRhsAndParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__RhsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndAccess().getRhsEqualityParserRuleCall_1_2_0()); }
		ruleEquality
		{ after(grammarAccess.getAndAccess().getRhsEqualityParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityAccess().getOpEQUALITY_OPEnumRuleCall_1_1_0()); }
		ruleEQUALITY_OP
		{ after(grammarAccess.getEqualityAccess().getOpEQUALITY_OPEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__RhsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityAccess().getRhsComparisonParserRuleCall_1_2_0()); }
		ruleComparison
		{ after(grammarAccess.getEqualityAccess().getRhsComparisonParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getOpCOMPARISON_OPEnumRuleCall_1_1_0()); }
		ruleCOMPARISON_OP
		{ after(grammarAccess.getComparisonAccess().getOpCOMPARISON_OPEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__RhsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getRhsUnaryOpParserRuleCall_1_2_0()); }
		ruleUnaryOp
		{ after(grammarAccess.getComparisonAccess().getRhsUnaryOpParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Not__ChildExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNotAccess().getChildExprVariableDereferenceParserRuleCall_1_0()); }
		ruleVariableDereference
		{ after(grammarAccess.getNotAccess().getChildExprVariableDereferenceParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__RhsAssignment_1_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDereferenceAccess().getRhsVariableDereferenceParserRuleCall_1_1_0_1_0()); }
		ruleVariableDereference
		{ after(grammarAccess.getVariableDereferenceAccess().getRhsVariableDereferenceParserRuleCall_1_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDereference__RhsAssignment_1_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDereferenceAccess().getRhsVariableDereferenceParserRuleCall_1_1_1_1_0()); }
		ruleVariableDereference
		{ after(grammarAccess.getVariableDereferenceAccess().getRhsVariableDereferenceParserRuleCall_1_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ContextAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getContextCONTEXTEnumRuleCall_0_1_0()); }
		ruleCONTEXT
		{ after(grammarAccess.getAtomicAccess().getContextCONTEXTEnumRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__NameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getNameIDTerminalRuleCall_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getAtomicAccess().getNameIDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getAtomicAccess().getValueINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueDOUBLETerminalRuleCall_3_1_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getAtomicAccess().getValueDOUBLETerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueBOOLEANTerminalRuleCall_4_1_0()); }
		RULE_BOOLEAN
		{ after(grammarAccess.getAtomicAccess().getValueBOOLEANTerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueSTRINGTerminalRuleCall_5_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getAtomicAccess().getValueSTRINGTerminalRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__SearchAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContainsAccess().getSearchExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getContainsAccess().getSearchExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__ItemAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContainsAccess().getItemExpressionParserRuleCall_4_0()); }
		ruleExpression
		{ after(grammarAccess.getContainsAccess().getItemExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartsWith__SearchStringAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartsWithAccess().getSearchStringExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getStartsWithAccess().getSearchStringExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartsWith__SearchValueAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartsWithAccess().getSearchValueExpressionParserRuleCall_4_0()); }
		ruleExpression
		{ after(grammarAccess.getStartsWithAccess().getSearchValueExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndsWith__SearchStringAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEndsWithAccess().getSearchStringExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getEndsWithAccess().getSearchStringExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndsWith__SearchValueAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEndsWithAccess().getSearchValueExpressionParserRuleCall_4_0()); }
		ruleExpression
		{ after(grammarAccess.getEndsWithAccess().getSearchValueExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Format__StringAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormatAccess().getStringExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getFormatAccess().getStringExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Format__ReplaceValuesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormatAccess().getReplaceValuesExpressionParserRuleCall_3_1_0()); }
		ruleExpression
		{ after(grammarAccess.getFormatAccess().getReplaceValuesExpressionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__ArrayAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinAccess().getArrayExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getJoinAccess().getArrayExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__SepAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinAccess().getSepExpressionParserRuleCall_3_1_0()); }
		ruleExpression
		{ after(grammarAccess.getJoinAccess().getSepExpressionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ToJSON__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getToJSONAccess().getValueExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getToJSONAccess().getValueExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FromJSON__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFromJSONAccess().getValueExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getFromJSONAccess().getValueExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HashFiles__PathAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHashFilesAccess().getPathExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getHashFilesAccess().getPathExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_DOUBLE : RULE_INT '.' RULE_INT;

RULE_BOOLEAN : ('true'|'false');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
