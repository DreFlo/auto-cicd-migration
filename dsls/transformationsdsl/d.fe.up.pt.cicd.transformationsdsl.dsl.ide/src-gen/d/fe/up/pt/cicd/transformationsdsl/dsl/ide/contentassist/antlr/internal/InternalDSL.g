/*
 * generated by Xtext 2.33.0
 */
grammar InternalDSL;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package d.fe.up.pt.cicd.transformationsdsl.dsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package d.fe.up.pt.cicd.transformationsdsl.dsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import d.fe.up.pt.cicd.transformationsdsl.dsl.services.DSLGrammarAccess;

}
@parser::members {
	private DSLGrammarAccess grammarAccess;

	public void setGrammarAccess(DSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleTransformationSet
entryRuleTransformationSet
:
{ before(grammarAccess.getTransformationSetRule()); }
	 ruleTransformationSet
{ after(grammarAccess.getTransformationSetRule()); } 
	 EOF 
;

// Rule TransformationSet
ruleTransformationSet 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTransformationSetAccess().getGroup()); }
		(rule__TransformationSet__Group__0)
		{ after(grammarAccess.getTransformationSetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTSMTransformation
entryRuleTSMTransformation
:
{ before(grammarAccess.getTSMTransformationRule()); }
	 ruleTSMTransformation
{ after(grammarAccess.getTSMTransformationRule()); } 
	 EOF 
;

// Rule TSMTransformation
ruleTSMTransformation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTSMTransformationAccess().getAlternatives()); }
		(rule__TSMTransformation__Alternatives)
		{ after(grammarAccess.getTSMTransformationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleATLScript
entryRuleATLScript
:
{ before(grammarAccess.getATLScriptRule()); }
	 ruleATLScript
{ after(grammarAccess.getATLScriptRule()); } 
	 EOF 
;

// Rule ATLScript
ruleATLScript 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getATLScriptAccess().getGroup()); }
		(rule__ATLScript__Group__0)
		{ after(grammarAccess.getATLScriptAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTIMTransformation
entryRuleTIMTransformation
:
{ before(grammarAccess.getTIMTransformationRule()); }
	 ruleTIMTransformation
{ after(grammarAccess.getTIMTransformationRule()); } 
	 EOF 
;

// Rule TIMTransformation
ruleTIMTransformation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTIMTransformationAccess().getAlternatives()); }
		(rule__TIMTransformation__Alternatives)
		{ after(grammarAccess.getTIMTransformationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSetImage
entryRuleSetImage
:
{ before(grammarAccess.getSetImageRule()); }
	 ruleSetImage
{ after(grammarAccess.getSetImageRule()); } 
	 EOF 
;

// Rule SetImage
ruleSetImage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSetImageAccess().getGroup()); }
		(rule__SetImage__Group__0)
		{ after(grammarAccess.getSetImageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddPorts
entryRuleAddPorts
:
{ before(grammarAccess.getAddPortsRule()); }
	 ruleAddPorts
{ after(grammarAccess.getAddPortsRule()); } 
	 EOF 
;

// Rule AddPorts
ruleAddPorts 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddPortsAccess().getGroup()); }
		(rule__AddPorts__Group__0)
		{ after(grammarAccess.getAddPortsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSetOptions
entryRuleSetOptions
:
{ before(grammarAccess.getSetOptionsRule()); }
	 ruleSetOptions
{ after(grammarAccess.getSetOptionsRule()); } 
	 EOF 
;

// Rule SetOptions
ruleSetOptions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSetOptionsAccess().getGroup()); }
		(rule__SetOptions__Group__0)
		{ after(grammarAccess.getSetOptionsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChangePlugin
entryRuleChangePlugin
:
{ before(grammarAccess.getChangePluginRule()); }
	 ruleChangePlugin
{ after(grammarAccess.getChangePluginRule()); } 
	 EOF 
;

// Rule ChangePlugin
ruleChangePlugin 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChangePluginAccess().getGroup()); }
		(rule__ChangePlugin__Group__0)
		{ after(grammarAccess.getChangePluginAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReplaceAgentLabels
entryRuleReplaceAgentLabels
:
{ before(grammarAccess.getReplaceAgentLabelsRule()); }
	 ruleReplaceAgentLabels
{ after(grammarAccess.getReplaceAgentLabelsRule()); } 
	 EOF 
;

// Rule ReplaceAgentLabels
ruleReplaceAgentLabels 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReplaceAgentLabelsAccess().getGroup()); }
		(rule__ReplaceAgentLabels__Group__0)
		{ after(grammarAccess.getReplaceAgentLabelsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddTrigger
entryRuleAddTrigger
:
{ before(grammarAccess.getAddTriggerRule()); }
	 ruleAddTrigger
{ after(grammarAccess.getAddTriggerRule()); } 
	 EOF 
;

// Rule AddTrigger
ruleAddTrigger 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddTriggerAccess().getGroup()); }
		(rule__AddTrigger__Group__0)
		{ after(grammarAccess.getAddTriggerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTrigger
entryRuleTrigger
:
{ before(grammarAccess.getTriggerRule()); }
	 ruleTrigger
{ after(grammarAccess.getTriggerRule()); } 
	 EOF 
;

// Rule Trigger
ruleTrigger 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTriggerAccess().getManualTriggerParserRuleCall()); }
		ruleManualTrigger
		{ after(grammarAccess.getTriggerAccess().getManualTriggerParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleManualTrigger
entryRuleManualTrigger
:
{ before(grammarAccess.getManualTriggerRule()); }
	 ruleManualTrigger
{ after(grammarAccess.getManualTriggerRule()); } 
	 EOF 
;

// Rule ManualTrigger
ruleManualTrigger 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getManualTriggerAccess().getGroup()); }
		(rule__ManualTrigger__Group__0)
		{ after(grammarAccess.getManualTriggerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeleteStep
entryRuleDeleteStep
:
{ before(grammarAccess.getDeleteStepRule()); }
	 ruleDeleteStep
{ after(grammarAccess.getDeleteStepRule()); } 
	 EOF 
;

// Rule DeleteStep
ruleDeleteStep 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeleteStepAccess().getGroup()); }
		(rule__DeleteStep__Group__0)
		{ after(grammarAccess.getDeleteStepAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddStep
entryRuleAddStep
:
{ before(grammarAccess.getAddStepRule()); }
	 ruleAddStep
{ after(grammarAccess.getAddStepRule()); } 
	 EOF 
;

// Rule AddStep
ruleAddStep 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddStepAccess().getGroup()); }
		(rule__AddStep__Group__0)
		{ after(grammarAccess.getAddStepAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReplaceStep
entryRuleReplaceStep
:
{ before(grammarAccess.getReplaceStepRule()); }
	 ruleReplaceStep
{ after(grammarAccess.getReplaceStepRule()); } 
	 EOF 
;

// Rule ReplaceStep
ruleReplaceStep 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReplaceStepAccess().getGroup()); }
		(rule__ReplaceStep__Group__0)
		{ after(grammarAccess.getReplaceStepAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStep
entryRuleStep
:
{ before(grammarAccess.getStepRule()); }
	 ruleStep
{ after(grammarAccess.getStepRule()); } 
	 EOF 
;

// Rule Step
ruleStep 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStepAccess().getAlternatives()); }
		(rule__Step__Alternatives)
		{ after(grammarAccess.getStepAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionalStep
entryRuleConditionalStep
:
{ before(grammarAccess.getConditionalStepRule()); }
	 ruleConditionalStep
{ after(grammarAccess.getConditionalStepRule()); } 
	 EOF 
;

// Rule ConditionalStep
ruleConditionalStep 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionalStepAccess().getGroup()); }
		(rule__ConditionalStep__Group__0)
		{ after(grammarAccess.getConditionalStepAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNonConditionalStep
entryRuleNonConditionalStep
:
{ before(grammarAccess.getNonConditionalStepRule()); }
	 ruleNonConditionalStep
{ after(grammarAccess.getNonConditionalStepRule()); } 
	 EOF 
;

// Rule NonConditionalStep
ruleNonConditionalStep 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNonConditionalStepAccess().getGroup()); }
		(rule__NonConditionalStep__Group__0)
		{ after(grammarAccess.getNonConditionalStepAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringLiteral
entryRuleStringLiteral
:
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringLiteralAccess().getValueAssignment()); }
		(rule__StringLiteral__ValueAssignment)
		{ after(grammarAccess.getStringLiteralAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignment
entryRuleAssignment
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignmentAccess().getGroup()); }
		(rule__Assignment__Group__0)
		{ after(grammarAccess.getAssignmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableDeclaration
entryRuleVariableDeclaration
:
{ before(grammarAccess.getVariableDeclarationRule()); }
	 ruleVariableDeclaration
{ after(grammarAccess.getVariableDeclarationRule()); } 
	 EOF 
;

// Rule VariableDeclaration
ruleVariableDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getNameAssignment()); }
		(rule__VariableDeclaration__NameAssignment)
		{ after(grammarAccess.getVariableDeclarationAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCircleCITransformation
entryRuleCircleCITransformation
:
{ before(grammarAccess.getCircleCITransformationRule()); }
	 ruleCircleCITransformation
{ after(grammarAccess.getCircleCITransformationRule()); } 
	 EOF 
;

// Rule CircleCITransformation
ruleCircleCITransformation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCircleCITransformationAccess().getGroup()); }
		(rule__CircleCITransformation__Group__0)
		{ after(grammarAccess.getCircleCITransformationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSetCircleCIVersion
entryRuleSetCircleCIVersion
:
{ before(grammarAccess.getSetCircleCIVersionRule()); }
	 ruleSetCircleCIVersion
{ after(grammarAccess.getSetCircleCIVersionRule()); } 
	 EOF 
;

// Rule SetCircleCIVersion
ruleSetCircleCIVersion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSetCircleCIVersionAccess().getGroup()); }
		(rule__SetCircleCIVersion__Group__0)
		{ after(grammarAccess.getSetCircleCIVersionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddExecutor
entryRuleAddExecutor
:
{ before(grammarAccess.getAddExecutorRule()); }
	 ruleAddExecutor
{ after(grammarAccess.getAddExecutorRule()); } 
	 EOF 
;

// Rule AddExecutor
ruleAddExecutor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddExecutorAccess().getGroup()); }
		(rule__AddExecutor__Group__0)
		{ after(grammarAccess.getAddExecutorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddOrbReferenceExecutor
entryRuleAddOrbReferenceExecutor
:
{ before(grammarAccess.getAddOrbReferenceExecutorRule()); }
	 ruleAddOrbReferenceExecutor
{ after(grammarAccess.getAddOrbReferenceExecutorRule()); } 
	 EOF 
;

// Rule AddOrbReferenceExecutor
ruleAddOrbReferenceExecutor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddOrbReferenceExecutorAccess().getGroup()); }
		(rule__AddOrbReferenceExecutor__Group__0)
		{ after(grammarAccess.getAddOrbReferenceExecutorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelectWorkflow
entryRuleSelectWorkflow
:
{ before(grammarAccess.getSelectWorkflowRule()); }
	 ruleSelectWorkflow
{ after(grammarAccess.getSelectWorkflowRule()); } 
	 EOF 
;

// Rule SelectWorkflow
ruleSelectWorkflow 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectWorkflowAccess().getGroup()); }
		(rule__SelectWorkflow__Group__0)
		{ after(grammarAccess.getSelectWorkflowAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringToStringMapEntry
entryRuleStringToStringMapEntry
:
{ before(grammarAccess.getStringToStringMapEntryRule()); }
	 ruleStringToStringMapEntry
{ after(grammarAccess.getStringToStringMapEntryRule()); } 
	 EOF 
;

// Rule StringToStringMapEntry
ruleStringToStringMapEntry 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringToStringMapEntryAccess().getGroup()); }
		(rule__StringToStringMapEntry__Group__0)
		{ after(grammarAccess.getStringToStringMapEntryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule MODELS
ruleMODELS
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMODELSAccess().getAlternatives()); }
		(rule__MODELS__Alternatives)
		{ after(grammarAccess.getMODELSAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TSMTransformation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTSMTransformationAccess().getATLScriptParserRuleCall_0()); }
		ruleATLScript
		{ after(grammarAccess.getTSMTransformationAccess().getATLScriptParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTSMTransformationAccess().getCircleCITransformationParserRuleCall_1()); }
		ruleCircleCITransformation
		{ after(grammarAccess.getTSMTransformationAccess().getCircleCITransformationParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TIMTransformation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTIMTransformationAccess().getATLScriptParserRuleCall_0()); }
		ruleATLScript
		{ after(grammarAccess.getTIMTransformationAccess().getATLScriptParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTIMTransformationAccess().getChangePluginParserRuleCall_1()); }
		ruleChangePlugin
		{ after(grammarAccess.getTIMTransformationAccess().getChangePluginParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTIMTransformationAccess().getReplaceAgentLabelsParserRuleCall_2()); }
		ruleReplaceAgentLabels
		{ after(grammarAccess.getTIMTransformationAccess().getReplaceAgentLabelsParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getTIMTransformationAccess().getAddTriggerParserRuleCall_3()); }
		ruleAddTrigger
		{ after(grammarAccess.getTIMTransformationAccess().getAddTriggerParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getTIMTransformationAccess().getReplaceStepParserRuleCall_4()); }
		ruleReplaceStep
		{ after(grammarAccess.getTIMTransformationAccess().getReplaceStepParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getTIMTransformationAccess().getDeleteStepParserRuleCall_5()); }
		ruleDeleteStep
		{ after(grammarAccess.getTIMTransformationAccess().getDeleteStepParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getTIMTransformationAccess().getAddStepParserRuleCall_6()); }
		ruleAddStep
		{ after(grammarAccess.getTIMTransformationAccess().getAddStepParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getTIMTransformationAccess().getAddPortsParserRuleCall_7()); }
		ruleAddPorts
		{ after(grammarAccess.getTIMTransformationAccess().getAddPortsParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getTIMTransformationAccess().getSetOptionsParserRuleCall_8()); }
		ruleSetOptions
		{ after(grammarAccess.getTIMTransformationAccess().getSetOptionsParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getTIMTransformationAccess().getSetImageParserRuleCall_9()); }
		ruleSetImage
		{ after(grammarAccess.getTIMTransformationAccess().getSetImageParserRuleCall_9()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepAccess().getConditionalStepParserRuleCall_0()); }
		ruleConditionalStep
		{ after(grammarAccess.getStepAccess().getConditionalStepParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStepAccess().getNonConditionalStepParserRuleCall_1()); }
		ruleNonConditionalStep
		{ after(grammarAccess.getStepAccess().getNonConditionalStepParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNonConditionalStepAccess().getGroup_0_0()); }
		(rule__NonConditionalStep__Group_0_0__0)
		{ after(grammarAccess.getNonConditionalStepAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getNonConditionalStepAccess().getGroup_0_1()); }
		(rule__NonConditionalStep__Group_0_1__0)
		{ after(grammarAccess.getNonConditionalStepAccess().getGroup_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getNonConditionalStepAccess().getGroup_0_2()); }
		(rule__NonConditionalStep__Group_0_2__0)
		{ after(grammarAccess.getNonConditionalStepAccess().getGroup_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CircleCITransformation__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCircleCITransformationAccess().getSetCircleCIVersionParserRuleCall_2_0()); }
		ruleSetCircleCIVersion
		{ after(grammarAccess.getCircleCITransformationAccess().getSetCircleCIVersionParserRuleCall_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getCircleCITransformationAccess().getAddExecutorParserRuleCall_2_1()); }
		ruleAddExecutor
		{ after(grammarAccess.getCircleCITransformationAccess().getAddExecutorParserRuleCall_2_1()); }
	)
	|
	(
		{ before(grammarAccess.getCircleCITransformationAccess().getSelectWorkflowParserRuleCall_2_2()); }
		ruleSelectWorkflow
		{ after(grammarAccess.getCircleCITransformationAccess().getSelectWorkflowParserRuleCall_2_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MODELS__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMODELSAccess().getGHAEnumLiteralDeclaration_0()); }
		('gha')
		{ after(grammarAccess.getMODELSAccess().getGHAEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getMODELSAccess().getCICDEnumLiteralDeclaration_1()); }
		('cicd')
		{ after(grammarAccess.getMODELSAccess().getCICDEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getMODELSAccess().getCircleCIEnumLiteralDeclaration_2()); }
		('circleci')
		{ after(grammarAccess.getMODELSAccess().getCircleCIEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationSet__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationSet__Group__0__Impl
	rule__TransformationSet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationSet__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationSetAccess().getTransformationSetAction_0()); }
	()
	{ after(grammarAccess.getTransformationSetAccess().getTransformationSetAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationSet__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationSet__Group__1__Impl
	rule__TransformationSet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationSet__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationSetAccess().getGroup_1()); }
	(rule__TransformationSet__Group_1__0)?
	{ after(grammarAccess.getTransformationSetAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationSet__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationSet__Group__2__Impl
	rule__TransformationSet__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationSet__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationSetAccess().getGroup_2()); }
	(rule__TransformationSet__Group_2__0)?
	{ after(grammarAccess.getTransformationSetAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationSet__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationSet__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationSet__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationSetAccess().getGroup_3()); }
	(rule__TransformationSet__Group_3__0)?
	{ after(grammarAccess.getTransformationSetAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TransformationSet__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationSet__Group_1__0__Impl
	rule__TransformationSet__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationSet__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationSetAccess().getBeforeKeyword_1_0()); }
	'before'
	{ after(grammarAccess.getTransformationSetAccess().getBeforeKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationSet__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationSet__Group_1__1__Impl
	rule__TransformationSet__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationSet__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationSetAccess().getTranslatingKeyword_1_1()); }
	('translating')?
	{ after(grammarAccess.getTransformationSetAccess().getTranslatingKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationSet__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationSet__Group_1__2__Impl
	rule__TransformationSet__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationSet__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationSetAccess().getLeftCurlyBracketKeyword_1_2()); }
	'{'
	{ after(grammarAccess.getTransformationSetAccess().getLeftCurlyBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationSet__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationSet__Group_1__3__Impl
	rule__TransformationSet__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationSet__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationSetAccess().getPreTIMAssignment_1_3()); }
	(rule__TransformationSet__PreTIMAssignment_1_3)*
	{ after(grammarAccess.getTransformationSetAccess().getPreTIMAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationSet__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationSet__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationSet__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationSetAccess().getRightCurlyBracketKeyword_1_4()); }
	'}'
	{ after(grammarAccess.getTransformationSetAccess().getRightCurlyBracketKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TransformationSet__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationSet__Group_2__0__Impl
	rule__TransformationSet__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationSet__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationSetAccess().getWhileKeyword_2_0()); }
	'while'
	{ after(grammarAccess.getTransformationSetAccess().getWhileKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationSet__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationSet__Group_2__1__Impl
	rule__TransformationSet__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationSet__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationSetAccess().getTranslatingKeyword_2_1()); }
	('translating')?
	{ after(grammarAccess.getTransformationSetAccess().getTranslatingKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationSet__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationSet__Group_2__2__Impl
	rule__TransformationSet__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationSet__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationSetAccess().getLeftCurlyBracketKeyword_2_2()); }
	'{'
	{ after(grammarAccess.getTransformationSetAccess().getLeftCurlyBracketKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationSet__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationSet__Group_2__3__Impl
	rule__TransformationSet__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationSet__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationSetAccess().getOnTIMAssignment_2_3()); }
	(rule__TransformationSet__OnTIMAssignment_2_3)*
	{ after(grammarAccess.getTransformationSetAccess().getOnTIMAssignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationSet__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationSet__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationSet__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationSetAccess().getRightCurlyBracketKeyword_2_4()); }
	'}'
	{ after(grammarAccess.getTransformationSetAccess().getRightCurlyBracketKeyword_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TransformationSet__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationSet__Group_3__0__Impl
	rule__TransformationSet__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationSet__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationSetAccess().getAfterKeyword_3_0()); }
	'after'
	{ after(grammarAccess.getTransformationSetAccess().getAfterKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationSet__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationSet__Group_3__1__Impl
	rule__TransformationSet__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationSet__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationSetAccess().getTranslatingKeyword_3_1()); }
	('translating')?
	{ after(grammarAccess.getTransformationSetAccess().getTranslatingKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationSet__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationSet__Group_3__2__Impl
	rule__TransformationSet__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationSet__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationSetAccess().getLeftCurlyBracketKeyword_3_2()); }
	'{'
	{ after(grammarAccess.getTransformationSetAccess().getLeftCurlyBracketKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationSet__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationSet__Group_3__3__Impl
	rule__TransformationSet__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationSet__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationSetAccess().getPostTIMAssignment_3_3()); }
	(rule__TransformationSet__PostTIMAssignment_3_3)*
	{ after(grammarAccess.getTransformationSetAccess().getPostTIMAssignment_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationSet__Group_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationSet__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationSet__Group_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationSetAccess().getRightCurlyBracketKeyword_3_4()); }
	'}'
	{ after(grammarAccess.getTransformationSetAccess().getRightCurlyBracketKeyword_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ATLScript__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ATLScript__Group__0__Impl
	rule__ATLScript__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ATLScript__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getATLScriptAccess().getRunKeyword_0()); }
	'run'
	{ after(grammarAccess.getATLScriptAccess().getRunKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ATLScript__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ATLScript__Group__1__Impl
	rule__ATLScript__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ATLScript__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getATLScriptAccess().getAtlKeyword_1()); }
	'atl'
	{ after(grammarAccess.getATLScriptAccess().getAtlKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ATLScript__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ATLScript__Group__2__Impl
	rule__ATLScript__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ATLScript__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getATLScriptAccess().getOnKeyword_2()); }
	('on')?
	{ after(grammarAccess.getATLScriptAccess().getOnKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ATLScript__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ATLScript__Group__3__Impl
	rule__ATLScript__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ATLScript__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getATLScriptAccess().getModelAssignment_3()); }
	(rule__ATLScript__ModelAssignment_3)
	{ after(grammarAccess.getATLScriptAccess().getModelAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ATLScript__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ATLScript__Group__4__Impl
	rule__ATLScript__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ATLScript__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getATLScriptAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getATLScriptAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ATLScript__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ATLScript__Group__5__Impl
	rule__ATLScript__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ATLScript__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getATLScriptAccess().getScriptAssignment_5()); }
	(rule__ATLScript__ScriptAssignment_5)
	{ after(grammarAccess.getATLScriptAccess().getScriptAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ATLScript__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ATLScript__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ATLScript__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getATLScriptAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getATLScriptAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetImage__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetImage__Group__0__Impl
	rule__SetImage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetImage__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetImageAccess().getSetKeyword_0()); }
	'set'
	{ after(grammarAccess.getSetImageAccess().getSetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetImage__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetImage__Group__1__Impl
	rule__SetImage__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetImage__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetImageAccess().getContainerKeyword_1()); }
	'container'
	{ after(grammarAccess.getSetImageAccess().getContainerKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetImage__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetImage__Group__2__Impl
	rule__SetImage__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SetImage__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetImageAccess().getImageKeyword_2()); }
	'image'
	{ after(grammarAccess.getSetImageAccess().getImageKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetImage__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetImage__Group__3__Impl
	rule__SetImage__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SetImage__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetImageAccess().getWhenKeyword_3()); }
	'when'
	{ after(grammarAccess.getSetImageAccess().getWhenKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetImage__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetImage__Group__4__Impl
	rule__SetImage__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SetImage__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetImageAccess().getConditionAssignment_4()); }
	(rule__SetImage__ConditionAssignment_4)
	{ after(grammarAccess.getSetImageAccess().getConditionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetImage__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetImage__Group__5__Impl
	rule__SetImage__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SetImage__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetImageAccess().getToKeyword_5()); }
	'to'
	{ after(grammarAccess.getSetImageAccess().getToKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetImage__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetImage__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetImage__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetImageAccess().getImageAssignment_6()); }
	(rule__SetImage__ImageAssignment_6)
	{ after(grammarAccess.getSetImageAccess().getImageAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddPorts__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddPorts__Group__0__Impl
	rule__AddPorts__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddPorts__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddPortsAccess().getAddKeyword_0()); }
	'add'
	{ after(grammarAccess.getAddPortsAccess().getAddKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddPorts__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddPorts__Group__1__Impl
	rule__AddPorts__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AddPorts__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddPortsAccess().getContainerKeyword_1()); }
	'container'
	{ after(grammarAccess.getAddPortsAccess().getContainerKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddPorts__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddPorts__Group__2__Impl
	rule__AddPorts__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AddPorts__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddPortsAccess().getPortsKeyword_2()); }
	'ports'
	{ after(grammarAccess.getAddPortsAccess().getPortsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddPorts__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddPorts__Group__3__Impl
	rule__AddPorts__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AddPorts__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddPortsAccess().getGroup_3()); }
	(rule__AddPorts__Group_3__0)?
	{ after(grammarAccess.getAddPortsAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddPorts__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddPorts__Group__4__Impl
	rule__AddPorts__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AddPorts__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddPortsAccess().getPortsKeyword_4()); }
	'ports'
	{ after(grammarAccess.getAddPortsAccess().getPortsKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddPorts__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddPorts__Group__5__Impl
	rule__AddPorts__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AddPorts__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddPortsAccess().getLeftCurlyBracketKeyword_5()); }
	'{'
	{ after(grammarAccess.getAddPortsAccess().getLeftCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddPorts__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddPorts__Group__6__Impl
	rule__AddPorts__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__AddPorts__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddPortsAccess().getPortsAssignment_6()); }
	(rule__AddPorts__PortsAssignment_6)
	{ after(grammarAccess.getAddPortsAccess().getPortsAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddPorts__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddPorts__Group__7__Impl
	rule__AddPorts__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__AddPorts__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddPortsAccess().getGroup_7()); }
	(rule__AddPorts__Group_7__0)*
	{ after(grammarAccess.getAddPortsAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddPorts__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddPorts__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddPorts__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddPortsAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getAddPortsAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddPorts__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddPorts__Group_3__0__Impl
	rule__AddPorts__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddPorts__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddPortsAccess().getWhenKeyword_3_0()); }
	'when'
	{ after(grammarAccess.getAddPortsAccess().getWhenKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddPorts__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddPorts__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddPorts__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddPortsAccess().getConditionAssignment_3_1()); }
	(rule__AddPorts__ConditionAssignment_3_1)
	{ after(grammarAccess.getAddPortsAccess().getConditionAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddPorts__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddPorts__Group_7__0__Impl
	rule__AddPorts__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddPorts__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddPortsAccess().getCommaKeyword_7_0()); }
	','
	{ after(grammarAccess.getAddPortsAccess().getCommaKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddPorts__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddPorts__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddPorts__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddPortsAccess().getPortsAssignment_7_1()); }
	(rule__AddPorts__PortsAssignment_7_1)
	{ after(grammarAccess.getAddPortsAccess().getPortsAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetOptions__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetOptions__Group__0__Impl
	rule__SetOptions__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetOptions__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetOptionsAccess().getSetKeyword_0()); }
	'set'
	{ after(grammarAccess.getSetOptionsAccess().getSetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetOptions__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetOptions__Group__1__Impl
	rule__SetOptions__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetOptions__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetOptionsAccess().getContainerKeyword_1()); }
	'container'
	{ after(grammarAccess.getSetOptionsAccess().getContainerKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetOptions__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetOptions__Group__2__Impl
	rule__SetOptions__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SetOptions__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetOptionsAccess().getOptionsKeyword_2()); }
	'options'
	{ after(grammarAccess.getSetOptionsAccess().getOptionsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetOptions__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetOptions__Group__3__Impl
	rule__SetOptions__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SetOptions__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetOptionsAccess().getGroup_3()); }
	(rule__SetOptions__Group_3__0)?
	{ after(grammarAccess.getSetOptionsAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetOptions__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetOptions__Group__4__Impl
	rule__SetOptions__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SetOptions__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetOptionsAccess().getToKeyword_4()); }
	'to'
	{ after(grammarAccess.getSetOptionsAccess().getToKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetOptions__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetOptions__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetOptions__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetOptionsAccess().getOptionsAssignment_5()); }
	(rule__SetOptions__OptionsAssignment_5)
	{ after(grammarAccess.getSetOptionsAccess().getOptionsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetOptions__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetOptions__Group_3__0__Impl
	rule__SetOptions__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetOptions__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetOptionsAccess().getWhenKeyword_3_0()); }
	'when'
	{ after(grammarAccess.getSetOptionsAccess().getWhenKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetOptions__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetOptions__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetOptions__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetOptionsAccess().getConditionAssignment_3_1()); }
	(rule__SetOptions__ConditionAssignment_3_1)
	{ after(grammarAccess.getSetOptionsAccess().getConditionAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChangePlugin__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangePlugin__Group__0__Impl
	rule__ChangePlugin__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangePlugin__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangePluginAccess().getChangeKeyword_0()); }
	'change'
	{ after(grammarAccess.getChangePluginAccess().getChangeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangePlugin__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangePlugin__Group__1__Impl
	rule__ChangePlugin__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangePlugin__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangePluginAccess().getPluginKeyword_1()); }
	'plugin'
	{ after(grammarAccess.getChangePluginAccess().getPluginKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangePlugin__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangePlugin__Group__2__Impl
	rule__ChangePlugin__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangePlugin__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangePluginAccess().getNameAssignment_2()); }
	(rule__ChangePlugin__NameAssignment_2)
	{ after(grammarAccess.getChangePluginAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangePlugin__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangePlugin__Group__3__Impl
	rule__ChangePlugin__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangePlugin__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangePluginAccess().getVersionKeyword_3()); }
	'version'
	{ after(grammarAccess.getChangePluginAccess().getVersionKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangePlugin__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangePlugin__Group__4__Impl
	rule__ChangePlugin__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangePlugin__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangePluginAccess().getVersionAssignment_4()); }
	(rule__ChangePlugin__VersionAssignment_4)
	{ after(grammarAccess.getChangePluginAccess().getVersionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangePlugin__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangePlugin__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangePlugin__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangePluginAccess().getGroup_5()); }
	(rule__ChangePlugin__Group_5__0)?
	{ after(grammarAccess.getChangePluginAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChangePlugin__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangePlugin__Group_5__0__Impl
	rule__ChangePlugin__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangePlugin__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangePluginAccess().getArgsKeyword_5_0()); }
	'args'
	{ after(grammarAccess.getChangePluginAccess().getArgsKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangePlugin__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangePlugin__Group_5__1__Impl
	rule__ChangePlugin__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangePlugin__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangePluginAccess().getLeftCurlyBracketKeyword_5_1()); }
	'{'
	{ after(grammarAccess.getChangePluginAccess().getLeftCurlyBracketKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangePlugin__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangePlugin__Group_5__2__Impl
	rule__ChangePlugin__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangePlugin__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getChangePluginAccess().getArgsAssignment_5_2()); }
		(rule__ChangePlugin__ArgsAssignment_5_2)
		{ after(grammarAccess.getChangePluginAccess().getArgsAssignment_5_2()); }
	)
	(
		{ before(grammarAccess.getChangePluginAccess().getArgsAssignment_5_2()); }
		(rule__ChangePlugin__ArgsAssignment_5_2)*
		{ after(grammarAccess.getChangePluginAccess().getArgsAssignment_5_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangePlugin__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangePlugin__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangePlugin__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangePluginAccess().getRightCurlyBracketKeyword_5_3()); }
	'}'
	{ after(grammarAccess.getChangePluginAccess().getRightCurlyBracketKeyword_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReplaceAgentLabels__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplaceAgentLabels__Group__0__Impl
	rule__ReplaceAgentLabels__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceAgentLabels__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplaceAgentLabelsAccess().getSetKeyword_0()); }
	'set'
	{ after(grammarAccess.getReplaceAgentLabelsAccess().getSetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceAgentLabels__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplaceAgentLabels__Group__1__Impl
	rule__ReplaceAgentLabels__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceAgentLabels__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplaceAgentLabelsAccess().getLabelsKeyword_1()); }
	'labels'
	{ after(grammarAccess.getReplaceAgentLabelsAccess().getLabelsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceAgentLabels__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplaceAgentLabels__Group__2__Impl
	rule__ReplaceAgentLabels__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceAgentLabels__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplaceAgentLabelsAccess().getGroup_2()); }
	(rule__ReplaceAgentLabels__Group_2__0)?
	{ after(grammarAccess.getReplaceAgentLabelsAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceAgentLabels__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplaceAgentLabels__Group__3__Impl
	rule__ReplaceAgentLabels__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceAgentLabels__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplaceAgentLabelsAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getReplaceAgentLabelsAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceAgentLabels__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplaceAgentLabels__Group__4__Impl
	rule__ReplaceAgentLabels__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceAgentLabels__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getReplaceAgentLabelsAccess().getLabelsAssignment_4()); }
		(rule__ReplaceAgentLabels__LabelsAssignment_4)
		{ after(grammarAccess.getReplaceAgentLabelsAccess().getLabelsAssignment_4()); }
	)
	(
		{ before(grammarAccess.getReplaceAgentLabelsAccess().getLabelsAssignment_4()); }
		(rule__ReplaceAgentLabels__LabelsAssignment_4)*
		{ after(grammarAccess.getReplaceAgentLabelsAccess().getLabelsAssignment_4()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceAgentLabels__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplaceAgentLabels__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceAgentLabels__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplaceAgentLabelsAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getReplaceAgentLabelsAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReplaceAgentLabels__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplaceAgentLabels__Group_2__0__Impl
	rule__ReplaceAgentLabels__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceAgentLabels__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplaceAgentLabelsAccess().getWhenKeyword_2_0()); }
	'when'
	{ after(grammarAccess.getReplaceAgentLabelsAccess().getWhenKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceAgentLabels__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplaceAgentLabels__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceAgentLabels__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplaceAgentLabelsAccess().getConditionAssignment_2_1()); }
	(rule__ReplaceAgentLabels__ConditionAssignment_2_1)
	{ after(grammarAccess.getReplaceAgentLabelsAccess().getConditionAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddTrigger__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddTrigger__Group__0__Impl
	rule__AddTrigger__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddTrigger__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddTriggerAccess().getAddKeyword_0()); }
	'add'
	{ after(grammarAccess.getAddTriggerAccess().getAddKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddTrigger__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddTrigger__Group__1__Impl
	rule__AddTrigger__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AddTrigger__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddTriggerAccess().getTriggerKeyword_1()); }
	'trigger'
	{ after(grammarAccess.getAddTriggerAccess().getTriggerKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddTrigger__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddTrigger__Group__2__Impl
	rule__AddTrigger__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AddTrigger__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddTriggerAccess().getGroup_2()); }
	(rule__AddTrigger__Group_2__0)?
	{ after(grammarAccess.getAddTriggerAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddTrigger__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddTrigger__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddTrigger__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddTriggerAccess().getTriggerAssignment_3()); }
	(rule__AddTrigger__TriggerAssignment_3)
	{ after(grammarAccess.getAddTriggerAccess().getTriggerAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddTrigger__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddTrigger__Group_2__0__Impl
	rule__AddTrigger__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddTrigger__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddTriggerAccess().getWhenKeyword_2_0()); }
	'when'
	{ after(grammarAccess.getAddTriggerAccess().getWhenKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddTrigger__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddTrigger__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddTrigger__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddTriggerAccess().getConditionAssignment_2_1()); }
	(rule__AddTrigger__ConditionAssignment_2_1)
	{ after(grammarAccess.getAddTriggerAccess().getConditionAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ManualTrigger__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ManualTrigger__Group__0__Impl
	rule__ManualTrigger__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ManualTrigger__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getManualTriggerAccess().getManualTriggerAction_0()); }
	()
	{ after(grammarAccess.getManualTriggerAccess().getManualTriggerAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ManualTrigger__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ManualTrigger__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ManualTrigger__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getManualTriggerAccess().getManualKeyword_1()); }
	'manual'
	{ after(grammarAccess.getManualTriggerAccess().getManualKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeleteStep__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteStep__Group__0__Impl
	rule__DeleteStep__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStep__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteStepAccess().getDeleteKeyword_0()); }
	'delete'
	{ after(grammarAccess.getDeleteStepAccess().getDeleteKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStep__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteStep__Group__1__Impl
	rule__DeleteStep__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStep__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteStepAccess().getStepKeyword_1()); }
	'step'
	{ after(grammarAccess.getDeleteStepAccess().getStepKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStep__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteStep__Group__2__Impl
	rule__DeleteStep__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStep__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteStepAccess().getIndexAssignment_2()); }
	(rule__DeleteStep__IndexAssignment_2)
	{ after(grammarAccess.getDeleteStepAccess().getIndexAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStep__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteStep__Group__3__Impl
	rule__DeleteStep__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStep__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteStepAccess().getOnKeyword_3()); }
	'on'
	{ after(grammarAccess.getDeleteStepAccess().getOnKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStep__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteStep__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStep__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteStepAccess().getJobAssignment_4()); }
	(rule__DeleteStep__JobAssignment_4)
	{ after(grammarAccess.getDeleteStepAccess().getJobAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddStep__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddStep__Group__0__Impl
	rule__AddStep__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddStep__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddStepAccess().getInsertKeyword_0()); }
	'insert'
	{ after(grammarAccess.getAddStepAccess().getInsertKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddStep__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddStep__Group__1__Impl
	rule__AddStep__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AddStep__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddStepAccess().getStepKeyword_1()); }
	'step'
	{ after(grammarAccess.getAddStepAccess().getStepKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddStep__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddStep__Group__2__Impl
	rule__AddStep__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AddStep__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddStepAccess().getIndexAssignment_2()); }
	(rule__AddStep__IndexAssignment_2)
	{ after(grammarAccess.getAddStepAccess().getIndexAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddStep__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddStep__Group__3__Impl
	rule__AddStep__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AddStep__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddStepAccess().getOnKeyword_3()); }
	'on'
	{ after(grammarAccess.getAddStepAccess().getOnKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddStep__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddStep__Group__4__Impl
	rule__AddStep__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AddStep__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddStepAccess().getJobAssignment_4()); }
	(rule__AddStep__JobAssignment_4)
	{ after(grammarAccess.getAddStepAccess().getJobAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddStep__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddStep__Group__5__Impl
	rule__AddStep__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AddStep__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddStepAccess().getWithKeyword_5()); }
	'with'
	{ after(grammarAccess.getAddStepAccess().getWithKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddStep__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddStep__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddStep__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddStepAccess().getStepAssignment_6()); }
	(rule__AddStep__StepAssignment_6)
	{ after(grammarAccess.getAddStepAccess().getStepAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReplaceStep__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplaceStep__Group__0__Impl
	rule__ReplaceStep__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceStep__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplaceStepAccess().getReplaceKeyword_0()); }
	'replace'
	{ after(grammarAccess.getReplaceStepAccess().getReplaceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceStep__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplaceStep__Group__1__Impl
	rule__ReplaceStep__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceStep__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplaceStepAccess().getStepKeyword_1()); }
	'step'
	{ after(grammarAccess.getReplaceStepAccess().getStepKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceStep__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplaceStep__Group__2__Impl
	rule__ReplaceStep__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceStep__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplaceStepAccess().getIndexAssignment_2()); }
	(rule__ReplaceStep__IndexAssignment_2)
	{ after(grammarAccess.getReplaceStepAccess().getIndexAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceStep__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplaceStep__Group__3__Impl
	rule__ReplaceStep__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceStep__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplaceStepAccess().getOnKeyword_3()); }
	'on'
	{ after(grammarAccess.getReplaceStepAccess().getOnKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceStep__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplaceStep__Group__4__Impl
	rule__ReplaceStep__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceStep__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplaceStepAccess().getJobAssignment_4()); }
	(rule__ReplaceStep__JobAssignment_4)
	{ after(grammarAccess.getReplaceStepAccess().getJobAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceStep__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplaceStep__Group__5__Impl
	rule__ReplaceStep__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceStep__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplaceStepAccess().getWithKeyword_5()); }
	'with'
	{ after(grammarAccess.getReplaceStepAccess().getWithKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceStep__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplaceStep__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceStep__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplaceStepAccess().getStepAssignment_6()); }
	(rule__ReplaceStep__StepAssignment_6)
	{ after(grammarAccess.getReplaceStepAccess().getStepAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalStep__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalStep__Group__0__Impl
	rule__ConditionalStep__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStep__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalStepAccess().getConditionalKeyword_0()); }
	'conditional'
	{ after(grammarAccess.getConditionalStepAccess().getConditionalKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStep__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalStep__Group__1__Impl
	rule__ConditionalStep__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStep__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalStepAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getConditionalStepAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStep__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalStep__Group__2__Impl
	rule__ConditionalStep__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStep__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalStepAccess().getIfKeyword_2()); }
	'if'
	{ after(grammarAccess.getConditionalStepAccess().getIfKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStep__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalStep__Group__3__Impl
	rule__ConditionalStep__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStep__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalStepAccess().getIfConditionAssignment_3()); }
	(rule__ConditionalStep__IfConditionAssignment_3)
	{ after(grammarAccess.getConditionalStepAccess().getIfConditionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStep__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalStep__Group__4__Impl
	rule__ConditionalStep__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStep__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalStepAccess().getThenKeyword_4()); }
	'then'
	{ after(grammarAccess.getConditionalStepAccess().getThenKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStep__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalStep__Group__5__Impl
	rule__ConditionalStep__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStep__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getConditionalStepAccess().getThenRunAssignment_5()); }
		(rule__ConditionalStep__ThenRunAssignment_5)
		{ after(grammarAccess.getConditionalStepAccess().getThenRunAssignment_5()); }
	)
	(
		{ before(grammarAccess.getConditionalStepAccess().getThenRunAssignment_5()); }
		(rule__ConditionalStep__ThenRunAssignment_5)*
		{ after(grammarAccess.getConditionalStepAccess().getThenRunAssignment_5()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStep__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalStep__Group__6__Impl
	rule__ConditionalStep__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStep__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalStepAccess().getGroup_6()); }
	(rule__ConditionalStep__Group_6__0)?
	{ after(grammarAccess.getConditionalStepAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStep__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalStep__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStep__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalStepAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getConditionalStepAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalStep__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalStep__Group_6__0__Impl
	rule__ConditionalStep__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStep__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalStepAccess().getElseKeyword_6_0()); }
	'else'
	{ after(grammarAccess.getConditionalStepAccess().getElseKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStep__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalStep__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStep__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getConditionalStepAccess().getElseRunAssignment_6_1()); }
		(rule__ConditionalStep__ElseRunAssignment_6_1)
		{ after(grammarAccess.getConditionalStepAccess().getElseRunAssignment_6_1()); }
	)
	(
		{ before(grammarAccess.getConditionalStepAccess().getElseRunAssignment_6_1()); }
		(rule__ConditionalStep__ElseRunAssignment_6_1)*
		{ after(grammarAccess.getConditionalStepAccess().getElseRunAssignment_6_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NonConditionalStep__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonConditionalStep__Group__0__Impl
	rule__NonConditionalStep__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonConditionalStepAccess().getAlternatives_0()); }
	(rule__NonConditionalStep__Alternatives_0)
	{ after(grammarAccess.getNonConditionalStepAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonConditionalStep__Group__1__Impl
	rule__NonConditionalStep__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonConditionalStepAccess().getGroup_1()); }
	(rule__NonConditionalStep__Group_1__0)?
	{ after(grammarAccess.getNonConditionalStepAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonConditionalStep__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonConditionalStepAccess().getRightCurlyBracketKeyword_2()); }
	'}'
	{ after(grammarAccess.getNonConditionalStepAccess().getRightCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NonConditionalStep__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonConditionalStep__Group_0_0__0__Impl
	rule__NonConditionalStep__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonConditionalStepAccess().getCommandAction_0_0_0()); }
	()
	{ after(grammarAccess.getNonConditionalStepAccess().getCommandAction_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonConditionalStep__Group_0_0__1__Impl
	rule__NonConditionalStep__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonConditionalStepAccess().getCommandKeyword_0_0_1()); }
	'command'
	{ after(grammarAccess.getNonConditionalStepAccess().getCommandKeyword_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonConditionalStep__Group_0_0__2__Impl
	rule__NonConditionalStep__Group_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonConditionalStepAccess().getLeftCurlyBracketKeyword_0_0_2()); }
	'{'
	{ after(grammarAccess.getNonConditionalStepAccess().getLeftCurlyBracketKeyword_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_0_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonConditionalStep__Group_0_0__3__Impl
	rule__NonConditionalStep__Group_0_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_0_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonConditionalStepAccess().getScriptKeyword_0_0_3()); }
	'script'
	{ after(grammarAccess.getNonConditionalStepAccess().getScriptKeyword_0_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_0_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonConditionalStep__Group_0_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_0_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonConditionalStepAccess().getProgramAssignment_0_0_4()); }
	(rule__NonConditionalStep__ProgramAssignment_0_0_4)
	{ after(grammarAccess.getNonConditionalStepAccess().getProgramAssignment_0_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NonConditionalStep__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonConditionalStep__Group_0_1__0__Impl
	rule__NonConditionalStep__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonConditionalStepAccess().getPluginAction_0_1_0()); }
	()
	{ after(grammarAccess.getNonConditionalStepAccess().getPluginAction_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonConditionalStep__Group_0_1__1__Impl
	rule__NonConditionalStep__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonConditionalStepAccess().getPluginKeyword_0_1_1()); }
	'plugin'
	{ after(grammarAccess.getNonConditionalStepAccess().getPluginKeyword_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_0_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonConditionalStep__Group_0_1__2__Impl
	rule__NonConditionalStep__Group_0_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_0_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonConditionalStepAccess().getLeftCurlyBracketKeyword_0_1_2()); }
	'{'
	{ after(grammarAccess.getNonConditionalStepAccess().getLeftCurlyBracketKeyword_0_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_0_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonConditionalStep__Group_0_1__3__Impl
	rule__NonConditionalStep__Group_0_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_0_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonConditionalStepAccess().getNameKeyword_0_1_3()); }
	'name'
	{ after(grammarAccess.getNonConditionalStepAccess().getNameKeyword_0_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_0_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonConditionalStep__Group_0_1__4__Impl
	rule__NonConditionalStep__Group_0_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_0_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonConditionalStepAccess().getPluginNameAssignment_0_1_4()); }
	(rule__NonConditionalStep__PluginNameAssignment_0_1_4)
	{ after(grammarAccess.getNonConditionalStepAccess().getPluginNameAssignment_0_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_0_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonConditionalStep__Group_0_1__5__Impl
	rule__NonConditionalStep__Group_0_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_0_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonConditionalStepAccess().getVersionKeyword_0_1_5()); }
	'version'
	{ after(grammarAccess.getNonConditionalStepAccess().getVersionKeyword_0_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_0_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonConditionalStep__Group_0_1__6__Impl
	rule__NonConditionalStep__Group_0_1__7
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_0_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonConditionalStepAccess().getVersionAssignment_0_1_6()); }
	(rule__NonConditionalStep__VersionAssignment_0_1_6)
	{ after(grammarAccess.getNonConditionalStepAccess().getVersionAssignment_0_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_0_1__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonConditionalStep__Group_0_1__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_0_1__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonConditionalStepAccess().getGroup_0_1_7()); }
	(rule__NonConditionalStep__Group_0_1_7__0)?
	{ after(grammarAccess.getNonConditionalStepAccess().getGroup_0_1_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NonConditionalStep__Group_0_1_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonConditionalStep__Group_0_1_7__0__Impl
	rule__NonConditionalStep__Group_0_1_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_0_1_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonConditionalStepAccess().getArgsKeyword_0_1_7_0()); }
	'args'
	{ after(grammarAccess.getNonConditionalStepAccess().getArgsKeyword_0_1_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_0_1_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonConditionalStep__Group_0_1_7__1__Impl
	rule__NonConditionalStep__Group_0_1_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_0_1_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonConditionalStepAccess().getLeftCurlyBracketKeyword_0_1_7_1()); }
	'{'
	{ after(grammarAccess.getNonConditionalStepAccess().getLeftCurlyBracketKeyword_0_1_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_0_1_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonConditionalStep__Group_0_1_7__2__Impl
	rule__NonConditionalStep__Group_0_1_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_0_1_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getNonConditionalStepAccess().getKwargsAssignment_0_1_7_2()); }
		(rule__NonConditionalStep__KwargsAssignment_0_1_7_2)
		{ after(grammarAccess.getNonConditionalStepAccess().getKwargsAssignment_0_1_7_2()); }
	)
	(
		{ before(grammarAccess.getNonConditionalStepAccess().getKwargsAssignment_0_1_7_2()); }
		(rule__NonConditionalStep__KwargsAssignment_0_1_7_2)*
		{ after(grammarAccess.getNonConditionalStepAccess().getKwargsAssignment_0_1_7_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_0_1_7__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonConditionalStep__Group_0_1_7__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_0_1_7__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonConditionalStepAccess().getRightCurlyBracketKeyword_0_1_7_3()); }
	'}'
	{ after(grammarAccess.getNonConditionalStepAccess().getRightCurlyBracketKeyword_0_1_7_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NonConditionalStep__Group_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonConditionalStep__Group_0_2__0__Impl
	rule__NonConditionalStep__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonConditionalStepAccess().getCheckoutAction_0_2_0()); }
	()
	{ after(grammarAccess.getNonConditionalStepAccess().getCheckoutAction_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonConditionalStep__Group_0_2__1__Impl
	rule__NonConditionalStep__Group_0_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonConditionalStepAccess().getCheckoutKeyword_0_2_1()); }
	'checkout'
	{ after(grammarAccess.getNonConditionalStepAccess().getCheckoutKeyword_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_0_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonConditionalStep__Group_0_2__2__Impl
	rule__NonConditionalStep__Group_0_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_0_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonConditionalStepAccess().getLeftCurlyBracketKeyword_0_2_2()); }
	'{'
	{ after(grammarAccess.getNonConditionalStepAccess().getLeftCurlyBracketKeyword_0_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_0_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonConditionalStep__Group_0_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_0_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonConditionalStepAccess().getGroup_0_2_3()); }
	(rule__NonConditionalStep__Group_0_2_3__0)?
	{ after(grammarAccess.getNonConditionalStepAccess().getGroup_0_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NonConditionalStep__Group_0_2_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonConditionalStep__Group_0_2_3__0__Impl
	rule__NonConditionalStep__Group_0_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_0_2_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonConditionalStepAccess().getPathKeyword_0_2_3_0()); }
	'path'
	{ after(grammarAccess.getNonConditionalStepAccess().getPathKeyword_0_2_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_0_2_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonConditionalStep__Group_0_2_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_0_2_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonConditionalStepAccess().getPathAssignment_0_2_3_1()); }
	(rule__NonConditionalStep__PathAssignment_0_2_3_1)
	{ after(grammarAccess.getNonConditionalStepAccess().getPathAssignment_0_2_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NonConditionalStep__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonConditionalStep__Group_1__0__Impl
	rule__NonConditionalStep__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonConditionalStepAccess().getEnvironmentKeyword_1_0()); }
	'environment'
	{ after(grammarAccess.getNonConditionalStepAccess().getEnvironmentKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonConditionalStep__Group_1__1__Impl
	rule__NonConditionalStep__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonConditionalStepAccess().getLeftCurlyBracketKeyword_1_1()); }
	'{'
	{ after(grammarAccess.getNonConditionalStepAccess().getLeftCurlyBracketKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonConditionalStep__Group_1__2__Impl
	rule__NonConditionalStep__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getNonConditionalStepAccess().getEnvironmentVariablesAssignment_1_2()); }
		(rule__NonConditionalStep__EnvironmentVariablesAssignment_1_2)
		{ after(grammarAccess.getNonConditionalStepAccess().getEnvironmentVariablesAssignment_1_2()); }
	)
	(
		{ before(grammarAccess.getNonConditionalStepAccess().getEnvironmentVariablesAssignment_1_2()); }
		(rule__NonConditionalStep__EnvironmentVariablesAssignment_1_2)*
		{ after(grammarAccess.getNonConditionalStepAccess().getEnvironmentVariablesAssignment_1_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonConditionalStep__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonConditionalStepAccess().getRightCurlyBracketKeyword_1_3()); }
	'}'
	{ after(grammarAccess.getNonConditionalStepAccess().getRightCurlyBracketKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__0__Impl
	rule__Assignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getKeyAssignment_0()); }
	(rule__Assignment__KeyAssignment_0)
	{ after(grammarAccess.getAssignmentAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__1__Impl
	rule__Assignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getValueAssignment_2()); }
	(rule__Assignment__ValueAssignment_2)
	{ after(grammarAccess.getAssignmentAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CircleCITransformation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CircleCITransformation__Group__0__Impl
	rule__CircleCITransformation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CircleCITransformation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCircleCITransformationAccess().getOnKeyword_0()); }
	'on'
	{ after(grammarAccess.getCircleCITransformationAccess().getOnKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CircleCITransformation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CircleCITransformation__Group__1__Impl
	rule__CircleCITransformation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CircleCITransformation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCircleCITransformationAccess().getCircleciKeyword_1()); }
	'circleci'
	{ after(grammarAccess.getCircleCITransformationAccess().getCircleciKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CircleCITransformation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CircleCITransformation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CircleCITransformation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCircleCITransformationAccess().getAlternatives_2()); }
	(rule__CircleCITransformation__Alternatives_2)
	{ after(grammarAccess.getCircleCITransformationAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetCircleCIVersion__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetCircleCIVersion__Group__0__Impl
	rule__SetCircleCIVersion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCircleCIVersion__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetCircleCIVersionAccess().getSetKeyword_0()); }
	'set'
	{ after(grammarAccess.getSetCircleCIVersionAccess().getSetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCircleCIVersion__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetCircleCIVersion__Group__1__Impl
	rule__SetCircleCIVersion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCircleCIVersion__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetCircleCIVersionAccess().getVersionKeyword_1()); }
	'version'
	{ after(grammarAccess.getSetCircleCIVersionAccess().getVersionKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCircleCIVersion__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetCircleCIVersion__Group__2__Impl
	rule__SetCircleCIVersion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCircleCIVersion__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetCircleCIVersionAccess().getToKeyword_2()); }
	('to')?
	{ after(grammarAccess.getSetCircleCIVersionAccess().getToKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCircleCIVersion__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetCircleCIVersion__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCircleCIVersion__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetCircleCIVersionAccess().getVersionAssignment_3()); }
	(rule__SetCircleCIVersion__VersionAssignment_3)
	{ after(grammarAccess.getSetCircleCIVersionAccess().getVersionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddExecutor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExecutor__Group__0__Impl
	rule__AddExecutor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExecutor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExecutorAccess().getAddKeyword_0()); }
	'add'
	{ after(grammarAccess.getAddExecutorAccess().getAddKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExecutor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExecutor__Group__1__Impl
	rule__AddExecutor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExecutor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExecutorAccess().getExecutorKeyword_1()); }
	'executor'
	{ after(grammarAccess.getAddExecutorAccess().getExecutorKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExecutor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExecutor__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExecutor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExecutorAccess().getAddOrbReferenceExecutorParserRuleCall_2()); }
	ruleAddOrbReferenceExecutor
	{ after(grammarAccess.getAddExecutorAccess().getAddOrbReferenceExecutorParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddOrbReferenceExecutor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddOrbReferenceExecutor__Group__0__Impl
	rule__AddOrbReferenceExecutor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOrbReferenceExecutor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddOrbReferenceExecutorAccess().getExecutorAssignment_0()); }
	(rule__AddOrbReferenceExecutor__ExecutorAssignment_0)
	{ after(grammarAccess.getAddOrbReferenceExecutorAccess().getExecutorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOrbReferenceExecutor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddOrbReferenceExecutor__Group__1__Impl
	rule__AddOrbReferenceExecutor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOrbReferenceExecutor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddOrbReferenceExecutorAccess().getOnKeyword_1()); }
	'on'
	{ after(grammarAccess.getAddOrbReferenceExecutorAccess().getOnKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOrbReferenceExecutor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddOrbReferenceExecutor__Group__2__Impl
	rule__AddOrbReferenceExecutor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOrbReferenceExecutor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddOrbReferenceExecutorAccess().getJobNameAssignment_2()); }
	(rule__AddOrbReferenceExecutor__JobNameAssignment_2)
	{ after(grammarAccess.getAddOrbReferenceExecutorAccess().getJobNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOrbReferenceExecutor__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddOrbReferenceExecutor__Group__3__Impl
	rule__AddOrbReferenceExecutor__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOrbReferenceExecutor__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddOrbReferenceExecutorAccess().getFromKeyword_3()); }
	('from')?
	{ after(grammarAccess.getAddOrbReferenceExecutorAccess().getFromKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOrbReferenceExecutor__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddOrbReferenceExecutor__Group__4__Impl
	rule__AddOrbReferenceExecutor__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOrbReferenceExecutor__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddOrbReferenceExecutorAccess().getOrbKeyword_4()); }
	'orb'
	{ after(grammarAccess.getAddOrbReferenceExecutorAccess().getOrbKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOrbReferenceExecutor__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddOrbReferenceExecutor__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOrbReferenceExecutor__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddOrbReferenceExecutorAccess().getOrbAssignment_5()); }
	(rule__AddOrbReferenceExecutor__OrbAssignment_5)
	{ after(grammarAccess.getAddOrbReferenceExecutorAccess().getOrbAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectWorkflow__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectWorkflow__Group__0__Impl
	rule__SelectWorkflow__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectWorkflow__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectWorkflowAccess().getSelectKeyword_0()); }
	'select'
	{ after(grammarAccess.getSelectWorkflowAccess().getSelectKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectWorkflow__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectWorkflow__Group__1__Impl
	rule__SelectWorkflow__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectWorkflow__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectWorkflowAccess().getWorkflowKeyword_1()); }
	'workflow'
	{ after(grammarAccess.getSelectWorkflowAccess().getWorkflowKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectWorkflow__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectWorkflow__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectWorkflow__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectWorkflowAccess().getNameAssignment_2()); }
	(rule__SelectWorkflow__NameAssignment_2)
	{ after(grammarAccess.getSelectWorkflowAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringToStringMapEntry__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringToStringMapEntry__Group__0__Impl
	rule__StringToStringMapEntry__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringToStringMapEntry__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringToStringMapEntryAccess().getKeyAssignment_0()); }
	(rule__StringToStringMapEntry__KeyAssignment_0)
	{ after(grammarAccess.getStringToStringMapEntryAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringToStringMapEntry__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringToStringMapEntry__Group__1__Impl
	rule__StringToStringMapEntry__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StringToStringMapEntry__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringToStringMapEntryAccess().getToKeyword_1()); }
	'to'
	{ after(grammarAccess.getStringToStringMapEntryAccess().getToKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringToStringMapEntry__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringToStringMapEntry__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringToStringMapEntry__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringToStringMapEntryAccess().getValueAssignment_2()); }
	(rule__StringToStringMapEntry__ValueAssignment_2)
	{ after(grammarAccess.getStringToStringMapEntryAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TransformationSet__PreTIMAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransformationSetAccess().getPreTIMTSMTransformationParserRuleCall_1_3_0()); }
		ruleTSMTransformation
		{ after(grammarAccess.getTransformationSetAccess().getPreTIMTSMTransformationParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationSet__OnTIMAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransformationSetAccess().getOnTIMTIMTransformationParserRuleCall_2_3_0()); }
		ruleTIMTransformation
		{ after(grammarAccess.getTransformationSetAccess().getOnTIMTIMTransformationParserRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationSet__PostTIMAssignment_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransformationSetAccess().getPostTIMTSMTransformationParserRuleCall_3_3_0()); }
		ruleTSMTransformation
		{ after(grammarAccess.getTransformationSetAccess().getPostTIMTSMTransformationParserRuleCall_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ATLScript__ModelAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getATLScriptAccess().getModelMODELSEnumRuleCall_3_0()); }
		ruleMODELS
		{ after(grammarAccess.getATLScriptAccess().getModelMODELSEnumRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ATLScript__ScriptAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getATLScriptAccess().getScriptEStringParserRuleCall_5_0()); }
		ruleEString
		{ after(grammarAccess.getATLScriptAccess().getScriptEStringParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetImage__ConditionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetImageAccess().getConditionEStringParserRuleCall_4_0()); }
		ruleEString
		{ after(grammarAccess.getSetImageAccess().getConditionEStringParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetImage__ImageAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetImageAccess().getImageEStringParserRuleCall_6_0()); }
		ruleEString
		{ after(grammarAccess.getSetImageAccess().getImageEStringParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddPorts__ConditionAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddPortsAccess().getConditionEStringParserRuleCall_3_1_0()); }
		ruleEString
		{ after(grammarAccess.getAddPortsAccess().getConditionEStringParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddPorts__PortsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddPortsAccess().getPortsEStringParserRuleCall_6_0()); }
		ruleEString
		{ after(grammarAccess.getAddPortsAccess().getPortsEStringParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddPorts__PortsAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddPortsAccess().getPortsEStringParserRuleCall_7_1_0()); }
		ruleEString
		{ after(grammarAccess.getAddPortsAccess().getPortsEStringParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetOptions__ConditionAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetOptionsAccess().getConditionEStringParserRuleCall_3_1_0()); }
		ruleEString
		{ after(grammarAccess.getSetOptionsAccess().getConditionEStringParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetOptions__OptionsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetOptionsAccess().getOptionsEStringParserRuleCall_5_0()); }
		ruleEString
		{ after(grammarAccess.getSetOptionsAccess().getOptionsEStringParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangePlugin__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChangePluginAccess().getNameStringToStringMapEntryParserRuleCall_2_0()); }
		ruleStringToStringMapEntry
		{ after(grammarAccess.getChangePluginAccess().getNameStringToStringMapEntryParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangePlugin__VersionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChangePluginAccess().getVersionEStringParserRuleCall_4_0()); }
		ruleEString
		{ after(grammarAccess.getChangePluginAccess().getVersionEStringParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangePlugin__ArgsAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChangePluginAccess().getArgsStringToStringMapEntryParserRuleCall_5_2_0()); }
		ruleStringToStringMapEntry
		{ after(grammarAccess.getChangePluginAccess().getArgsStringToStringMapEntryParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceAgentLabels__ConditionAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReplaceAgentLabelsAccess().getConditionEStringParserRuleCall_2_1_0()); }
		ruleEString
		{ after(grammarAccess.getReplaceAgentLabelsAccess().getConditionEStringParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceAgentLabels__LabelsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReplaceAgentLabelsAccess().getLabelsEStringParserRuleCall_4_0()); }
		ruleEString
		{ after(grammarAccess.getReplaceAgentLabelsAccess().getLabelsEStringParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddTrigger__ConditionAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddTriggerAccess().getConditionEStringParserRuleCall_2_1_0()); }
		ruleEString
		{ after(grammarAccess.getAddTriggerAccess().getConditionEStringParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddTrigger__TriggerAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddTriggerAccess().getTriggerTriggerParserRuleCall_3_0()); }
		ruleTrigger
		{ after(grammarAccess.getAddTriggerAccess().getTriggerTriggerParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStep__IndexAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeleteStepAccess().getIndexINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getDeleteStepAccess().getIndexINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStep__JobAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeleteStepAccess().getJobEStringParserRuleCall_4_0()); }
		ruleEString
		{ after(grammarAccess.getDeleteStepAccess().getJobEStringParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddStep__IndexAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddStepAccess().getIndexINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getAddStepAccess().getIndexINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddStep__JobAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddStepAccess().getJobEStringParserRuleCall_4_0()); }
		ruleEString
		{ after(grammarAccess.getAddStepAccess().getJobEStringParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddStep__StepAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddStepAccess().getStepStepParserRuleCall_6_0()); }
		ruleStep
		{ after(grammarAccess.getAddStepAccess().getStepStepParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceStep__IndexAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReplaceStepAccess().getIndexINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getReplaceStepAccess().getIndexINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceStep__JobAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReplaceStepAccess().getJobEStringParserRuleCall_4_0()); }
		ruleEString
		{ after(grammarAccess.getReplaceStepAccess().getJobEStringParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceStep__StepAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReplaceStepAccess().getStepStepParserRuleCall_6_0()); }
		ruleStep
		{ after(grammarAccess.getReplaceStepAccess().getStepStepParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStep__IfConditionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalStepAccess().getIfConditionStringLiteralParserRuleCall_3_0()); }
		ruleStringLiteral
		{ after(grammarAccess.getConditionalStepAccess().getIfConditionStringLiteralParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStep__ThenRunAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalStepAccess().getThenRunStepParserRuleCall_5_0()); }
		ruleStep
		{ after(grammarAccess.getConditionalStepAccess().getThenRunStepParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStep__ElseRunAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalStepAccess().getElseRunStepParserRuleCall_6_1_0()); }
		ruleStep
		{ after(grammarAccess.getConditionalStepAccess().getElseRunStepParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__ProgramAssignment_0_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNonConditionalStepAccess().getProgramStringLiteralParserRuleCall_0_0_4_0()); }
		ruleStringLiteral
		{ after(grammarAccess.getNonConditionalStepAccess().getProgramStringLiteralParserRuleCall_0_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__PluginNameAssignment_0_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNonConditionalStepAccess().getPluginNameEStringParserRuleCall_0_1_4_0()); }
		ruleEString
		{ after(grammarAccess.getNonConditionalStepAccess().getPluginNameEStringParserRuleCall_0_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__VersionAssignment_0_1_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNonConditionalStepAccess().getVersionEStringParserRuleCall_0_1_6_0()); }
		ruleEString
		{ after(grammarAccess.getNonConditionalStepAccess().getVersionEStringParserRuleCall_0_1_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__KwargsAssignment_0_1_7_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNonConditionalStepAccess().getKwargsAssignmentParserRuleCall_0_1_7_2_0()); }
		ruleAssignment
		{ after(grammarAccess.getNonConditionalStepAccess().getKwargsAssignmentParserRuleCall_0_1_7_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__PathAssignment_0_2_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNonConditionalStepAccess().getPathStringLiteralParserRuleCall_0_2_3_1_0()); }
		ruleStringLiteral
		{ after(grammarAccess.getNonConditionalStepAccess().getPathStringLiteralParserRuleCall_0_2_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonConditionalStep__EnvironmentVariablesAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNonConditionalStepAccess().getEnvironmentVariablesAssignmentParserRuleCall_1_2_0()); }
		ruleAssignment
		{ after(grammarAccess.getNonConditionalStepAccess().getEnvironmentVariablesAssignmentParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringLiteralAccess().getValueEStringParserRuleCall_0()); }
		ruleEString
		{ after(grammarAccess.getStringLiteralAccess().getValueEStringParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getKeyVariableDeclarationParserRuleCall_0_0()); }
		ruleVariableDeclaration
		{ after(grammarAccess.getAssignmentAccess().getKeyVariableDeclarationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getValueStringLiteralParserRuleCall_2_0()); }
		ruleStringLiteral
		{ after(grammarAccess.getAssignmentAccess().getValueStringLiteralParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getNameEStringParserRuleCall_0()); }
		ruleEString
		{ after(grammarAccess.getVariableDeclarationAccess().getNameEStringParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCircleCIVersion__VersionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetCircleCIVersionAccess().getVersionEStringParserRuleCall_3_0()); }
		ruleEString
		{ after(grammarAccess.getSetCircleCIVersionAccess().getVersionEStringParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOrbReferenceExecutor__ExecutorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddOrbReferenceExecutorAccess().getExecutorEStringParserRuleCall_0_0()); }
		ruleEString
		{ after(grammarAccess.getAddOrbReferenceExecutorAccess().getExecutorEStringParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOrbReferenceExecutor__JobNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddOrbReferenceExecutorAccess().getJobNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getAddOrbReferenceExecutorAccess().getJobNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOrbReferenceExecutor__OrbAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddOrbReferenceExecutorAccess().getOrbEStringParserRuleCall_5_0()); }
		ruleEString
		{ after(grammarAccess.getAddOrbReferenceExecutorAccess().getOrbEStringParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectWorkflow__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectWorkflowAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getSelectWorkflowAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringToStringMapEntry__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringToStringMapEntryAccess().getKeyEStringParserRuleCall_0_0()); }
		ruleEString
		{ after(grammarAccess.getStringToStringMapEntryAccess().getKeyEStringParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringToStringMapEntry__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringToStringMapEntryAccess().getValueEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getStringToStringMapEntryAccess().getValueEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
