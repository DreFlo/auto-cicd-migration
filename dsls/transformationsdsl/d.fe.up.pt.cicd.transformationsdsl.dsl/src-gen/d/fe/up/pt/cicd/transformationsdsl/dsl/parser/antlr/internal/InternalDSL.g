/*
 * generated by Xtext 2.33.0
 */
grammar InternalDSL;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package d.fe.up.pt.cicd.transformationsdsl.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package d.fe.up.pt.cicd.transformationsdsl.dsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import d.fe.up.pt.cicd.transformationsdsl.dsl.services.DSLGrammarAccess;

}

@parser::members {

 	private DSLGrammarAccess grammarAccess;

    public InternalDSLParser(TokenStream input, DSLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "TransformationSet";
   	}

   	@Override
   	protected DSLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleTransformationSet
entryRuleTransformationSet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTransformationSetRule()); }
	iv_ruleTransformationSet=ruleTransformationSet
	{ $current=$iv_ruleTransformationSet.current; }
	EOF;

// Rule TransformationSet
ruleTransformationSet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTransformationSetAccess().getTransformationSetAction_0(),
					$current);
			}
		)
		(
			otherlv_1='before'
			{
				newLeafNode(otherlv_1, grammarAccess.getTransformationSetAccess().getBeforeKeyword_1_0());
			}
			(
				otherlv_2='translating'
				{
					newLeafNode(otherlv_2, grammarAccess.getTransformationSetAccess().getTranslatingKeyword_1_1());
				}
			)?
			otherlv_3='{'
			{
				newLeafNode(otherlv_3, grammarAccess.getTransformationSetAccess().getLeftCurlyBracketKeyword_1_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTransformationSetAccess().getPreTIMTSMTransformationParserRuleCall_1_3_0());
					}
					lv_preTIM_4_0=ruleTSMTransformation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTransformationSetRule());
						}
						add(
							$current,
							"preTIM",
							lv_preTIM_4_0,
							"d.fe.up.pt.cicd.transformationsdsl.dsl.DSL.TSMTransformation");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_5='}'
			{
				newLeafNode(otherlv_5, grammarAccess.getTransformationSetAccess().getRightCurlyBracketKeyword_1_4());
			}
		)?
		(
			otherlv_6='while'
			{
				newLeafNode(otherlv_6, grammarAccess.getTransformationSetAccess().getWhileKeyword_2_0());
			}
			(
				otherlv_7='translating'
				{
					newLeafNode(otherlv_7, grammarAccess.getTransformationSetAccess().getTranslatingKeyword_2_1());
				}
			)?
			otherlv_8='{'
			{
				newLeafNode(otherlv_8, grammarAccess.getTransformationSetAccess().getLeftCurlyBracketKeyword_2_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTransformationSetAccess().getOnTIMTIMTransformationParserRuleCall_2_3_0());
					}
					lv_onTIM_9_0=ruleTIMTransformation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTransformationSetRule());
						}
						add(
							$current,
							"onTIM",
							lv_onTIM_9_0,
							"d.fe.up.pt.cicd.transformationsdsl.dsl.DSL.TIMTransformation");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_10='}'
			{
				newLeafNode(otherlv_10, grammarAccess.getTransformationSetAccess().getRightCurlyBracketKeyword_2_4());
			}
		)?
		(
			otherlv_11='after'
			{
				newLeafNode(otherlv_11, grammarAccess.getTransformationSetAccess().getAfterKeyword_3_0());
			}
			(
				otherlv_12='translating'
				{
					newLeafNode(otherlv_12, grammarAccess.getTransformationSetAccess().getTranslatingKeyword_3_1());
				}
			)?
			otherlv_13='{'
			{
				newLeafNode(otherlv_13, grammarAccess.getTransformationSetAccess().getLeftCurlyBracketKeyword_3_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTransformationSetAccess().getPostTIMTSMTransformationParserRuleCall_3_3_0());
					}
					lv_postTIM_14_0=ruleTSMTransformation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTransformationSetRule());
						}
						add(
							$current,
							"postTIM",
							lv_postTIM_14_0,
							"d.fe.up.pt.cicd.transformationsdsl.dsl.DSL.TSMTransformation");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_15='}'
			{
				newLeafNode(otherlv_15, grammarAccess.getTransformationSetAccess().getRightCurlyBracketKeyword_3_4());
			}
		)?
	)
;

// Entry rule entryRuleTSMTransformation
entryRuleTSMTransformation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTSMTransformationRule()); }
	iv_ruleTSMTransformation=ruleTSMTransformation
	{ $current=$iv_ruleTSMTransformation.current; }
	EOF;

// Rule TSMTransformation
ruleTSMTransformation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTSMTransformationAccess().getATLScriptParserRuleCall_0());
		}
		this_ATLScript_0=ruleATLScript
		{
			$current = $this_ATLScript_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTSMTransformationAccess().getCircleCITransformationParserRuleCall_1());
		}
		this_CircleCITransformation_1=ruleCircleCITransformation
		{
			$current = $this_CircleCITransformation_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleATLScript
entryRuleATLScript returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getATLScriptRule()); }
	iv_ruleATLScript=ruleATLScript
	{ $current=$iv_ruleATLScript.current; }
	EOF;

// Rule ATLScript
ruleATLScript returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='run'
		{
			newLeafNode(otherlv_0, grammarAccess.getATLScriptAccess().getRunKeyword_0());
		}
		otherlv_1='atl'
		{
			newLeafNode(otherlv_1, grammarAccess.getATLScriptAccess().getAtlKeyword_1());
		}
		(
			otherlv_2='on'
			{
				newLeafNode(otherlv_2, grammarAccess.getATLScriptAccess().getOnKeyword_2());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getATLScriptAccess().getModelMODELSEnumRuleCall_3_0());
				}
				lv_model_3_0=ruleMODELS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getATLScriptRule());
					}
					set(
						$current,
						"model",
						lv_model_3_0,
						"d.fe.up.pt.cicd.transformationsdsl.dsl.DSL.MODELS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getATLScriptAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getATLScriptAccess().getScriptEStringParserRuleCall_5_0());
				}
				lv_script_5_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getATLScriptRule());
					}
					set(
						$current,
						"script",
						lv_script_5_0,
						"d.fe.up.pt.cicd.transformationsdsl.dsl.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getATLScriptAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleTIMTransformation
entryRuleTIMTransformation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTIMTransformationRule()); }
	iv_ruleTIMTransformation=ruleTIMTransformation
	{ $current=$iv_ruleTIMTransformation.current; }
	EOF;

// Rule TIMTransformation
ruleTIMTransformation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTIMTransformationAccess().getATLScriptParserRuleCall_0());
		}
		this_ATLScript_0=ruleATLScript
		{
			$current = $this_ATLScript_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTIMTransformationAccess().getChangePluginParserRuleCall_1());
		}
		this_ChangePlugin_1=ruleChangePlugin
		{
			$current = $this_ChangePlugin_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTIMTransformationAccess().getReplaceAgentLabelsParserRuleCall_2());
		}
		this_ReplaceAgentLabels_2=ruleReplaceAgentLabels
		{
			$current = $this_ReplaceAgentLabels_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTIMTransformationAccess().getAddTriggerParserRuleCall_3());
		}
		this_AddTrigger_3=ruleAddTrigger
		{
			$current = $this_AddTrigger_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTIMTransformationAccess().getReplaceStepParserRuleCall_4());
		}
		this_ReplaceStep_4=ruleReplaceStep
		{
			$current = $this_ReplaceStep_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTIMTransformationAccess().getDeleteStepParserRuleCall_5());
		}
		this_DeleteStep_5=ruleDeleteStep
		{
			$current = $this_DeleteStep_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTIMTransformationAccess().getAddStepParserRuleCall_6());
		}
		this_AddStep_6=ruleAddStep
		{
			$current = $this_AddStep_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTIMTransformationAccess().getAddPortsParserRuleCall_7());
		}
		this_AddPorts_7=ruleAddPorts
		{
			$current = $this_AddPorts_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTIMTransformationAccess().getSetOptionsParserRuleCall_8());
		}
		this_SetOptions_8=ruleSetOptions
		{
			$current = $this_SetOptions_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTIMTransformationAccess().getSetImageParserRuleCall_9());
		}
		this_SetImage_9=ruleSetImage
		{
			$current = $this_SetImage_9.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSetImage
entryRuleSetImage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSetImageRule()); }
	iv_ruleSetImage=ruleSetImage
	{ $current=$iv_ruleSetImage.current; }
	EOF;

// Rule SetImage
ruleSetImage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='set'
		{
			newLeafNode(otherlv_0, grammarAccess.getSetImageAccess().getSetKeyword_0());
		}
		otherlv_1='container'
		{
			newLeafNode(otherlv_1, grammarAccess.getSetImageAccess().getContainerKeyword_1());
		}
		otherlv_2='image'
		{
			newLeafNode(otherlv_2, grammarAccess.getSetImageAccess().getImageKeyword_2());
		}
		otherlv_3='when'
		{
			newLeafNode(otherlv_3, grammarAccess.getSetImageAccess().getWhenKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSetImageAccess().getConditionEStringParserRuleCall_4_0());
				}
				lv_condition_4_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSetImageRule());
					}
					set(
						$current,
						"condition",
						lv_condition_4_0,
						"d.fe.up.pt.cicd.transformationsdsl.dsl.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='to'
		{
			newLeafNode(otherlv_5, grammarAccess.getSetImageAccess().getToKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSetImageAccess().getImageEStringParserRuleCall_6_0());
				}
				lv_image_6_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSetImageRule());
					}
					set(
						$current,
						"image",
						lv_image_6_0,
						"d.fe.up.pt.cicd.transformationsdsl.dsl.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAddPorts
entryRuleAddPorts returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAddPortsRule()); }
	iv_ruleAddPorts=ruleAddPorts
	{ $current=$iv_ruleAddPorts.current; }
	EOF;

// Rule AddPorts
ruleAddPorts returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='add'
		{
			newLeafNode(otherlv_0, grammarAccess.getAddPortsAccess().getAddKeyword_0());
		}
		otherlv_1='container'
		{
			newLeafNode(otherlv_1, grammarAccess.getAddPortsAccess().getContainerKeyword_1());
		}
		otherlv_2='ports'
		{
			newLeafNode(otherlv_2, grammarAccess.getAddPortsAccess().getPortsKeyword_2());
		}
		(
			otherlv_3='when'
			{
				newLeafNode(otherlv_3, grammarAccess.getAddPortsAccess().getWhenKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAddPortsAccess().getConditionEStringParserRuleCall_3_1_0());
					}
					lv_condition_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAddPortsRule());
						}
						set(
							$current,
							"condition",
							lv_condition_4_0,
							"d.fe.up.pt.cicd.transformationsdsl.dsl.DSL.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='ports'
		{
			newLeafNode(otherlv_5, grammarAccess.getAddPortsAccess().getPortsKeyword_4());
		}
		otherlv_6='{'
		{
			newLeafNode(otherlv_6, grammarAccess.getAddPortsAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAddPortsAccess().getPortsEStringParserRuleCall_6_0());
				}
				lv_ports_7_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAddPortsRule());
					}
					add(
						$current,
						"ports",
						lv_ports_7_0,
						"d.fe.up.pt.cicd.transformationsdsl.dsl.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_8=','
			{
				newLeafNode(otherlv_8, grammarAccess.getAddPortsAccess().getCommaKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAddPortsAccess().getPortsEStringParserRuleCall_7_1_0());
					}
					lv_ports_9_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAddPortsRule());
						}
						add(
							$current,
							"ports",
							lv_ports_9_0,
							"d.fe.up.pt.cicd.transformationsdsl.dsl.DSL.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getAddPortsAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleSetOptions
entryRuleSetOptions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSetOptionsRule()); }
	iv_ruleSetOptions=ruleSetOptions
	{ $current=$iv_ruleSetOptions.current; }
	EOF;

// Rule SetOptions
ruleSetOptions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='set'
		{
			newLeafNode(otherlv_0, grammarAccess.getSetOptionsAccess().getSetKeyword_0());
		}
		otherlv_1='container'
		{
			newLeafNode(otherlv_1, grammarAccess.getSetOptionsAccess().getContainerKeyword_1());
		}
		otherlv_2='options'
		{
			newLeafNode(otherlv_2, grammarAccess.getSetOptionsAccess().getOptionsKeyword_2());
		}
		(
			otherlv_3='when'
			{
				newLeafNode(otherlv_3, grammarAccess.getSetOptionsAccess().getWhenKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSetOptionsAccess().getConditionEStringParserRuleCall_3_1_0());
					}
					lv_condition_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSetOptionsRule());
						}
						set(
							$current,
							"condition",
							lv_condition_4_0,
							"d.fe.up.pt.cicd.transformationsdsl.dsl.DSL.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='to'
		{
			newLeafNode(otherlv_5, grammarAccess.getSetOptionsAccess().getToKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSetOptionsAccess().getOptionsEStringParserRuleCall_5_0());
				}
				lv_options_6_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSetOptionsRule());
					}
					set(
						$current,
						"options",
						lv_options_6_0,
						"d.fe.up.pt.cicd.transformationsdsl.dsl.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleChangePlugin
entryRuleChangePlugin returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getChangePluginRule()); }
	iv_ruleChangePlugin=ruleChangePlugin
	{ $current=$iv_ruleChangePlugin.current; }
	EOF;

// Rule ChangePlugin
ruleChangePlugin returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='change'
		{
			newLeafNode(otherlv_0, grammarAccess.getChangePluginAccess().getChangeKeyword_0());
		}
		otherlv_1='plugin'
		{
			newLeafNode(otherlv_1, grammarAccess.getChangePluginAccess().getPluginKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getChangePluginAccess().getNameStringToStringMapEntryParserRuleCall_2_0());
				}
				lv_name_2_0=ruleStringToStringMapEntry
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getChangePluginRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"d.fe.up.pt.cicd.transformationsdsl.dsl.DSL.StringToStringMapEntry");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='version'
		{
			newLeafNode(otherlv_3, grammarAccess.getChangePluginAccess().getVersionKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getChangePluginAccess().getVersionEStringParserRuleCall_4_0());
				}
				lv_version_4_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getChangePluginRule());
					}
					set(
						$current,
						"version",
						lv_version_4_0,
						"d.fe.up.pt.cicd.transformationsdsl.dsl.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='args'
			{
				newLeafNode(otherlv_5, grammarAccess.getChangePluginAccess().getArgsKeyword_5_0());
			}
			otherlv_6='{'
			{
				newLeafNode(otherlv_6, grammarAccess.getChangePluginAccess().getLeftCurlyBracketKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getChangePluginAccess().getArgsStringToStringMapEntryParserRuleCall_5_2_0());
					}
					lv_args_7_0=ruleStringToStringMapEntry
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getChangePluginRule());
						}
						add(
							$current,
							"args",
							lv_args_7_0,
							"d.fe.up.pt.cicd.transformationsdsl.dsl.DSL.StringToStringMapEntry");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getChangePluginAccess().getRightCurlyBracketKeyword_5_3());
			}
		)?
	)
;

// Entry rule entryRuleReplaceAgentLabels
entryRuleReplaceAgentLabels returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReplaceAgentLabelsRule()); }
	iv_ruleReplaceAgentLabels=ruleReplaceAgentLabels
	{ $current=$iv_ruleReplaceAgentLabels.current; }
	EOF;

// Rule ReplaceAgentLabels
ruleReplaceAgentLabels returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='set'
		{
			newLeafNode(otherlv_0, grammarAccess.getReplaceAgentLabelsAccess().getSetKeyword_0());
		}
		otherlv_1='labels'
		{
			newLeafNode(otherlv_1, grammarAccess.getReplaceAgentLabelsAccess().getLabelsKeyword_1());
		}
		(
			otherlv_2='when'
			{
				newLeafNode(otherlv_2, grammarAccess.getReplaceAgentLabelsAccess().getWhenKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getReplaceAgentLabelsAccess().getConditionEStringParserRuleCall_2_1_0());
					}
					lv_condition_3_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getReplaceAgentLabelsRule());
						}
						set(
							$current,
							"condition",
							lv_condition_3_0,
							"d.fe.up.pt.cicd.transformationsdsl.dsl.DSL.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getReplaceAgentLabelsAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReplaceAgentLabelsAccess().getLabelsEStringParserRuleCall_4_0());
				}
				lv_labels_5_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReplaceAgentLabelsRule());
					}
					add(
						$current,
						"labels",
						lv_labels_5_0,
						"d.fe.up.pt.cicd.transformationsdsl.dsl.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getReplaceAgentLabelsAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleAddTrigger
entryRuleAddTrigger returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAddTriggerRule()); }
	iv_ruleAddTrigger=ruleAddTrigger
	{ $current=$iv_ruleAddTrigger.current; }
	EOF;

// Rule AddTrigger
ruleAddTrigger returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='add'
		{
			newLeafNode(otherlv_0, grammarAccess.getAddTriggerAccess().getAddKeyword_0());
		}
		otherlv_1='trigger'
		{
			newLeafNode(otherlv_1, grammarAccess.getAddTriggerAccess().getTriggerKeyword_1());
		}
		(
			otherlv_2='when'
			{
				newLeafNode(otherlv_2, grammarAccess.getAddTriggerAccess().getWhenKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAddTriggerAccess().getConditionEStringParserRuleCall_2_1_0());
					}
					lv_condition_3_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAddTriggerRule());
						}
						set(
							$current,
							"condition",
							lv_condition_3_0,
							"d.fe.up.pt.cicd.transformationsdsl.dsl.DSL.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getAddTriggerAccess().getTriggerTriggerParserRuleCall_3_0());
				}
				lv_trigger_4_0=ruleTrigger
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAddTriggerRule());
					}
					set(
						$current,
						"trigger",
						lv_trigger_4_0,
						"d.fe.up.pt.cicd.transformationsdsl.dsl.DSL.Trigger");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTrigger
entryRuleTrigger returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTriggerRule()); }
	iv_ruleTrigger=ruleTrigger
	{ $current=$iv_ruleTrigger.current; }
	EOF;

// Rule Trigger
ruleTrigger returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getTriggerAccess().getManualTriggerParserRuleCall());
	}
	this_ManualTrigger_0=ruleManualTrigger
	{
		$current = $this_ManualTrigger_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleManualTrigger
entryRuleManualTrigger returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getManualTriggerRule()); }
	iv_ruleManualTrigger=ruleManualTrigger
	{ $current=$iv_ruleManualTrigger.current; }
	EOF;

// Rule ManualTrigger
ruleManualTrigger returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getManualTriggerAccess().getManualTriggerAction_0(),
					$current);
			}
		)
		otherlv_1='manual'
		{
			newLeafNode(otherlv_1, grammarAccess.getManualTriggerAccess().getManualKeyword_1());
		}
	)
;

// Entry rule entryRuleDeleteStep
entryRuleDeleteStep returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeleteStepRule()); }
	iv_ruleDeleteStep=ruleDeleteStep
	{ $current=$iv_ruleDeleteStep.current; }
	EOF;

// Rule DeleteStep
ruleDeleteStep returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='delete'
		{
			newLeafNode(otherlv_0, grammarAccess.getDeleteStepAccess().getDeleteKeyword_0());
		}
		otherlv_1='step'
		{
			newLeafNode(otherlv_1, grammarAccess.getDeleteStepAccess().getStepKeyword_1());
		}
		(
			(
				lv_index_2_0=RULE_INT
				{
					newLeafNode(lv_index_2_0, grammarAccess.getDeleteStepAccess().getIndexINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeleteStepRule());
					}
					setWithLastConsumed(
						$current,
						"index",
						lv_index_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3='on'
		{
			newLeafNode(otherlv_3, grammarAccess.getDeleteStepAccess().getOnKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDeleteStepAccess().getJobEStringParserRuleCall_4_0());
				}
				lv_job_4_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeleteStepRule());
					}
					set(
						$current,
						"job",
						lv_job_4_0,
						"d.fe.up.pt.cicd.transformationsdsl.dsl.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAddStep
entryRuleAddStep returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAddStepRule()); }
	iv_ruleAddStep=ruleAddStep
	{ $current=$iv_ruleAddStep.current; }
	EOF;

// Rule AddStep
ruleAddStep returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='insert'
		{
			newLeafNode(otherlv_0, grammarAccess.getAddStepAccess().getInsertKeyword_0());
		}
		otherlv_1='step'
		{
			newLeafNode(otherlv_1, grammarAccess.getAddStepAccess().getStepKeyword_1());
		}
		(
			(
				lv_index_2_0=RULE_INT
				{
					newLeafNode(lv_index_2_0, grammarAccess.getAddStepAccess().getIndexINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAddStepRule());
					}
					setWithLastConsumed(
						$current,
						"index",
						lv_index_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3='on'
		{
			newLeafNode(otherlv_3, grammarAccess.getAddStepAccess().getOnKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAddStepAccess().getJobEStringParserRuleCall_4_0());
				}
				lv_job_4_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAddStepRule());
					}
					set(
						$current,
						"job",
						lv_job_4_0,
						"d.fe.up.pt.cicd.transformationsdsl.dsl.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='with'
		{
			newLeafNode(otherlv_5, grammarAccess.getAddStepAccess().getWithKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAddStepAccess().getStepStepParserRuleCall_6_0());
				}
				lv_step_6_0=ruleStep
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAddStepRule());
					}
					set(
						$current,
						"step",
						lv_step_6_0,
						"d.fe.up.pt.cicd.transformationsdsl.dsl.DSL.Step");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleReplaceStep
entryRuleReplaceStep returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReplaceStepRule()); }
	iv_ruleReplaceStep=ruleReplaceStep
	{ $current=$iv_ruleReplaceStep.current; }
	EOF;

// Rule ReplaceStep
ruleReplaceStep returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='replace'
		{
			newLeafNode(otherlv_0, grammarAccess.getReplaceStepAccess().getReplaceKeyword_0());
		}
		otherlv_1='step'
		{
			newLeafNode(otherlv_1, grammarAccess.getReplaceStepAccess().getStepKeyword_1());
		}
		(
			(
				lv_index_2_0=RULE_INT
				{
					newLeafNode(lv_index_2_0, grammarAccess.getReplaceStepAccess().getIndexINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReplaceStepRule());
					}
					setWithLastConsumed(
						$current,
						"index",
						lv_index_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3='on'
		{
			newLeafNode(otherlv_3, grammarAccess.getReplaceStepAccess().getOnKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReplaceStepAccess().getJobEStringParserRuleCall_4_0());
				}
				lv_job_4_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReplaceStepRule());
					}
					set(
						$current,
						"job",
						lv_job_4_0,
						"d.fe.up.pt.cicd.transformationsdsl.dsl.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='with'
		{
			newLeafNode(otherlv_5, grammarAccess.getReplaceStepAccess().getWithKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReplaceStepAccess().getStepStepParserRuleCall_6_0());
				}
				lv_step_6_0=ruleStep
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReplaceStepRule());
					}
					set(
						$current,
						"step",
						lv_step_6_0,
						"d.fe.up.pt.cicd.transformationsdsl.dsl.DSL.Step");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleStep
entryRuleStep returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStepRule()); }
	iv_ruleStep=ruleStep
	{ $current=$iv_ruleStep.current; }
	EOF;

// Rule Step
ruleStep returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getStepAccess().getConditionalStepParserRuleCall_0());
		}
		this_ConditionalStep_0=ruleConditionalStep
		{
			$current = $this_ConditionalStep_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStepAccess().getNonConditionalStepParserRuleCall_1());
		}
		this_NonConditionalStep_1=ruleNonConditionalStep
		{
			$current = $this_NonConditionalStep_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleConditionalStep
entryRuleConditionalStep returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionalStepRule()); }
	iv_ruleConditionalStep=ruleConditionalStep
	{ $current=$iv_ruleConditionalStep.current; }
	EOF;

// Rule ConditionalStep
ruleConditionalStep returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='conditional'
		{
			newLeafNode(otherlv_0, grammarAccess.getConditionalStepAccess().getConditionalKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getConditionalStepAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='if'
		{
			newLeafNode(otherlv_2, grammarAccess.getConditionalStepAccess().getIfKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionalStepAccess().getIfConditionStringLiteralParserRuleCall_3_0());
				}
				lv_ifCondition_3_0=ruleStringLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionalStepRule());
					}
					set(
						$current,
						"ifCondition",
						lv_ifCondition_3_0,
						"d.fe.up.pt.cicd.transformationsdsl.dsl.DSL.StringLiteral");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='then'
		{
			newLeafNode(otherlv_4, grammarAccess.getConditionalStepAccess().getThenKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionalStepAccess().getThenRunStepParserRuleCall_5_0());
				}
				lv_thenRun_5_0=ruleStep
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionalStepRule());
					}
					add(
						$current,
						"thenRun",
						lv_thenRun_5_0,
						"d.fe.up.pt.cicd.transformationsdsl.dsl.DSL.Step");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			otherlv_6='else'
			{
				newLeafNode(otherlv_6, grammarAccess.getConditionalStepAccess().getElseKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionalStepAccess().getElseRunStepParserRuleCall_6_1_0());
					}
					lv_elseRun_7_0=ruleStep
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionalStepRule());
						}
						add(
							$current,
							"elseRun",
							lv_elseRun_7_0,
							"d.fe.up.pt.cicd.transformationsdsl.dsl.DSL.Step");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getConditionalStepAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleNonConditionalStep
entryRuleNonConditionalStep returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNonConditionalStepRule()); }
	iv_ruleNonConditionalStep=ruleNonConditionalStep
	{ $current=$iv_ruleNonConditionalStep.current; }
	EOF;

// Rule NonConditionalStep
ruleNonConditionalStep returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						$current = forceCreateModelElement(
							grammarAccess.getNonConditionalStepAccess().getCommandAction_0_0_0(),
							$current);
					}
				)
				otherlv_1='command'
				{
					newLeafNode(otherlv_1, grammarAccess.getNonConditionalStepAccess().getCommandKeyword_0_0_1());
				}
				otherlv_2='{'
				{
					newLeafNode(otherlv_2, grammarAccess.getNonConditionalStepAccess().getLeftCurlyBracketKeyword_0_0_2());
				}
				otherlv_3='script'
				{
					newLeafNode(otherlv_3, grammarAccess.getNonConditionalStepAccess().getScriptKeyword_0_0_3());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getNonConditionalStepAccess().getProgramStringLiteralParserRuleCall_0_0_4_0());
						}
						lv_program_4_0=ruleStringLiteral
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getNonConditionalStepRule());
							}
							set(
								$current,
								"program",
								lv_program_4_0,
								"d.fe.up.pt.cicd.transformationsdsl.dsl.DSL.StringLiteral");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElement(
							grammarAccess.getNonConditionalStepAccess().getPluginAction_0_1_0(),
							$current);
					}
				)
				otherlv_6='plugin'
				{
					newLeafNode(otherlv_6, grammarAccess.getNonConditionalStepAccess().getPluginKeyword_0_1_1());
				}
				otherlv_7='{'
				{
					newLeafNode(otherlv_7, grammarAccess.getNonConditionalStepAccess().getLeftCurlyBracketKeyword_0_1_2());
				}
				otherlv_8='name'
				{
					newLeafNode(otherlv_8, grammarAccess.getNonConditionalStepAccess().getNameKeyword_0_1_3());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getNonConditionalStepAccess().getPluginNameEStringParserRuleCall_0_1_4_0());
						}
						lv_pluginName_9_0=ruleEString
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getNonConditionalStepRule());
							}
							set(
								$current,
								"pluginName",
								lv_pluginName_9_0,
								"d.fe.up.pt.cicd.transformationsdsl.dsl.DSL.EString");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_10='version'
				{
					newLeafNode(otherlv_10, grammarAccess.getNonConditionalStepAccess().getVersionKeyword_0_1_5());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getNonConditionalStepAccess().getVersionEStringParserRuleCall_0_1_6_0());
						}
						lv_version_11_0=ruleEString
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getNonConditionalStepRule());
							}
							set(
								$current,
								"version",
								lv_version_11_0,
								"d.fe.up.pt.cicd.transformationsdsl.dsl.DSL.EString");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_12='args'
					{
						newLeafNode(otherlv_12, grammarAccess.getNonConditionalStepAccess().getArgsKeyword_0_1_7_0());
					}
					otherlv_13='{'
					{
						newLeafNode(otherlv_13, grammarAccess.getNonConditionalStepAccess().getLeftCurlyBracketKeyword_0_1_7_1());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getNonConditionalStepAccess().getKwargsAssignmentParserRuleCall_0_1_7_2_0());
							}
							lv_kwargs_14_0=ruleAssignment
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getNonConditionalStepRule());
								}
								add(
									$current,
									"kwargs",
									lv_kwargs_14_0,
									"d.fe.up.pt.cicd.transformationsdsl.dsl.DSL.Assignment");
								afterParserOrEnumRuleCall();
							}
						)
					)+
					otherlv_15='}'
					{
						newLeafNode(otherlv_15, grammarAccess.getNonConditionalStepAccess().getRightCurlyBracketKeyword_0_1_7_3());
					}
				)?
			)
			    |
			(
				(
					{
						$current = forceCreateModelElement(
							grammarAccess.getNonConditionalStepAccess().getCheckoutAction_0_2_0(),
							$current);
					}
				)
				otherlv_17='checkout'
				{
					newLeafNode(otherlv_17, grammarAccess.getNonConditionalStepAccess().getCheckoutKeyword_0_2_1());
				}
				otherlv_18='{'
				{
					newLeafNode(otherlv_18, grammarAccess.getNonConditionalStepAccess().getLeftCurlyBracketKeyword_0_2_2());
				}
				(
					otherlv_19='path'
					{
						newLeafNode(otherlv_19, grammarAccess.getNonConditionalStepAccess().getPathKeyword_0_2_3_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getNonConditionalStepAccess().getPathStringLiteralParserRuleCall_0_2_3_1_0());
							}
							lv_path_20_0=ruleStringLiteral
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getNonConditionalStepRule());
								}
								set(
									$current,
									"path",
									lv_path_20_0,
									"d.fe.up.pt.cicd.transformationsdsl.dsl.DSL.StringLiteral");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)?
			)
		)
		(
			otherlv_21='environment'
			{
				newLeafNode(otherlv_21, grammarAccess.getNonConditionalStepAccess().getEnvironmentKeyword_1_0());
			}
			otherlv_22='{'
			{
				newLeafNode(otherlv_22, grammarAccess.getNonConditionalStepAccess().getLeftCurlyBracketKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNonConditionalStepAccess().getEnvironmentVariablesAssignmentParserRuleCall_1_2_0());
					}
					lv_environmentVariables_23_0=ruleAssignment
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNonConditionalStepRule());
						}
						add(
							$current,
							"environmentVariables",
							lv_environmentVariables_23_0,
							"d.fe.up.pt.cicd.transformationsdsl.dsl.DSL.Assignment");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			otherlv_24='}'
			{
				newLeafNode(otherlv_24, grammarAccess.getNonConditionalStepAccess().getRightCurlyBracketKeyword_1_3());
			}
		)?
		otherlv_25='}'
		{
			newLeafNode(otherlv_25, grammarAccess.getNonConditionalStepAccess().getRightCurlyBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleStringLiteral
entryRuleStringLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringLiteralRule()); }
	iv_ruleStringLiteral=ruleStringLiteral
	{ $current=$iv_ruleStringLiteral.current; }
	EOF;

// Rule StringLiteral
ruleStringLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getStringLiteralAccess().getValueEStringParserRuleCall_0());
			}
			lv_value_0_0=ruleEString
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getStringLiteralRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"d.fe.up.pt.cicd.transformationsdsl.dsl.DSL.EString");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleAssignment
entryRuleAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssignmentRule()); }
	iv_ruleAssignment=ruleAssignment
	{ $current=$iv_ruleAssignment.current; }
	EOF;

// Rule Assignment
ruleAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAssignmentAccess().getKeyVariableDeclarationParserRuleCall_0_0());
				}
				lv_key_0_0=ruleVariableDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssignmentRule());
					}
					set(
						$current,
						"key",
						lv_key_0_0,
						"d.fe.up.pt.cicd.transformationsdsl.dsl.DSL.VariableDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAssignmentAccess().getValueStringLiteralParserRuleCall_2_0());
				}
				lv_value_2_0=ruleStringLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssignmentRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"d.fe.up.pt.cicd.transformationsdsl.dsl.DSL.StringLiteral");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleVariableDeclaration
entryRuleVariableDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableDeclarationRule()); }
	iv_ruleVariableDeclaration=ruleVariableDeclaration
	{ $current=$iv_ruleVariableDeclaration.current; }
	EOF;

// Rule VariableDeclaration
ruleVariableDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getVariableDeclarationAccess().getNameEStringParserRuleCall_0());
			}
			lv_name_0_0=ruleEString
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
				}
				set(
					$current,
					"name",
					lv_name_0_0,
					"d.fe.up.pt.cicd.transformationsdsl.dsl.DSL.EString");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleCircleCITransformation
entryRuleCircleCITransformation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCircleCITransformationRule()); }
	iv_ruleCircleCITransformation=ruleCircleCITransformation
	{ $current=$iv_ruleCircleCITransformation.current; }
	EOF;

// Rule CircleCITransformation
ruleCircleCITransformation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='on'
		{
			newLeafNode(otherlv_0, grammarAccess.getCircleCITransformationAccess().getOnKeyword_0());
		}
		otherlv_1='circleci'
		{
			newLeafNode(otherlv_1, grammarAccess.getCircleCITransformationAccess().getCircleciKeyword_1());
		}
		(
			{
				newCompositeNode(grammarAccess.getCircleCITransformationAccess().getSetCircleCIVersionParserRuleCall_2_0());
			}
			this_SetCircleCIVersion_2=ruleSetCircleCIVersion
			{
				$current = $this_SetCircleCIVersion_2.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getCircleCITransformationAccess().getAddExecutorParserRuleCall_2_1());
			}
			this_AddExecutor_3=ruleAddExecutor
			{
				$current = $this_AddExecutor_3.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getCircleCITransformationAccess().getSelectWorkflowParserRuleCall_2_2());
			}
			this_SelectWorkflow_4=ruleSelectWorkflow
			{
				$current = $this_SelectWorkflow_4.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleSetCircleCIVersion
entryRuleSetCircleCIVersion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSetCircleCIVersionRule()); }
	iv_ruleSetCircleCIVersion=ruleSetCircleCIVersion
	{ $current=$iv_ruleSetCircleCIVersion.current; }
	EOF;

// Rule SetCircleCIVersion
ruleSetCircleCIVersion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='set'
		{
			newLeafNode(otherlv_0, grammarAccess.getSetCircleCIVersionAccess().getSetKeyword_0());
		}
		otherlv_1='version'
		{
			newLeafNode(otherlv_1, grammarAccess.getSetCircleCIVersionAccess().getVersionKeyword_1());
		}
		(
			otherlv_2='to'
			{
				newLeafNode(otherlv_2, grammarAccess.getSetCircleCIVersionAccess().getToKeyword_2());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSetCircleCIVersionAccess().getVersionEStringParserRuleCall_3_0());
				}
				lv_version_3_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSetCircleCIVersionRule());
					}
					set(
						$current,
						"version",
						lv_version_3_0,
						"d.fe.up.pt.cicd.transformationsdsl.dsl.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAddExecutor
entryRuleAddExecutor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAddExecutorRule()); }
	iv_ruleAddExecutor=ruleAddExecutor
	{ $current=$iv_ruleAddExecutor.current; }
	EOF;

// Rule AddExecutor
ruleAddExecutor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='add'
		{
			newLeafNode(otherlv_0, grammarAccess.getAddExecutorAccess().getAddKeyword_0());
		}
		otherlv_1='executor'
		{
			newLeafNode(otherlv_1, grammarAccess.getAddExecutorAccess().getExecutorKeyword_1());
		}
		{
			newCompositeNode(grammarAccess.getAddExecutorAccess().getAddOrbReferenceExecutorParserRuleCall_2());
		}
		this_AddOrbReferenceExecutor_2=ruleAddOrbReferenceExecutor
		{
			$current = $this_AddOrbReferenceExecutor_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAddOrbReferenceExecutor
entryRuleAddOrbReferenceExecutor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAddOrbReferenceExecutorRule()); }
	iv_ruleAddOrbReferenceExecutor=ruleAddOrbReferenceExecutor
	{ $current=$iv_ruleAddOrbReferenceExecutor.current; }
	EOF;

// Rule AddOrbReferenceExecutor
ruleAddOrbReferenceExecutor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAddOrbReferenceExecutorAccess().getExecutorEStringParserRuleCall_0_0());
				}
				lv_executor_0_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAddOrbReferenceExecutorRule());
					}
					set(
						$current,
						"executor",
						lv_executor_0_0,
						"d.fe.up.pt.cicd.transformationsdsl.dsl.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='on'
		{
			newLeafNode(otherlv_1, grammarAccess.getAddOrbReferenceExecutorAccess().getOnKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAddOrbReferenceExecutorAccess().getJobNameEStringParserRuleCall_2_0());
				}
				lv_jobName_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAddOrbReferenceExecutorRule());
					}
					set(
						$current,
						"jobName",
						lv_jobName_2_0,
						"d.fe.up.pt.cicd.transformationsdsl.dsl.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='from'
			{
				newLeafNode(otherlv_3, grammarAccess.getAddOrbReferenceExecutorAccess().getFromKeyword_3());
			}
		)?
		otherlv_4='orb'
		{
			newLeafNode(otherlv_4, grammarAccess.getAddOrbReferenceExecutorAccess().getOrbKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAddOrbReferenceExecutorAccess().getOrbEStringParserRuleCall_5_0());
				}
				lv_orb_5_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAddOrbReferenceExecutorRule());
					}
					set(
						$current,
						"orb",
						lv_orb_5_0,
						"d.fe.up.pt.cicd.transformationsdsl.dsl.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSelectWorkflow
entryRuleSelectWorkflow returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectWorkflowRule()); }
	iv_ruleSelectWorkflow=ruleSelectWorkflow
	{ $current=$iv_ruleSelectWorkflow.current; }
	EOF;

// Rule SelectWorkflow
ruleSelectWorkflow returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='select'
		{
			newLeafNode(otherlv_0, grammarAccess.getSelectWorkflowAccess().getSelectKeyword_0());
		}
		otherlv_1='workflow'
		{
			newLeafNode(otherlv_1, grammarAccess.getSelectWorkflowAccess().getWorkflowKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectWorkflowAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectWorkflowRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"d.fe.up.pt.cicd.transformationsdsl.dsl.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleStringToStringMapEntry
entryRuleStringToStringMapEntry returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringToStringMapEntryRule()); }
	iv_ruleStringToStringMapEntry=ruleStringToStringMapEntry
	{ $current=$iv_ruleStringToStringMapEntry.current; }
	EOF;

// Rule StringToStringMapEntry
ruleStringToStringMapEntry returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getStringToStringMapEntryAccess().getKeyEStringParserRuleCall_0_0());
				}
				lv_key_0_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStringToStringMapEntryRule());
					}
					set(
						$current,
						"key",
						lv_key_0_0,
						"d.fe.up.pt.cicd.transformationsdsl.dsl.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='to'
		{
			newLeafNode(otherlv_1, grammarAccess.getStringToStringMapEntryAccess().getToKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStringToStringMapEntryAccess().getValueEStringParserRuleCall_2_0());
				}
				lv_value_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStringToStringMapEntryRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"d.fe.up.pt.cicd.transformationsdsl.dsl.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Rule MODELS
ruleMODELS returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='gha'
			{
				$current = grammarAccess.getMODELSAccess().getGHAEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getMODELSAccess().getGHAEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='cicd'
			{
				$current = grammarAccess.getMODELSAccess().getCICDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getMODELSAccess().getCICDEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='circleci'
			{
				$current = grammarAccess.getMODELSAccess().getCircleCIEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getMODELSAccess().getCircleCIEnumLiteralDeclaration_2());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
