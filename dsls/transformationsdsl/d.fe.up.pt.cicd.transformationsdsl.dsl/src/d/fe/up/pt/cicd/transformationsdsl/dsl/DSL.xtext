// automatically generated by Xtext
grammar d.fe.up.pt.cicd.transformationsdsl.dsl.DSL with org.eclipse.xtext.common.Terminals

import "http://d.fe.up.pt/Transformations" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

TransformationSet returns TransformationSet:
	{TransformationSet}
	'TransformationSet'
	'{'
		('transformations' '{' transformations+=Transformation ( "," transformations+=Transformation)* '}' )?
	'}';

Transformation returns Transformation:
	ChangePlugin | ATLRefiningScript | ChangeAgentLabel | ReplaceAgentLabels;


enum MODEL_NAMES returns MODEL_NAMES:
				CICD = 'CICD' | GHA = 'GHA' | CircleCI = 'CircleCI';

ChangePlugin returns ChangePlugin:
	'ChangePlugin'
	'{'
		'model' model=MODEL_NAMES
		'version' version=EString
		'name' name=StringToStringMapEntry
		('args' '{' args+=StringToStringMapEntry ( "," args+=StringToStringMapEntry)* '}' )?
	'}';

ATLRefiningScript returns ATLRefiningScript:
	'ATLRefiningScript'
	'{'
		'model' model=MODEL_NAMES
		'script' script=EString 
	'}';
	
ChangeAgentLabel returns ChangeAgentLabel:
	'ChangeAgentLabel'
	'{'
		'model' model=MODEL_NAMES
		'name' name=StringToStringMapEntry
	'}';
	
ReplaceAgentLabels returns ReplaceAgentLabels:
	'ReplaceAgentLabels'
	'{'		
		'model' model=MODEL_NAMES
		'condition' condition=EString
		'labels' labels+=EString (',' labels+=EString)*
	'}'
	;

StringToStringMapEntry returns StringToStringMapEntry:
	'StringToStringMapEntry'
	'{'
		'key' key=EString
		'value' value=EString
	'}';

EString returns ecore::EString:
	STRING | ID;
