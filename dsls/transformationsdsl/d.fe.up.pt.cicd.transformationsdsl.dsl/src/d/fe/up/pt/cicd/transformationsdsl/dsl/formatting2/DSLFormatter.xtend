/*
 * generated by Xtext 2.33.0
 */
package d.fe.up.pt.cicd.transformationsdsl.dsl.formatting2

import com.google.inject.Inject
import d.fe.up.pt.cicd.transformationsdsl.dsl.services.DSLGrammarAccess
import d.fe.up.pt.cicd.transformationsdsl.metamodel.Transformations.ChangePluginTransformation
import d.fe.up.pt.cicd.transformationsdsl.metamodel.Transformations.TransformationSet
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class DSLFormatter extends AbstractFormatter2 {
	
	@Inject extension DSLGrammarAccess

	def dispatch void format(TransformationSet transformationSet, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (transformation : transformationSet.transformations) {
			transformation.format
		}
	}

	def dispatch void format(ChangePluginTransformation changePluginTransformation, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		changePluginTransformation.name.format
		for (stringToStringMapEntry : changePluginTransformation.args) {
			stringToStringMapEntry.format
		}
	}
	
}
