/*
 * generated by Xtext 2.27.0
 */
package org.xtext.example.mydsl5.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.antlr.runtime.CharStream;
import org.antlr.runtime.TokenSource;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.example.mydsl5.ide.contentassist.antlr.internal.InternalMyDslParser;
import org.xtext.example.mydsl5.services.MyDslGrammarAccess;

public class MyDslParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(MyDslGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, MyDslGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
			builder.put(grammarAccess.getEBooleanAccess().getAlternatives(), "rule__EBoolean__Alternatives");
			builder.put(grammarAccess.getPipelineAccess().getGroup(), "rule__Pipeline__Group__0");
			builder.put(grammarAccess.getPipelineAccess().getGroup_1(), "rule__Pipeline__Group_1__0");
			builder.put(grammarAccess.getPipelineAccess().getGroup_2(), "rule__Pipeline__Group_2__0");
			builder.put(grammarAccess.getPipelineAccess().getGroup_2_3(), "rule__Pipeline__Group_2_3__0");
			builder.put(grammarAccess.getPipelineAccess().getGroup_3(), "rule__Pipeline__Group_3__0");
			builder.put(grammarAccess.getPipelineAccess().getGroup_3_3(), "rule__Pipeline__Group_3_3__0");
			builder.put(grammarAccess.getPipelineAccess().getGroup_4(), "rule__Pipeline__Group_4__0");
			builder.put(grammarAccess.getPipelineAccess().getGroup_4_3(), "rule__Pipeline__Group_4_3__0");
			builder.put(grammarAccess.getPipelineAccess().getGroup_5(), "rule__Pipeline__Group_5__0");
			builder.put(grammarAccess.getWhenAccess().getGroup(), "rule__When__Group__0");
			builder.put(grammarAccess.getWhenAccess().getGroup_4(), "rule__When__Group_4__0");
			builder.put(grammarAccess.getWhenAccess().getGroup_5(), "rule__When__Group_5__0");
			builder.put(grammarAccess.getJobAccess().getGroup(), "rule__Job__Group__0");
			builder.put(grammarAccess.getJobAccess().getGroup_5(), "rule__Job__Group_5__0");
			builder.put(grammarAccess.getJobAccess().getGroup_6(), "rule__Job__Group_6__0");
			builder.put(grammarAccess.getJobAccess().getGroup_6_3(), "rule__Job__Group_6_3__0");
			builder.put(grammarAccess.getJobAccess().getGroup_7(), "rule__Job__Group_7__0");
			builder.put(grammarAccess.getJobAccess().getGroup_7_3(), "rule__Job__Group_7_3__0");
			builder.put(grammarAccess.getJobAccess().getGroup_8(), "rule__Job__Group_8__0");
			builder.put(grammarAccess.getJobAccess().getGroup_8_3(), "rule__Job__Group_8_3__0");
			builder.put(grammarAccess.getJobAccess().getGroup_9(), "rule__Job__Group_9__0");
			builder.put(grammarAccess.getJobAccess().getGroup_9_3(), "rule__Job__Group_9_3__0");
			builder.put(grammarAccess.getJobAccess().getGroup_10(), "rule__Job__Group_10__0");
			builder.put(grammarAccess.getJobAccess().getGroup_10_3(), "rule__Job__Group_10_3__0");
			builder.put(grammarAccess.getJobAccess().getGroup_11(), "rule__Job__Group_11__0");
			builder.put(grammarAccess.getJobAccess().getGroup_11_3(), "rule__Job__Group_11_3__0");
			builder.put(grammarAccess.getTool_frameworkAccess().getGroup(), "rule__Tool_framework__Group__0");
			builder.put(grammarAccess.getTool_frameworkAccess().getGroup_3(), "rule__Tool_framework__Group_3__0");
			builder.put(grammarAccess.getEnvironmentAccess().getGroup(), "rule__Environment__Group__0");
			builder.put(grammarAccess.getEnvironmentAccess().getGroup_3(), "rule__Environment__Group_3__0");
			builder.put(grammarAccess.getEnvironmentAccess().getGroup_4(), "rule__Environment__Group_4__0");
			builder.put(grammarAccess.getArtifactAccess().getGroup(), "rule__Artifact__Group__0");
			builder.put(grammarAccess.getArtifactAccess().getGroup_3(), "rule__Artifact__Group_3__0");
			builder.put(grammarAccess.getCommandAccess().getGroup(), "rule__Command__Group__0");
			builder.put(grammarAccess.getCommandAccess().getGroup_4(), "rule__Command__Group_4__0");
			builder.put(grammarAccess.getCommandAccess().getGroup_5(), "rule__Command__Group_5__0");
			builder.put(grammarAccess.getIfThenElseAccess().getGroup(), "rule__IfThenElse__Group__0");
			builder.put(grammarAccess.getIfThenElseAccess().getGroup_3(), "rule__IfThenElse__Group_3__0");
			builder.put(grammarAccess.getIfThenElseAccess().getGroup_4(), "rule__IfThenElse__Group_4__0");
			builder.put(grammarAccess.getIfThenElseAccess().getGroup_4_3(), "rule__IfThenElse__Group_4_3__0");
			builder.put(grammarAccess.getIfThenElseAccess().getGroup_5(), "rule__IfThenElse__Group_5__0");
			builder.put(grammarAccess.getIfThenElseAccess().getGroup_5_3(), "rule__IfThenElse__Group_5_3__0");
			builder.put(grammarAccess.getIfThenElseAccess().getGroup_6(), "rule__IfThenElse__Group_6__0");
			builder.put(grammarAccess.getIfThenElseAccess().getGroup_6_3(), "rule__IfThenElse__Group_6_3__0");
			builder.put(grammarAccess.getIfThenElseAccess().getGroup_7(), "rule__IfThenElse__Group_7__0");
			builder.put(grammarAccess.getIfThenElseAccess().getGroup_7_3(), "rule__IfThenElse__Group_7_3__0");
			builder.put(grammarAccess.getPipelineAccess().getName0Assignment_1_1(), "rule__Pipeline__Name0Assignment_1_1");
			builder.put(grammarAccess.getPipelineAccess().getPipeline_tool_frameworkAssignment_2_2(), "rule__Pipeline__Pipeline_tool_frameworkAssignment_2_2");
			builder.put(grammarAccess.getPipelineAccess().getPipeline_tool_frameworkAssignment_2_3_1(), "rule__Pipeline__Pipeline_tool_frameworkAssignment_2_3_1");
			builder.put(grammarAccess.getPipelineAccess().getPipeline_envirnonmentAssignment_3_2(), "rule__Pipeline__Pipeline_envirnonmentAssignment_3_2");
			builder.put(grammarAccess.getPipelineAccess().getPipeline_envirnonmentAssignment_3_3_1(), "rule__Pipeline__Pipeline_envirnonmentAssignment_3_3_1");
			builder.put(grammarAccess.getPipelineAccess().getWhenAssignment_4_2(), "rule__Pipeline__WhenAssignment_4_2");
			builder.put(grammarAccess.getPipelineAccess().getWhenAssignment_4_3_1(), "rule__Pipeline__WhenAssignment_4_3_1");
			builder.put(grammarAccess.getPipelineAccess().getJobAssignment_5_2(), "rule__Pipeline__JobAssignment_5_2");
			builder.put(grammarAccess.getPipelineAccess().getJobAssignment_5_3(), "rule__Pipeline__JobAssignment_5_3");
			builder.put(grammarAccess.getWhenAccess().getName4Assignment_2(), "rule__When__Name4Assignment_2");
			builder.put(grammarAccess.getWhenAccess().getTriggerAssignment_4_1(), "rule__When__TriggerAssignment_4_1");
			builder.put(grammarAccess.getWhenAccess().getTimerAssignment_5_1(), "rule__When__TimerAssignment_5_1");
			builder.put(grammarAccess.getJobAccess().getAllow_faillureAssignment_1(), "rule__Job__Allow_faillureAssignment_1");
			builder.put(grammarAccess.getJobAccess().getName1Assignment_5_1(), "rule__Job__Name1Assignment_5_1");
			builder.put(grammarAccess.getJobAccess().getDependsAssignment_6_2(), "rule__Job__DependsAssignment_6_2");
			builder.put(grammarAccess.getJobAccess().getDependsAssignment_6_3_1(), "rule__Job__DependsAssignment_6_3_1");
			builder.put(grammarAccess.getJobAccess().getTool_framework_jobAssignment_7_2(), "rule__Job__Tool_framework_jobAssignment_7_2");
			builder.put(grammarAccess.getJobAccess().getTool_framework_jobAssignment_7_3_1(), "rule__Job__Tool_framework_jobAssignment_7_3_1");
			builder.put(grammarAccess.getJobAccess().getOutputAssignment_8_2(), "rule__Job__OutputAssignment_8_2");
			builder.put(grammarAccess.getJobAccess().getOutputAssignment_8_3_1(), "rule__Job__OutputAssignment_8_3_1");
			builder.put(grammarAccess.getJobAccess().getIfthenelseAssignment_9_2(), "rule__Job__IfthenelseAssignment_9_2");
			builder.put(grammarAccess.getJobAccess().getIfthenelseAssignment_9_3_1(), "rule__Job__IfthenelseAssignment_9_3_1");
			builder.put(grammarAccess.getJobAccess().getCommandAssignment_10_2(), "rule__Job__CommandAssignment_10_2");
			builder.put(grammarAccess.getJobAccess().getCommandAssignment_10_3_1(), "rule__Job__CommandAssignment_10_3_1");
			builder.put(grammarAccess.getJobAccess().getInputAssignment_11_2(), "rule__Job__InputAssignment_11_2");
			builder.put(grammarAccess.getJobAccess().getInputAssignment_11_3_1(), "rule__Job__InputAssignment_11_3_1");
			builder.put(grammarAccess.getTool_frameworkAccess().getName5Assignment_3_1(), "rule__Tool_framework__Name5Assignment_3_1");
			builder.put(grammarAccess.getEnvironmentAccess().getKeyAssignment_3_1(), "rule__Environment__KeyAssignment_3_1");
			builder.put(grammarAccess.getEnvironmentAccess().getValueAssignment_4_1(), "rule__Environment__ValueAssignment_4_1");
			builder.put(grammarAccess.getArtifactAccess().getName3Assignment_3_1(), "rule__Artifact__Name3Assignment_3_1");
			builder.put(grammarAccess.getCommandAccess().getDescriptionAssignment_2(), "rule__Command__DescriptionAssignment_2");
			builder.put(grammarAccess.getCommandAccess().getParametersAssignment_4_1(), "rule__Command__ParametersAssignment_4_1");
			builder.put(grammarAccess.getCommandAccess().getToolAssignment_5_1(), "rule__Command__ToolAssignment_5_1");
			builder.put(grammarAccess.getIfThenElseAccess().getConditionAssignment_3_1(), "rule__IfThenElse__ConditionAssignment_3_1");
			builder.put(grammarAccess.getIfThenElseAccess().getIfAssignment_4_2(), "rule__IfThenElse__IfAssignment_4_2");
			builder.put(grammarAccess.getIfThenElseAccess().getIfAssignment_4_3_1(), "rule__IfThenElse__IfAssignment_4_3_1");
			builder.put(grammarAccess.getIfThenElseAccess().getElseAssignment_5_2(), "rule__IfThenElse__ElseAssignment_5_2");
			builder.put(grammarAccess.getIfThenElseAccess().getElseAssignment_5_3_1(), "rule__IfThenElse__ElseAssignment_5_3_1");
			builder.put(grammarAccess.getIfThenElseAccess().getIfelseAssignment_6_2(), "rule__IfThenElse__IfelseAssignment_6_2");
			builder.put(grammarAccess.getIfThenElseAccess().getIfelseAssignment_6_3_1(), "rule__IfThenElse__IfelseAssignment_6_3_1");
			builder.put(grammarAccess.getIfThenElseAccess().getElseifAssignment_7_2(), "rule__IfThenElse__ElseifAssignment_7_2");
			builder.put(grammarAccess.getIfThenElseAccess().getElseifAssignment_7_3_1(), "rule__IfThenElse__ElseifAssignment_7_3_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private MyDslGrammarAccess grammarAccess;

	@Override
	protected InternalMyDslParser createParser() {
		InternalMyDslParser result = new InternalMyDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected TokenSource createLexer(CharStream stream) {
		return new MyDslTokenSource(super.createLexer(stream));
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public MyDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
