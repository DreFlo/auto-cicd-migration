/**
 * generated by Xtext 2.27.0
 */
package org.xtext.example.mydsl10.myDsl.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import org.xtext.example.mydsl10.myDsl.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see org.xtext.example.mydsl10.myDsl.MyDslPackage
 * @generated
 */
public class MyDslSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static MyDslPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MyDslSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = MyDslPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case MyDslPackage.PIPELINE:
      {
        Pipeline pipeline = (Pipeline)theEObject;
        T result = casePipeline(pipeline);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.WHEN:
      {
        When when = (When)theEObject;
        T result = caseWhen(when);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.JOB_IF_THEN_ELSE:
      {
        JobIfThenElse jobIfThenElse = (JobIfThenElse)theEObject;
        T result = caseJobIfThenElse(jobIfThenElse);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.JOB:
      {
        Job job = (Job)theEObject;
        T result = caseJob(job);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.STRATEGY:
      {
        Strategy strategy = (Strategy)theEObject;
        T result = caseStrategy(strategy);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.STEPS:
      {
        Steps steps = (Steps)theEObject;
        T result = caseSteps(steps);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.STEP_OPTIONS:
      {
        StepOptions stepOptions = (StepOptions)theEObject;
        T result = caseStepOptions(stepOptions);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.STEPS1:
      {
        Steps1 steps1 = (Steps1)theEObject;
        T result = caseSteps1(steps1);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.STEPS2:
      {
        Steps2 steps2 = (Steps2)theEObject;
        T result = caseSteps2(steps2);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.STEPS3:
      {
        Steps3 steps3 = (Steps3)theEObject;
        T result = caseSteps3(steps3);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.TOOL_FRAMEWORK:
      {
        Tool_framework tool_framework = (Tool_framework)theEObject;
        T result = caseTool_framework(tool_framework);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.ENVIRONMENT:
      {
        Environment environment = (Environment)theEObject;
        T result = caseEnvironment(environment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.ARTIFACT:
      {
        Artifact artifact = (Artifact)theEObject;
        T result = caseArtifact(artifact);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.COMMAND:
      {
        Command command = (Command)theEObject;
        T result = caseCommand(command);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.COMMAND1:
      {
        Command1 command1 = (Command1)theEObject;
        T result = caseCommand1(command1);
        if (result == null) result = caseCommand(command1);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.COMMAND2:
      {
        Command2 command2 = (Command2)theEObject;
        T result = caseCommand2(command2);
        if (result == null) result = caseCommand(command2);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.COMMAND2_ENV:
      {
        Command2Env command2Env = (Command2Env)theEObject;
        T result = caseCommand2Env(command2Env);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.COMMAND2_RUN_MULTIPLE:
      {
        Command2RunMultiple command2RunMultiple = (Command2RunMultiple)theEObject;
        T result = caseCommand2RunMultiple(command2RunMultiple);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.COMMAND2_RUN_ONE:
      {
        Command2RunOne command2RunOne = (Command2RunOne)theEObject;
        T result = caseCommand2RunOne(command2RunOne);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.COMMAND2_USES:
      {
        Command2Uses command2Uses = (Command2Uses)theEObject;
        T result = caseCommand2Uses(command2Uses);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.COMMAND2_RUN_TOOL:
      {
        Command2RunTool command2RunTool = (Command2RunTool)theEObject;
        T result = caseCommand2RunTool(command2RunTool);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.IF_THEN_ELSE:
      {
        IfThenElse ifThenElse = (IfThenElse)theEObject;
        T result = caseIfThenElse(ifThenElse);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.IF_THEN_ELSE_ALT1:
      {
        IfThenElse_alt1 ifThenElse_alt1 = (IfThenElse_alt1)theEObject;
        T result = caseIfThenElse_alt1(ifThenElse_alt1);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.IF_THEN_ELSE_RUN:
      {
        IFThenElseRun ifThenElseRun = (IFThenElseRun)theEObject;
        T result = caseIFThenElseRun(ifThenElseRun);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.IF_THEN_ELSE_STEPS:
      {
        IFThenElseSteps ifThenElseSteps = (IFThenElseSteps)theEObject;
        T result = caseIFThenElseSteps(ifThenElseSteps);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.IF_THEN_ELSE_STEPS_ALT1:
      {
        IFThenElseSteps_alt1 ifThenElseSteps_alt1 = (IFThenElseSteps_alt1)theEObject;
        T result = caseIFThenElseSteps_alt1(ifThenElseSteps_alt1);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.IF_THEN_ELSE_JOBS_STEPS_ALT2:
      {
        IFThenElseJobsSteps_alt2 ifThenElseJobsSteps_alt2 = (IFThenElseJobsSteps_alt2)theEObject;
        T result = caseIFThenElseJobsSteps_alt2(ifThenElseJobsSteps_alt2);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Pipeline</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Pipeline</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePipeline(Pipeline object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>When</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>When</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseWhen(When object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Job If Then Else</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Job If Then Else</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseJobIfThenElse(JobIfThenElse object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Job</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Job</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseJob(Job object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Strategy</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Strategy</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStrategy(Strategy object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Steps</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Steps</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSteps(Steps object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Step Options</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Step Options</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStepOptions(StepOptions object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Steps1</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Steps1</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSteps1(Steps1 object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Steps2</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Steps2</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSteps2(Steps2 object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Steps3</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Steps3</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSteps3(Steps3 object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Tool framework</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Tool framework</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTool_framework(Tool_framework object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Environment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Environment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEnvironment(Environment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Artifact</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Artifact</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseArtifact(Artifact object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Command</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Command</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCommand(Command object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Command1</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Command1</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCommand1(Command1 object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Command2</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Command2</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCommand2(Command2 object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Command2 Env</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Command2 Env</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCommand2Env(Command2Env object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Command2 Run Multiple</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Command2 Run Multiple</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCommand2RunMultiple(Command2RunMultiple object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Command2 Run One</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Command2 Run One</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCommand2RunOne(Command2RunOne object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Command2 Uses</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Command2 Uses</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCommand2Uses(Command2Uses object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Command2 Run Tool</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Command2 Run Tool</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCommand2RunTool(Command2RunTool object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>If Then Else</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>If Then Else</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIfThenElse(IfThenElse object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>If Then Else alt1</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>If Then Else alt1</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIfThenElse_alt1(IfThenElse_alt1 object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>IF Then Else Run</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>IF Then Else Run</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIFThenElseRun(IFThenElseRun object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>IF Then Else Steps</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>IF Then Else Steps</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIFThenElseSteps(IFThenElseSteps object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>IF Then Else Steps alt1</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>IF Then Else Steps alt1</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIFThenElseSteps_alt1(IFThenElseSteps_alt1 object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>IF Then Else Jobs Steps alt2</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>IF Then Else Jobs Steps alt2</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIFThenElseJobsSteps_alt2(IFThenElseJobsSteps_alt2 object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //MyDslSwitch
