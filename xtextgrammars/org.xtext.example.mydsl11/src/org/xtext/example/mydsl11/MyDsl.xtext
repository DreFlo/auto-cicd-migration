grammar org.xtext.example.mydsl10.MyDsl with org.eclipse.xtext.common.Terminals

generate myDsl "http://www.xtext.org/example/mydsl10/MyDsl"
//import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Pipeline:
	{Pipeline}
		
		(
		
		(NAME Name0=EString NEWLINE?) |
		
		('on:'  ( (BEGIN (when+=When)+ END)  | Trigger=EString) NEWLINE?)|
		
		('env:' (BEGIN (pipeline_envirnonment+=Environment)+ END) NEWLINE?) |
		
		('jobs:' (BEGIN ( job+=JobIfThenElse)+ END) NEWLINE?) |
		
		(pipeline_envirnonment+=Environment NEWLINE?)
		
		)*
		
	;

When:

	(Trigger=TRIGGERS)
	(BEGIN
		(environment_when+=Environment)+
	END)?
		// | ('Timer' Timer=EString)
	;

JobIfThenElse:
	
	option=(IfThenElse|Job)
	
;

Job:
	
	(Allow_faillure?='Allow_faillure')?
	
	(Name1=KEY)
	
	(BEGIN
		 
		
		(
		
		(NAME (Description+=EString) ) |
		
		(('env:' | 'secrets:') (BEGIN (depends+=Environment)+ END)) |
		
		
		(('runs-on:' | 'needs:' | "uses:")  tool_framework_job+=Tool_framework ) |
		
		('outputs:'  (BEGIN (output+=Artifact)+ END)) |
		
		(ifthenelse+=IfThenElse) |
		
		(steps+=Steps) | 
		
		(strategy+=Strategy)
		
		
		)+
	END);

Strategy:
	'strategy:'
	 (BEGIN ("fail-fast:"  fail_fast=EBoolean NEWLINE?)? 
	 	("matrix:" (BEGIN 
	 		(input+=Artifact NEWLINE?)+ END
	 	)? ("fail-fast:"  fail_fast=EBoolean NEWLINE?)? )?  END
	 	
	 )
;
Steps:
	'steps:' 
			
		(BEGIN	
			
			( steps+=(IFThenElseSteps|StepOptions) NEWLINE? )+
				
		
		END)? 
			
;

StepOptions:
	stepOption=( Steps1 | Steps2 | Steps3  )
;

Steps1:
		 
	(("- uses:"|"uses:") tool_framework_step+=Tool_framework) 
				
	(BEGIN
		(("with:"|"env:")
			(BEGIN
				(environemnt_job+=Environment NEWLINE?)+
			END)* NEWLINE?)+
	END)? 
						
;

Steps2:
	
	'env:' 
	(BEGIN 
		(depends+=Environment NEWLINE)*
	END)
;

Steps3:
	command+=Command 
;

Tool_framework:
	{Tool_framework}
	(Name5=ALPHANUMERICSTRING)
	;

Environment:
	
		
		
		
		
		(Key=(KEY | TRIGGERS)  Value=(EString)) | 
		
		(("path: |" | Key=KEY )
			(BEGIN
				("- "? Value=ALPHANUMERICSTRING)*
			END)?
		) 
		
		
	;

Artifact:

		(Key=(KEY|TRIGGERS)  Value=EString) | 
		
		(Key=KEY
			(BEGIN
				Value=EString
			END)
		) ;

Command:
		
		Command1 | Command2 
	 	
;

Command1:
 	
 	("- run:" (tool+=Tool_framework(Parameters+=EString?))
 		
	 	(BEGIN
	 		"env:"
	 		(BEGIN 
	 			(environment_command+=Environment)+
	 		END)
	 	END
	 	)?
	 ) 
	 	
;

Command2:
		
		NAME (Description+=EString)
	 		
	 	(BEGIN  
	 	 
	 	
	 	 	 ( command_options+= ( IFThenElseSteps | Command2Env | Command2RunMultiple | Command2RunOne | Command2Uses | Command2RunTool) )+
	 	 	
	 	
	 	
	 	END)?
;

Command2Env:
	 	 		
	("env:"|"with:") 
	 	 	
	 	(BEGIN 
	 	 		
	 	 		
	 	 ( ((environment_command+=Environment) ) NEWLINE? )+
	 	 		
	 	 		
	 	 		
	 	END)? 
;

Command2RunMultiple:
		("run: |" | "run: <" | "run: >")
	 		(BEGIN (Parameters+=EString NEWLINE)* Parameters+=EString END)? 
	 	
;

Command2RunOne:
	("run:" | "run: ") ( (command_conditional+=IFThenElseRun) |  (tool+=Tool_framework  Parameters+=EString?) | command_string+=STRING)  NEWLINE?
	
;

Command2Uses:
	("- uses:"|"uses:") (tool+=Tool_framework) NEWLINE?
		
			
;

Command2RunTool:
		(toolkey+=KEY Parameters+=EString? NEWLINE?)
;

/*IfThenElse:
	'[[- if ' Condition=EString "]]"
		('Condition' Condition=EString)?
		('if' '{' if+=Command ( ",separator" if+=Command)* '}' )?
		('else' '{' else+=Command ( ",separator" else+=Command)* '}' )?
		('ifelse' '{' ifelse+=IfThenElse ( ",separator" ifelse+=IfThenElse)* '}' )?
		('elseif' '{' elseif+=IfThenElse ( ",separator" elseif+=IfThenElse)* '}' )?
	'}'; */
	
IfThenElse:
	alt = (IfThenElse_alt1 | IFThenElseJobsSteps_alt2)
;

IfThenElse_alt1:
	'[[- if ' Condition=EString  NEWLINE?
	
	(if+=Job)?
	
	
	( "[[- else]]" NEWLINE?
		
		(else+=Job)?
		
	)?
		
	'[[- end]]' 
;

IFThenElseRun:
	'[[- if ' Condition=ALPHANUMERICSTRING
	
	(if=(EString))?
	
	
	( "[[- else]]"
		
		(else=(EString))?
		
	)?
		
	'[[- end]]'
;

IFThenElseSteps:
	
	alt = ( IFThenElseSteps_alt1 | IFThenElseJobsSteps_alt2)
	
;

IFThenElseSteps_alt1:
	'[[- if ' Condition=ALPHANUMERICSTRING NEWLINE?
	
	(if+=StepOptions NEWLINE?)+
	
	
	( "[[- else]]" NEWLINE?
		
		(elsef+=StepOptions NEWLINE?)+
		
	)?
		
	'[[- end]]'
;

IFThenElseJobsSteps_alt2:
	
	'if:' Condition=EString
;


EString:
  (ALPHANUMERICSTRING | STRING | EBoolean | TRIGGER_WORDS)+;
  
EBoolean:
	'true' | 'false';



terminal TRIGGER_WORDS:  ( "push" | "pull_request" | "check_suite" 
	| "create" | "delete" | "deployment" | "deployment_status" | "discussion" | "fork"
	| "gollum" | "issue_comment" | "release" | "schedule" | "issues" | "workflow_dispatch" | "merge_group:"|"repository_dispatch");


terminal NAME: "Name:" | "name:" | "- name:" | "- name : " | "- id:";

terminal TRIGGERS: TRIGGER_WORDS":";

terminal HTTP: "https:" | "http:";

terminal CHARACTERS: (';' | '+' | '!' | '&' | '(' | ')' | '=' | '>' | '<'  | ','| '*' | '{' | '}' | '.' | '-' | '\\' | '/' | '%' | '$'  | '@' | "[" | "]" | "_" | '"'  | "'" | 'A'..'Z' | 'a'..'z' ) ;

terminal ALPHANUMERICSTRING:  (HTTP | CHARACTERS | INT)+ | "- cron " | "- cron" | "- master" | "- master " | "- main";

terminal KEY: ALPHANUMERICSTRING":";

terminal NEWLINE:
// New line on DOS or Unix 
    '\r'? '\n';
    
terminal BEGIN: 'synthetic:BEGIN';  // increase indentation
terminal END: 'synthetic:END';      // decrease indentation